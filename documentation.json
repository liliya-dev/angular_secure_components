{
    "pipes": [],
    "interfaces": [
        {
            "name": "Item",
            "id": "interface-Item-d387b2c598d65dac5f803a5094b54cdd",
            "file": "src/app/molecules/menu/composite-menu/composite-menu.component.ts",
            "type": "interface",
            "sourceCode": "import { Component, Input, ViewEncapsulation } from '@angular/core';\n\ninterface Item {\n  title: string;\n  sections: string[]\n}\n\n@Component({\n  selector: 'app-composite-menu',\n  templateUrl: './composite-menu.component.html',\n  styleUrls: ['./composite-menu.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\n\nexport class CompositeMenuComponent {\n  @Input() items: Item[];\n\n  active: string = '';\n\n  handlClick(event: any, i: string) {\n    event.preventDefault();\n    this.active = i;\n  }\n}\n",
            "properties": [
                {
                    "name": "sections",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "title",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "MobileItems",
            "id": "interface-MobileItems-0be84ba3302bfca6feae500bc9a9d3e4",
            "file": "src/app/organisms/scan-report/scan-report.component.ts",
            "type": "interface",
            "sourceCode": "import { Component, ElementRef, OnInit, HostListener, ViewEncapsulation, ViewChild } from '@angular/core';\n\ninterface SideItems {\n  title: string;\n  sections?: string[],\n}\n\ninterface MobileItems {\n  title: string;\n  svgPath: string,\n  isActive: boolean\n}\n\n@Component({\n  selector: 'app-scan-report',\n  templateUrl: './scan-report.component.html',\n  styleUrls: ['./scan-report.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\n\nexport class ScanReportComponent implements OnInit {\n  items: string[] = ['reports', 'domains', 'users', 'account', 'request portal'];\n  itemsToSearch: string[] = ['My current company', 'My clients company', 'secure privacy', 'secure privacy2', 'secure privacy3'];\n  leftSideMenuItems: SideItems[] = [\n    { title: 'scan'},\n    { title: 'style'},\n    { title: 'cookie banner'},\n    { title: 'IAB 2.0 settings'},\n    { title: 'Preference Center', sections: ['GDPR/ePrivacy', 'CCPA', 'LGPD']},\n    { title: 'data request form'},\n    { title: 'Preference Center', sections: ['Privacy Policy', 'Cookie Declaration', 'Embed On Website']},\n    { title: 'cookie classification'},\n    { title: 'languages'},\n    { title: 'coverage'},\n    { title: 'installation'},\n  ]\n  mobileMenuItems: MobileItems[] = [\n    { title: 'Reports', svgPath: 'assets/images/menu/Reports.svg',   isActive: false,},\n    { title: 'Domains', svgPath: 'assets/images/menu/Domains.svg',   isActive: false,},\n    { title: 'Account', svgPath: 'assets/images/menu/Account.svg',   isActive: false,},\n    { title: 'Options', svgPath: 'assets/images/menu/Options.svg',   isActive: false,},\n  ]\n  isMobile: boolean = false;\n  isSideMenuVisible: boolean = false;\n\n  toggleSideMenu() {\n    this.isSideMenuVisible = !this.isSideMenuVisible;\n  }\n  \n  @ViewChild('nav') element: ElementRef;\n\n  @HostListener('window:resize', ['$event'])\n  onResize(event: any) {\n    this.isMobile = (event.target.innerWidth < 800) ? true : false;\n  }\n\n  @HostListener('document:click', ['$event'])\n\tonClick(event: Event) {\n    if (!this.element.nativeElement.contains(event.target)) {\n      this.isSideMenuVisible = false;\n    }\n  }\n  \n  ngOnInit(): void {\n    this.isMobile = (window.innerWidth < 800) ? true : false;\n  }\n}\n",
            "properties": [
                {
                    "name": "isActive",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "svgPath",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "title",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "Module",
            "id": "interface-Module-b986dea163c7700978cb484a339248e7",
            "file": "src/app/molecules/form-screens/form-screen-fifth/form-screen-fifth.component.ts",
            "type": "interface",
            "sourceCode": "import { Component } from '@angular/core';\n\ninterface Module {\n  title: string,\n  text: string\n}\n\n@Component({\n  selector: 'app-form-screen-fifth',\n  templateUrl: './form-screen-fifth.component.html',\n  styleUrls: ['./form-screen-fifth.component.scss']\n})\n\nexport class FormScreenFifthComponent {\n  selectedModules: string[] = [];\n  modules: Module[] = [\n    {\n      title: \"GDPR, eprivacy\",\n      text: \"Europe\",\n    },\n    {\n      title: \"Thailand\",\n      text: \"Bangkok\",\n    },\n    {\n      title: \"Calofornia\",\n      text: \"Europe \",\n    },\n    {\n      title: \"CCPA\",\n      text: \"Europe\",\n    },\n    {\n      title: \"Canada\",\n      text: \"Ottawa\",\n    },\n    {\n      title: \"Dubai\",\n      text: \"Dubai \",\n    },\n    {\n      title: \"GDPR, eprivacy2\",\n      text: \"Europe\",\n    },\n    {\n      title: \"Thailand2\",\n      text: \"Bangkok\",\n    },\n    {\n      title: \"Calofornia2\",\n      text: \"Europe \",\n    },\n  ]\n\n  selectModule(title: string) {\n    if (this.selectedModules.includes(title)) {\n      this.selectedModules = this.selectedModules.filter(module => module !== title);\n    } else {\n      this.selectedModules = [...this.selectedModules, title];\n    }\n  }\n}\n",
            "properties": [
                {
                    "name": "text",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "title",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "Module",
            "id": "interface-Module-aca7099c3a068b1af5bdf9dc534fb0c5-1",
            "file": "src/app/molecules/form-screens/form-screen-fourth/form-screen-fourth.component.ts",
            "type": "interface",
            "sourceCode": "import { Component } from '@angular/core';\n\ninterface Module {\n  title: string,\n  text: string\n}\n\n@Component({\n  selector: 'app-form-screen-fourth',\n  templateUrl: './form-screen-fourth.component.html',\n  styleUrls: ['./form-screen-fourth.component.scss']\n})\nexport class FormScreenFourthComponent {\n\n  selectedModules: string[] = [];\n  modules: Module[] = [\n    {\n      title: \"GDPR, eprivacy\",\n      text: \"Europe\",\n    },\n    {\n      title: \"Thailand\",\n      text: \"Bangkok\",\n    },\n    {\n      title: \"Calofornia\",\n      text: \"Europe \",\n    },\n    {\n      title: \"CCPA\",\n      text: \"Europe\",\n    },\n    {\n      title: \"Canada\",\n      text: \"Ottawa\",\n    },\n    {\n      title: \"Dubai\",\n      text: \"Dubai \",\n    },\n  ]\n\n  selectModule(title: string) {\n    if (this.selectedModules.includes(title)) {\n      this.selectedModules = this.selectedModules.filter(module => module !== title);\n    } else {\n      this.selectedModules = [...this.selectedModules, title];\n    }\n  }\n}\n",
            "properties": [
                {
                    "name": "text",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "title",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "Module-1"
        },
        {
            "name": "Module",
            "id": "interface-Module-ae34384e6e13eceb75d03fb11c334547-2",
            "file": "src/app/molecules/form-screens/form-screen-third/form-screen-third.component.ts",
            "type": "interface",
            "sourceCode": "import { Component, ViewEncapsulation } from '@angular/core';\n\ninterface Module {\n  title: string,\n  text: string,\n  src: string\n}\n\n@Component({\n  selector: 'app-form-screen-third',\n  templateUrl: './form-screen-third.component.html',\n  styleUrls: ['./form-screen-third.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class FormScreenThirdComponent {\n  selectedModules: string[] = [];\n  modules: Module[] = [\n    {\n      title: \"GDPR, eprivacy\",\n      text: \"Europe\",\n      src: \"assets/images/flags/euro.png\"\n    },\n    {\n      title: \"CCPA\",\n      text: \"California\",\n      src: \"assets/images/flags/ccpa.png\"\n    },\n    {\n      title: \"LGPD\",\n      text: \"Brasil \",\n      src: \"assets/images/flags/lgpd.png\"\n    }\n  ]\n\n  selectModule(title: string) {\n    if (this.selectedModules.includes(title)) {\n      this.selectedModules = this.selectedModules.filter(module => module !== title);\n    } else {\n      this.selectedModules = [...this.selectedModules, title];\n    }\n  }\n}\n",
            "properties": [
                {
                    "name": "src",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "text",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "title",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 2,
            "duplicateName": "Module-2"
        },
        {
            "name": "SideItems",
            "id": "interface-SideItems-0be84ba3302bfca6feae500bc9a9d3e4",
            "file": "src/app/organisms/scan-report/scan-report.component.ts",
            "type": "interface",
            "sourceCode": "import { Component, ElementRef, OnInit, HostListener, ViewEncapsulation, ViewChild } from '@angular/core';\n\ninterface SideItems {\n  title: string;\n  sections?: string[],\n}\n\ninterface MobileItems {\n  title: string;\n  svgPath: string,\n  isActive: boolean\n}\n\n@Component({\n  selector: 'app-scan-report',\n  templateUrl: './scan-report.component.html',\n  styleUrls: ['./scan-report.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\n\nexport class ScanReportComponent implements OnInit {\n  items: string[] = ['reports', 'domains', 'users', 'account', 'request portal'];\n  itemsToSearch: string[] = ['My current company', 'My clients company', 'secure privacy', 'secure privacy2', 'secure privacy3'];\n  leftSideMenuItems: SideItems[] = [\n    { title: 'scan'},\n    { title: 'style'},\n    { title: 'cookie banner'},\n    { title: 'IAB 2.0 settings'},\n    { title: 'Preference Center', sections: ['GDPR/ePrivacy', 'CCPA', 'LGPD']},\n    { title: 'data request form'},\n    { title: 'Preference Center', sections: ['Privacy Policy', 'Cookie Declaration', 'Embed On Website']},\n    { title: 'cookie classification'},\n    { title: 'languages'},\n    { title: 'coverage'},\n    { title: 'installation'},\n  ]\n  mobileMenuItems: MobileItems[] = [\n    { title: 'Reports', svgPath: 'assets/images/menu/Reports.svg',   isActive: false,},\n    { title: 'Domains', svgPath: 'assets/images/menu/Domains.svg',   isActive: false,},\n    { title: 'Account', svgPath: 'assets/images/menu/Account.svg',   isActive: false,},\n    { title: 'Options', svgPath: 'assets/images/menu/Options.svg',   isActive: false,},\n  ]\n  isMobile: boolean = false;\n  isSideMenuVisible: boolean = false;\n\n  toggleSideMenu() {\n    this.isSideMenuVisible = !this.isSideMenuVisible;\n  }\n  \n  @ViewChild('nav') element: ElementRef;\n\n  @HostListener('window:resize', ['$event'])\n  onResize(event: any) {\n    this.isMobile = (event.target.innerWidth < 800) ? true : false;\n  }\n\n  @HostListener('document:click', ['$event'])\n\tonClick(event: Event) {\n    if (!this.element.nativeElement.contains(event.target)) {\n      this.isSideMenuVisible = false;\n    }\n  }\n  \n  ngOnInit(): void {\n    this.isMobile = (window.innerWidth < 800) ? true : false;\n  }\n}\n",
            "properties": [
                {
                    "name": "sections",
                    "type": "string[]",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "title",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        }
    ],
    "injectables": [],
    "classes": [
        {
            "name": "AppPage",
            "id": "class-AppPage-a0db91bfa3b9914e9048612074084ee6",
            "file": "e2e/src/app.po.ts",
            "type": "class",
            "sourceCode": "import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo(): Promise<unknown> {\n    return browser.get(browser.baseUrl) as Promise<unknown>;\n  }\n\n  getTitleText(): Promise<string> {\n    return element(by.css('app-root .content span')).getText() as Promise<string>;\n  }\n}\n",
            "properties": [],
            "methods": [
                {
                    "name": "getTitleText",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<string>",
                    "typeParameters": [],
                    "line": 8
                },
                {
                    "name": "navigateTo",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<unknown>",
                    "typeParameters": [],
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-975f54bb838ee9b0734fa37282e9c0f9",
            "file": "src/app/app.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "\"Cookies by category\"",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\n\n\nexport class AppComponent implements OnInit {\n\n  title=\"Cookies by category\"\n\n  ngOnInit() {\n\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "#chart {\n  background-color: violet;\n  width: 256px;\n  height: 152px;\n  overflow: hidden;\n  background-color: white;\n  border-radius: 12px 30px;\n  position: relative;\n  margin-top: 50px;\n}\n\n.g {\n  background: #8F8F8F;\n  padding: 80px;\n  height: 800px;\n  width: 800px;\n}\n\n.chart {\n  color: var(--secondary-color);\n  &__title {\n    position: absolute;\n    top: 6px;\n    left: 16px;\n    width: 88px;\n  }\n\n  &__value {\n    position: absolute;\n    top: 83px;\n    left: 49px;\n    width: 30px;\n    text-align: center;\n\n    &.fs-h3 {\n      font-weight: 800;\n    }\n  }\n\n  &__legend {\n    position: absolute;\n    z-index: 3;\n    top: 0;\n    left: 120px;\n    width: 144px;\n    height: 152px;\n    padding: 8px 16px;\n    background-color: rgba(var(--secondary-color-code), 0.05);\n    overflow-y: scroll;\n\n    &-item {\n      display: flex;\n      margin-bottom: 6px;\n\n      &:hover {\n        cursor: pointer;\n      }\n    }\n  }\n\n  &__marker {\n    width: 10px;\n    height: 10px;\n    min-width: 10px;\n    border-radius: 50%;\n    margin-right: 8px;\n  }\n}\n\n.pielayer {\n  transform: scale(0.30) translateX(-245px) translateY(110px)!important;\n}\n\n.js-plotly-plot .plotly .modebar--hover > :not(.watermark) {\n  display: none;\n}\n\n.surface {\n  stroke-width: 8!important;\n  stroke: white!important;\n  \n  &:hover {\n    cursor: pointer;\n    stroke-width: 12px!important;\n    stroke-dasharray: 550 0!important;\n    opacity: 0.8!important;\n    background:linear-gradient(to right, #e5405e 0%, #e5405e 15%, rgba(46,2014,113,0.8) 30%, rgba(39,174,96,0.3)45%,#3fffa2 60%, #1a9be0 73%, #ba68ed 100%)!important;\n  }\n}\n\n.slicetext {\n  display: none!important;\n}\n\n.main-svg {\n  background-color: transparent!important;\n}\n\n.bg {\n  // fill: rgba(var(--secondary-color-code), 0.05)!important;\n  width: 116px !important;\n}\n\n.legend {\n  width: 40px!important;\n  transform: translate(120px, 20px)!important;\n}\n\n",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<app-roll-up>\n  <h2>content</h2>\n</app-roll-up>"
        },
        {
            "name": "CardComponent",
            "id": "component-CardComponent-6d15749d9e30bca96093e8262a56e615",
            "file": "src/app/atoms/card/card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-card",
            "styleUrls": [
                "./card.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./card.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "isActive",
                    "line": 13,
                    "type": "string"
                },
                {
                    "name": "src",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "text",
                    "line": 10,
                    "type": "string"
                },
                {
                    "name": "title",
                    "line": 11,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "classes",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnChanges } from '@angular/core';\n\n@Component({\n  selector: 'app-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.scss']\n})\n\nexport class CardComponent implements OnChanges {\n  @Input() text: string;\n  @Input() title: string;\n  @Input() src: string;\n  @Input() isActive: string;\n\n  classes: string;\n\n  ngOnChanges() {\n    this.classes = this.isActive ? \"app-card active\" : \"app-card\";\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-card {\n  width: fit-content;\n  padding: 1px;\n\n  background: rgba(var(--secondary-color-code), 0.5);\n  border-radius: 12px;\n  text-align: center;\n\n  &.active {\n    position: relative;\n    background: var(--success-grad-light);\n      \n    &::after {\n      content: \"\";\n      position: absolute;\n      top: 8px;\n      right: 8px;\n\n      width: 19px;\n      height: 19px;\n\n      background: var(--success-grad-light);\n      border-radius: 50%;\n    }\n\n    &:before {\n      content: '';\n      position: absolute;\n      top: 8px;\n      right: 8px;\n      z-index: 2;\n\n      box-sizing: border-box;\n      width: 19px;\n      height: 19px;\n      border-radius: 50%;\n\n      background: no-repeat center url('../../../assets/images/checkbox.svg');\n    }\n  }\n\n  &:hover {\n    background: var(--success-grad-light);\n    cursor: pointer;\n  }\n\n  &__wrapper {\n    border-radius: 12px;\n    background-color: var(--text-color);\n  }\n\n  &__text-wrapper {\n    width: 100%;\n    word-wrap: break-word;\n  }\n\n  &__container {\n    width: 130px;\n    padding: 22px 15px 28px;\n\n    border-radius: 12px;\n    background-color: rgba(var(--text-color-code), 0.15);\n    color: var(--secondary-color);\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n      & > img {\n        margin-bottom: 20px;\n        width: 44px;\n        height: 50px;\n      }\n    }\n  }\n\n@media screen and (max-width: 600px) {\n  .app-card {\n    width: 100%;\n\n    &.active {\n\n      &::after {\n        top: 12px;\n        left: 58px;\n      }\n    }\n\n    &__wrapper  {\n      width: 100%;\n    } \n\n    &__container {\n      flex-direction: row;\n      padding: 13px 15px;\n      width: 100%;\n\n      & > img {\n        margin-right: 50px;\n        margin-bottom: 0;\n        width: 55px;\n        height: 62px;\n      }\n    }\n\n    &__text-wrapper {\n      text-align: center;\n      width: 50%;\n    }\n  }\n}",
                    "styleUrl": "./card.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnChanges"
            ],
            "templateData": "<div [ngClass]=\"classes\">\n  <div class=\"app-card__wrapper\">\n    <div class=\"app-card__container\">\n      <img [src]='src' alt=\"text + 'flag'\" />\n      <div class=\"app-card__text-wrapper\">\n        <p class=\"fs-12-gramm-400\">{{ title }}</p>\n        <p class=\"fs-10-sofia-300\">{{ text }}</p>\n      </div>\n    </div>\n  </div>\n</div>"
        },
        {
            "name": "CardWithCenterTextComponent",
            "id": "component-CardWithCenterTextComponent-3c6a012ddc06ec3683ec1e7bd7902a7d",
            "file": "src/app/atoms/card/card-with-center-text/card-with-center-text.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-card-with-center-text",
            "styleUrls": [
                "./card-with-center-text.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./card-with-center-text.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "text",
                    "line": 10,
                    "type": "string"
                },
                {
                    "name": "title",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "value",
                    "line": 9,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-card-with-center-text',\n  templateUrl: './card-with-center-text.component.html',\n  styleUrls: ['./card-with-center-text.component.scss']\n})\nexport class CardWithCenterTextComponent {\n  @Input() value: string;\n  @Input() text: string;\n  @Input() title: string;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".card-with-center-text  {\n  width: 256px;\n  height: 152px;\n  overflow: hidden;\n\n  border-radius: 12px 30px;\n  color: var(--secondary-color);\n  padding: 8px 16px;\n  text-align: center;\n\n  &:hover {\n    box-shadow: 0px 40px 70px rgba(var(--secondary-color-code), 0.3);\n  }\n\n  &__value {\n    margin-bottom: 6px;\n  }\n\n  &__title {\n    margin-bottom: 20px;\n  }\n}",
                    "styleUrl": "./card-with-center-text.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"card-with-center-text\">\n  <p class=\"card-with-center-text__title\">{{ title }}</p>\n  <span class=\"card-with-center-text__value fs-h2-b\">{{ value }}</span>\n  <p class=\"card-with-center-text__text fs-12-sofia-300\">{{ text }}</p>\n</div>\n"
        },
        {
            "name": "CardWithColumnsTextComponent",
            "id": "component-CardWithColumnsTextComponent-3bcd051ff19f921298debbd4c20afa33",
            "file": "src/app/atoms/card/card-with-columns-text/card-with-columns-text.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-card-with-columns-text",
            "styleUrls": [
                "./card-with-columns-text.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./card-with-columns-text.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "texts",
                    "line": 10,
                    "type": "string[]"
                },
                {
                    "name": "title",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "values",
                    "line": 9,
                    "type": "string[]"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-card-with-columns-text',\n  templateUrl: './card-with-columns-text.component.html',\n  styleUrls: ['./card-with-columns-text.component.scss']\n})\nexport class CardWithColumnsTextComponent {\n  @Input() values: string[];\n  @Input() texts: string[];\n  @Input() title: string;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".card-with-columns-text  {\n  width: 256px;\n  height: 152px;\n  overflow: hidden;\n\n  border-radius: 12px 30px;\n  color: var(--secondary-color);\n  padding: 8px 16px;\n\n  &:hover {\n    box-shadow: 0px 40px 70px rgba(var(--secondary-color-code), 0.3);\n  }\n\n  &__container {\n    display: flex;\n    align-items: flex-start;\n  }\n\n  &__left {\n    width: 47%;\n    margin-right: 16px;\n  }\n\n  &__right {\n    width: 50%;\n  }\n\n  &__value {\n    margin-bottom: 6px;\n  }\n\n  &__title {\n    margin-bottom: 20px;\n  }\n}",
                    "styleUrl": "./card-with-columns-text.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"card-with-columns-text\">\n  <p class=\"card-with-columns-text__title fs-14-gramm-400\">{{ title }}</p>\n  <div class=\"card-with-columns-text__container\">\n    <div class=\"card-with-columns-text__left\">\n      <span class=\"card-with-columns-text__value fs-h2-b\">{{ values[0] }}</span>\n      <p class=\"card-with-columns-text__text fs-12-sofia-300\">{{ texts[0] }}</p>\n    </div>\n    <div class=\"card-with-columns-text__right\">\n      <span class=\"card-with-columns-text__value fs-h2-b\">{{ values[1] }}</span>\n      <p class=\"card-with-columns-text__text fs-12-sofia-300\">{{ texts[1] }}</p>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "CardWithDonutChartComponent",
            "id": "component-CardWithDonutChartComponent-fc70e439e32db532e483df52fc9438f0",
            "file": "src/app/atoms/card/card-with-donut-chart/card-with-donut-chart.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-card-with-donut-chart",
            "styleUrls": [
                "./card-with-donut-chart.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./card-with-donut-chart.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "colors",
                    "line": 12,
                    "type": "string[]"
                },
                {
                    "name": "labels",
                    "line": 13,
                    "type": "string[]"
                },
                {
                    "name": "title",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "values",
                    "line": 14,
                    "type": "string[]"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "activeValue",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "data",
                    "defaultValue": "[{\n    type: 'pie',\n    values: [],\n    labels: [],\n    domain: {column: 1},\n    hoverinfo: 'none',\n    hole: .55,\n    automargin: false,\n    marker: {\n      colors: this.defaultColors,\n    }\n  }]",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "defaultColors",
                    "defaultValue": "['#509AAF', '#7DD8C7', '#645FCE', '#9ED0E0', '#F9BE5A', '#645FCD', \"#9ED0E0\", \"#0263BC\", \"#24B04B;\"]",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "layout",
                    "defaultValue": "{\n    margin: {\"t\": 0, \"b\": 0, \"l\": 0, \"r\": 0},\n    annotations: [\n      {\n        showarrow: false,\n        text: '',\n      },\n    ],\n    height: 400,\n    width: 600,\n    showlegend: false,\n    grid: {rows: 1, columns: 2}\n  }",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 32
                }
            ],
            "methodsClass": [
                {
                    "name": "changeNumberOnChartsClick",
                    "args": [
                        {
                            "name": "data",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "changeNumberOnLegendClick",
                    "args": [
                        {
                            "name": "index",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-card-with-donut-chart',\n  templateUrl: './card-with-donut-chart.component.html',\n  styleUrls: ['./card-with-donut-chart.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\n\nexport class CardWithDonutChartComponent implements OnInit {\n  @Input() title: string;\n  @Input() colors?: string[];\n  @Input() labels: string[];\n  @Input() values: string[];\n\n  activeValue: number;\n  defaultColors=['#509AAF', '#7DD8C7', '#645FCE', '#9ED0E0', '#F9BE5A', '#645FCD', \"#9ED0E0\", \"#0263BC\", \"#24B04B;\"];\n\n  data = [{\n    type: 'pie',\n    values: [],\n    labels: [],\n    domain: {column: 1},\n    hoverinfo: 'none',\n    hole: .55,\n    automargin: false,\n    marker: {\n      colors: this.defaultColors,\n    }\n  }];\n  \n  layout = {\n    margin: {\"t\": 0, \"b\": 0, \"l\": 0, \"r\": 0},\n    annotations: [\n      {\n        showarrow: false,\n        text: '',\n      },\n    ],\n    height: 400,\n    width: 600,\n    showlegend: false,\n    grid: {rows: 1, columns: 2}\n  };\n\n  changeNumberOnChartsClick(data) {\n    this.activeValue = data.points[0].value;\n  }\n\n  changeNumberOnLegendClick(index: number) {\n    this.activeValue=this.data[0].values[index];\n  }\n\n  ngOnInit(): void {\n    this.data[0].values = this.values;\n    this.data[0].labels = this.labels;\n    this.activeValue = this.data[0].values[0];\n    \n    if (this.colors) {\n      this.data[0].marker.colors = this.colors;\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "\n.chart {\n  position: relative;\n  width: 256px;\n  height: 152px;\n  overflow: hidden;\n\n  border-radius: 12px 30px;\n  color: var(--secondary-color);\n  background-color: white;\n\n  &:hover {\n    box-shadow: 0px 40px 70px rgba(var(--secondary-color-code), 0.3);\n  }\n\n  &__title {\n    position: absolute;\n    top: 10px;\n    left: 16px;\n    width: 88px;\n  }\n\n  &__value {\n    position: absolute;\n    top: 75px;\n    left: 49px;\n    width: 30px;\n    text-align: center;\n\n    &.fs-h3 {\n      font-weight: 800;\n    }\n  }\n\n  &__legend {\n    position: absolute;\n    top: 0;\n    left: 120px;\n    z-index: 3;\n\n    width: 154px;\n    height: 152px;\n    padding: 8px 26px 8px 16px;\n    background-color: rgba(var(--secondary-color-code), 0.05);\n    overflow-y: scroll;\n\n    &::-webkit-scrollbar { \n      display: none; \n    }\n    \n    &-item {\n      display: flex;\n      margin-bottom: 6px;\n\n      &:hover {\n        cursor: pointer;\n      }\n    }\n  }\n\n  &__marker {\n    width: 10px;\n    height: 10px;\n    min-width: 10px;\n    margin-right: 8px;\n    border-radius: 50%;\n  }\n}\n\n/* ####### override css rules for plotify module ###### */\n\n.pielayer {\n  transform: scale(0.30) translateX(-245px) translateY(110px)!important;\n}\n\n.js-plotly-plot .plotly .modebar--hover > :not(.watermark) {\n  display: none;\n}\n\n.surface {\n  stroke-width: 8!important;\n  stroke: white!important;\n  \n  &:hover {\n    cursor: pointer;\n    stroke-width: 12px!important;\n    stroke-dasharray: 550 0!important;\n    opacity: 0.8!important;\n    background:linear-gradient(to right, #e5405e 0%, #e5405e 15%, rgba(46,2014,113,0.8) 30%, rgba(39,174,96,0.3)45%,#3fffa2 60%, #1a9be0 73%, #ba68ed 100%)!important;\n  }\n}\n\n.slicetext {\n  display: none!important;\n}\n\n.main-svg {\n  background-color: transparent!important;\n}\n\n.bg {\n  width: 116px !important;\n}\n\n",
                    "styleUrl": "./card-with-donut-chart.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<div id=\"chart\" class=\"chart\">\n  <div class=\"chart__title fs-14-gramm-400\">\n    {{ title }}\n  </div>\n  <plotly-plot \n    (plotlyClick)=\"changeNumberOnChartsClick($event)\"\n    [data]=\"data\" \n    [layout]=\"layout\"\n  ></plotly-plot>\n  <div class=\"chart__value fs-h3-b\"><p>{{ activeValue }}</p></div>\n  <ul class=\"chart__legend\">\n    <li \n      class=\"chart__legend-item fs-12-sofia-300\" \n      *ngFor=\"let item of data[0].labels; let i = index\"\n      (click)=\"changeNumberOnLegendClick(i)\"\n    >\n      <div \n        class=\"chart__marker\" \n        [ngStyle]=\"{ 'background-color': data[0].marker.colors[i] }\"\n      >\n      </div>\n      {{ data[0].values[i ]}} {{ item }} \n    </li>\n  </ul>\n</div>\n\n\n"
        },
        {
            "name": "CheckboxInputSimpleComponent",
            "id": "component-CheckboxInputSimpleComponent-09c828eac3e49b97c36022999f7673ca",
            "file": "src/app/atoms/inputs/checkbox/checkbox-input-simple/checkbox-input-simple.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-checkbox-input-simple",
            "styleUrls": [
                "./checkbox-input-simple.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./checkbox-input-simple.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "isChecked",
                    "line": 10,
                    "type": "boolean"
                },
                {
                    "name": "title",
                    "line": 11,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-checkbox-input-simple',\n  templateUrl: './checkbox-input-simple.component.html',\n  styleUrls: ['./checkbox-input-simple.component.scss']\n})\n\nexport class CheckboxInputSimpleComponent {\n  @Input() isChecked: boolean;\n  @Input() title: string;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-checkbox-input-simple {\n  display: none;\n\n  &__title {\n    margin-left: 40px;\n    color: var(--secondary-color);\n    line-height: 24px;\n  }\n\n  &__label {\n    display: block;\n    position: relative;\n\n    &:after {\n        content: \"\";\n        position: absolute;\n        top: 0;\n\n        display: flex;\n        justify-content: center;\n        align-items: center;\n\n        box-sizing: border-box;\n        width: 24px;\n        height: 24px;\n        padding-bottom: 10px;\n        padding-top: 7px;\n\n        border-radius: 4px;\n        border: 1px solid rgba(var(--secondary-color-code), 0.3);\n    }\n  }\n}\n\n.app-checkbox-input-simple:checked + .app-checkbox-input-simple__label {\n  &:after {\n    background: center no-repeat url('../../../../../assets/images/checkboxDark.svg');\n    border: 1px solid rgba(var(--secondary-color-code), 1);\n  }\n}\n",
                    "styleUrl": "./checkbox-input-simple.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div  class=\"app-checkbox-input-simple__container\">\n  <input\n    type=\"checkbox\" \n    id=\"checkbox-input-simple\"\n    name=\"checkbox-input-simple\" \n    class=\"app-checkbox-input-simple\"\n    [checked]=\"isChecked\"\n  >\n  <label for=\"checkbox-input-simple\" class=\"app-checkbox-input-simple__label\">\n    <p class=\"app-checkbox-input-simple__title fs-16-sofia-300\" *ngIf=\"title!==''\">\n      {{title}}\n    </p>\n  </label>\n</div>\n"
        },
        {
            "name": "CheckboxInputSwitchComponent",
            "id": "component-CheckboxInputSwitchComponent-78ac8be3277414c4415085c39ab5604e",
            "file": "src/app/atoms/inputs/checkbox/checkbox-input-switch/checkbox-input-switch.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-checkbox-input-switch",
            "styleUrls": [
                "./checkbox-input-switch.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./checkbox-input-switch.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "isChecked",
                    "line": 10,
                    "type": "boolean"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-checkbox-input-switch',\n  templateUrl: './checkbox-input-switch.component.html',\n  styleUrls: ['./checkbox-input-switch.component.scss']\n})\n\nexport class CheckboxInputSwitchComponent {\n  @Input() isChecked: boolean;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-checkbox-input-switch {\n  display: none;\n\n  &__label {\n    position: relative;\n    display: block;\n    width: 35px;\n    height: 12px;\n\n    border-radius: 18px;\n    transition: 0.3s;\n    background: rgba(var(--secondary-color-code), 0.2);\n\n    &:after {\n      content: \"\";\n      position: absolute;\n      top: -3px;\n      left: 0;\n\n      display: flex;\n      justify-content: center;\n      align-items: center;\n\n      box-sizing: border-box;\n      width: 19px;\n      height: 19px;\n      border-radius: 50%;\n      \n      background: var(--input-bg-color);\n      box-shadow: 0px 5px 8px rgba(50, 60, 111, 0.25);\n    }\n  }\n}\n\n.app-checkbox-input-switch:checked + .app-checkbox-input-switch__label {\n  background: linear-gradient(89.52deg, hsla(137, 66%, 42%, 0.2) -46.17%, rgba(2, 99, 188, 0.2) 186.99%);\n\n  &:after {\n    transform: translateX(17px);\n    background: var(--success-grad-light);\n  }\n\n  &:before {\n    content: '';\n    position: absolute;\n    top: -3px;\n    left: 17px;\n    z-index: 2;\n\n    box-sizing: border-box;\n    width: 19px;\n    height: 19px;\n    border-radius: 50%;\n\n    background: no-repeat center url('../../../../../assets/images/checkbox.svg');\n  }\n}",
                    "styleUrl": "./checkbox-input-switch.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<input\n  type=\"checkbox\" \n  id=\"checkbox-input-switch\"\n  name=\"checkbox-input-switch\" \n  class=\"app-checkbox-input-switch\"\n  [checked]=\"isChecked\"\n>\n<label for=\"checkbox-input-switch\" class=\"app-checkbox-input-switch__label\"></label>\n"
        },
        {
            "name": "CompositeMenuComponent",
            "id": "component-CompositeMenuComponent-d387b2c598d65dac5f803a5094b54cdd",
            "file": "src/app/molecules/menu/composite-menu/composite-menu.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-composite-menu",
            "styleUrls": [
                "./composite-menu.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./composite-menu.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "items",
                    "line": 16,
                    "type": "Item[]"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "active",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methodsClass": [
                {
                    "name": "handlClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "any"
                        },
                        {
                            "name": "i",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "i",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, ViewEncapsulation } from '@angular/core';\n\ninterface Item {\n  title: string;\n  sections: string[]\n}\n\n@Component({\n  selector: 'app-composite-menu',\n  templateUrl: './composite-menu.component.html',\n  styleUrls: ['./composite-menu.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\n\nexport class CompositeMenuComponent {\n  @Input() items: Item[];\n\n  active: string = '';\n\n  handlClick(event: any, i: string) {\n    event.preventDefault();\n    this.active = i;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-composite-menu {\n  width: fit-content;\n  padding: 22px 72px 22px 32px;\n  min-width: 260px;\n  \n  border-radius: 12px 30px;\n  background-color: var(--text-color);\n  box-shadow: 0px 50px 70px rgba(44, 59, 82, 0.15);\n  \n  &__item {\n    width: fit-content;\n    margin-top: 10px;\n  }\n\n  &__section {\n    padding-left: 16px;\n  }\n}\n\n.nav-link-secondary {\n  text-transform: capitalize!important;\n}",
                    "styleUrl": "./composite-menu.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<ul class=\"app-composite-menu\">\n  <li \n    class=\"app-composite-menu__item\"\n    *ngFor=\"let item of items; let i = index\" \n  >   \n    <app-nav-link\n      [isActive]=\"active === i + item.title\"\n      [title]=\"item.title\" \n      classes=\"nav-link-secondary fs-12-gramm-400\"\n      (click)=\"handlClick($event, i + item.title)\"\n    >\n    </app-nav-link>\n    <ul class=\"app-composite-menu__section\">\n      <li \n        class=\"app-composite-menu__item\"\n        *ngFor=\"let section of item.sections; let i = index\" \n      >\n        <app-nav-link\n          [isActive]=\"active === i + section\"\n          [title]=\"section\" \n          classes=\"nav-link-secondary fs-12-gramm-400\"\n          (click)=\"handlClick($event, i + section)\"\n        >\n        </app-nav-link>\n      </li>\n    </ul>\n  </li>\n</ul>"
        },
        {
            "name": "DateMenuComponent",
            "id": "component-DateMenuComponent-a05d540f234a6c93bca5154b3dc73947",
            "file": "src/app/molecules/menu/date-menu/date-menu.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-date-menu",
            "styleUrls": [
                "./date-menu.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./date-menu.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "items",
                    "line": 10,
                    "type": "string[]"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "active",
                    "defaultValue": "0",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "handlClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "any"
                        },
                        {
                            "name": "i",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "i",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-date-menu',\n  templateUrl: './date-menu.component.html',\n  styleUrls: ['./date-menu.component.scss']\n})\n\nexport class DateMenuComponent {\n  @Input() items: string[];\n\n  active: number = 0;\n\n  handlClick(event: any, i: number) {\n    event.preventDefault();\n    this.active = i;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-date-menu {\n  display: flex;\n  align-items: center;\n\n  &__list {\n    display: flex;\n    align-items: center;\n  }\n\n  &__item {\n    padding: 0 10px 5px;\n  }\n\n  &__container {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    height: 46px;\n    padding: 0 13px;\n    margin-left: 20px;\n\n    border: 1px solid rgba(var(--secondary-color-code), 0.3);\n    border-radius: 12px;\n\n    & > img {\n      height: 18px;\n      width: 18px;\n    }\n  }\n}",
                    "styleUrl": "./date-menu.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"app-date-menu\">\n  <ul class=\"app-date-menu__list\">\n    <li \n      class=\"app-date-menu__item\"\n      *ngFor=\"let item of items; let i = index\" \n    >\n      <app-nav-link\n        [isActive]=\"active === i\"\n        [title]=\"item\" \n        classes=\"nav-link-secondary nav-link-highlited fs-12-gramm-400\"\n        (click)=\"handlClick($event, i)\"\n      >\n      </app-nav-link>\n    </li>\n  </ul>\n  <div class=\"app-date-menu__container\">\n    <img src='assets/images/calendar.png' alt=\"calendar\" />\n  </div>\n</div>\n"
        },
        {
            "name": "formInputComponent",
            "id": "component-formInputComponent-4302de89b34ccdd5b4f2e05c3f3de951",
            "file": "src/app/atoms/inputs/formInput/formInput.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-form-input",
            "styleUrls": [
                "formInput.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./formInput.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "line": 10,
                    "type": "string"
                },
                {
                    "name": "classes",
                    "line": 13,
                    "type": "string"
                },
                {
                    "name": "color",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "placeholderText",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "wrapperClasses",
                    "line": 14,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-form-input',\n  templateUrl: './formInput.component.html',\n  styleUrls: ['formInput.component.scss'],\n})\n\nexport class formInputComponent {\n  @Input() backgroundColor: string;\n  @Input() placeholderText: string;\n  @Input() color: string;\n  @Input() classes: string;\n  @Input() wrapperClasses: string;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".form-input-field {\n  width: 100%;\n  padding: 15px 16px 11px 0;\n\n  border: none;\n  border-radius: 8px;\n  background: rgba(var(--secondary-color-code), 0.05);\n  color: var(--secondary-color);\n\n  &--simple {\n    padding-left: 16px;\n  }\n\n  &--icon {\n    padding-left: 53px;\n    background: var(--input-bg-color); \n  }\n\n  &::placeholder {\n    color: rgba(var(--secondary-color-code), 0.5);\n  }\n}\n\n.form-input__wrapper {\n  position: relative;\n  width: 100%;\n  height: 46px;\n\n  &--icon {\n    &:after {\n      content: url('../../../../assets/images/Search.png');\n      position: absolute;\n      top: 13px;\n      left: 16px;\n\n      opacity: 0.5;\n      width: 20px;\n      height: 20px;\n    }\n  }\n}",
                    "styleUrl": "formInput.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div \n  [ngClass]=\"wrapperClasses\"\n>\n  <input \n    [ngClass]=\"classes\"\n    [ngStyle]=\"{ 'background': backgroundColor, 'color': color }\"\n    [placeholder]=\"placeholderText\"\n    type=\"text\"\n  >\n</div>\n"
        },
        {
            "name": "FormScreenFifthComponent",
            "id": "component-FormScreenFifthComponent-b986dea163c7700978cb484a339248e7",
            "file": "src/app/molecules/form-screens/form-screen-fifth/form-screen-fifth.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-form-screen-fifth",
            "styleUrls": [
                "./form-screen-fifth.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./form-screen-fifth.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "modules",
                    "defaultValue": "[\n    {\n      title: \"GDPR, eprivacy\",\n      text: \"Europe\",\n    },\n    {\n      title: \"Thailand\",\n      text: \"Bangkok\",\n    },\n    {\n      title: \"Calofornia\",\n      text: \"Europe \",\n    },\n    {\n      title: \"CCPA\",\n      text: \"Europe\",\n    },\n    {\n      title: \"Canada\",\n      text: \"Ottawa\",\n    },\n    {\n      title: \"Dubai\",\n      text: \"Dubai \",\n    },\n    {\n      title: \"GDPR, eprivacy2\",\n      text: \"Europe\",\n    },\n    {\n      title: \"Thailand2\",\n      text: \"Bangkok\",\n    },\n    {\n      title: \"Calofornia2\",\n      text: \"Europe \",\n    },\n  ]",
                    "type": "Module[]",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "selectedModules",
                    "defaultValue": "[]",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "selectModule",
                    "args": [
                        {
                            "name": "title",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55,
                    "jsdoctags": [
                        {
                            "name": "title",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\ninterface Module {\n  title: string,\n  text: string\n}\n\n@Component({\n  selector: 'app-form-screen-fifth',\n  templateUrl: './form-screen-fifth.component.html',\n  styleUrls: ['./form-screen-fifth.component.scss']\n})\n\nexport class FormScreenFifthComponent {\n  selectedModules: string[] = [];\n  modules: Module[] = [\n    {\n      title: \"GDPR, eprivacy\",\n      text: \"Europe\",\n    },\n    {\n      title: \"Thailand\",\n      text: \"Bangkok\",\n    },\n    {\n      title: \"Calofornia\",\n      text: \"Europe \",\n    },\n    {\n      title: \"CCPA\",\n      text: \"Europe\",\n    },\n    {\n      title: \"Canada\",\n      text: \"Ottawa\",\n    },\n    {\n      title: \"Dubai\",\n      text: \"Dubai \",\n    },\n    {\n      title: \"GDPR, eprivacy2\",\n      text: \"Europe\",\n    },\n    {\n      title: \"Thailand2\",\n      text: \"Bangkok\",\n    },\n    {\n      title: \"Calofornia2\",\n      text: \"Europe \",\n    },\n  ]\n\n  selectModule(title: string) {\n    if (this.selectedModules.includes(title)) {\n      this.selectedModules = this.selectedModules.filter(module => module !== title);\n    } else {\n      this.selectedModules = [...this.selectedModules, title];\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-form-screen-fifth {\n  display: flex;\n  justify-content: space-between;\n  align-items: center; \n  width: 100%;\n\n  &__list {\n    width: 32%;\n  }\n\n  &__item {\n    width: 100%;\n    margin-bottom: 12px;\n  }\n}\n\n.fs-h3 {\n  margin-bottom: 43px;\n}\n\n@media screen and (max-width: 600px) {\n  .app-form-screen-fifth {\n    flex-direction: column;\n  \n    &__list {\n      width: 100%;\n    }\n  \n    &__item {\n      width: 100%;\n      margin-bottom: 8px;;\n    }\n  }\n}",
                    "styleUrl": "./form-screen-fifth.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<h3 class=\"fs-h3\">Select your compliance modules</h3>\n<div class=\"app-form-screen-fifth\">\n  <ul class=\"app-form-screen-fifth__list\">\n    <li \n      class=\"app-form-screen-fifth__item\"\n      *ngFor=\"let module of modules.slice(0, 3); let i = index\" \n    >\n      <app-large-button\n        (click)=\"selectModule(module.title)\"\n        [title]=\"module.title\"\n        [text]=\"module.text\"\n        [isActive]=\"selectedModules.includes(module.title)\"\n      >\n      </app-large-button>\n    </li>\n  </ul>\n  <ul class=\"app-form-screen-fifth__list\">\n    <li \n      class=\"app-form-screen-fifth__item\"\n      *ngFor=\"let module of modules.slice(3, 6); let i = index\" \n    >\n      <app-large-button\n        (click)=\"selectModule(module.title)\"\n        [title]=\"module.title\"\n        [text]=\"module.text\"\n        [isActive]=\"selectedModules.includes(module.title)\"\n      >\n      </app-large-button>\n    </li>\n  </ul>\n  <ul class=\"app-form-screen-fifth__list\">\n    <li \n      class=\"app-form-screen-fifth__item\"\n      *ngFor=\"let module of modules.slice(6); let i = index\" \n    >\n      <app-large-button\n        (click)=\"selectModule(module.title)\"\n        [title]=\"module.title\"\n        [text]=\"module.text\"\n        [isActive]=\"selectedModules.includes(module.title)\"\n      >\n      </app-large-button>\n    </li>\n  </ul>\n</div>\n\n\n"
        },
        {
            "name": "FormScreenFirstComponent",
            "id": "component-FormScreenFirstComponent-945882fbe93b9cc741ffe24cfba04afe",
            "file": "src/app/molecules/form-screens/form-screen-first/form-screen-first.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-form-screen-first",
            "styleUrls": [
                "./form-screen-first.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./form-screen-first.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-form-screen-first',\n  templateUrl: './form-screen-first.component.html',\n  styleUrls: ['./form-screen-first.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\n\nexport class FormScreenFirstComponent {\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-form-screen-first {\n  &__container {\n    display: flex;\n    justify-content: space-between;\n    width: 100%;\n    margin-top: 32px;\n  }\n\n  &__column {\n    width: 48%;\n\n    & > app-form-input {\n      margin-bottom: 32px;\n    }\n  }\n}\n\n.form-input__wrapper, .ng-select {\n  margin-bottom: 32px;\n}\n\n@media screen and (max-width: 600px) {\n  .app-form-screen-first {\n    &__container {\n      flex-direction: column;\n    }\n\n    &__column {\n      width: 99%;\n    }\n  } \n\n  .form-input__wrapper, .ng-select {\n    margin-bottom: 5px;\n  }\n}\n",
                    "styleUrl": "./form-screen-first.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<h3 class=\"fs-h3\">Create your account</h3>\n<div class=\"app-form-screen-first__container\"> \n  <div class=\"app-form-screen-first__column\">   \n    <app-form-input\n      [placeholderText]=\"'First Name'\"\n      [classes]=\"'form-input-field form-input-field--simple fs-16-sofia-300'\"\n      [wrapperClasses]=\"'form-input__wrapper form-input__wrapper--simple'\"\n    > \n    </app-form-input> \n    <app-form-input\n      [placeholderText]=\"'Email'\"\n      [classes]=\"'form-input-field form-input-field--simple fs-16-sofia-300'\"\n      [wrapperClasses]=\"'form-input__wrapper form-input__wrapper--simple'\"\n    > \n    </app-form-input>    \n    <app-form-input\n      [placeholderText]=\"'Password'\"\n      [classes]=\"'form-input-field form-input-field--simple fs-16-sofia-300'\"\n      [wrapperClasses]=\"'form-input__wrapper form-input__wrapper--simple'\"\n    > \n    </app-form-input>        \n  </div>\n  <div class=\"app-form-screen-first__column\">   \n    <app-form-input\n      [placeholderText]=\"'Last Name'\"\n      [classes]=\"'form-input-field form-input-field--simple fs-16-sofia-300'\"\n      [wrapperClasses]=\"'form-input__wrapper form-input__wrapper--simple'\"\n    > \n    </app-form-input> \n    <app-select-input-simple\n      [initialValue]=\"'This account is for:'\"\n      [items]=\"['My current company', 'My clients company']\"\n    >\n    </app-select-input-simple>   \n    <app-form-input\n      [placeholderText]=\"'Confirm Password'\"\n      [classes]=\"'form-input-field form-input-field--simple fs-16-sofia-300'\"\n      [wrapperClasses]=\"'form-input__wrapper form-input__wrapper--simple'\"\n    > \n    </app-form-input> \n  </div>\n</div>\n"
        },
        {
            "name": "FormScreenFourthComponent",
            "id": "component-FormScreenFourthComponent-aca7099c3a068b1af5bdf9dc534fb0c5",
            "file": "src/app/molecules/form-screens/form-screen-fourth/form-screen-fourth.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-form-screen-fourth",
            "styleUrls": [
                "./form-screen-fourth.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./form-screen-fourth.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "modules",
                    "defaultValue": "[\n    {\n      title: \"GDPR, eprivacy\",\n      text: \"Europe\",\n    },\n    {\n      title: \"Thailand\",\n      text: \"Bangkok\",\n    },\n    {\n      title: \"Calofornia\",\n      text: \"Europe \",\n    },\n    {\n      title: \"CCPA\",\n      text: \"Europe\",\n    },\n    {\n      title: \"Canada\",\n      text: \"Ottawa\",\n    },\n    {\n      title: \"Dubai\",\n      text: \"Dubai \",\n    },\n  ]",
                    "type": "Module[]",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "selectedModules",
                    "defaultValue": "[]",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "selectModule",
                    "args": [
                        {
                            "name": "title",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "jsdoctags": [
                        {
                            "name": "title",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\ninterface Module {\n  title: string,\n  text: string\n}\n\n@Component({\n  selector: 'app-form-screen-fourth',\n  templateUrl: './form-screen-fourth.component.html',\n  styleUrls: ['./form-screen-fourth.component.scss']\n})\nexport class FormScreenFourthComponent {\n\n  selectedModules: string[] = [];\n  modules: Module[] = [\n    {\n      title: \"GDPR, eprivacy\",\n      text: \"Europe\",\n    },\n    {\n      title: \"Thailand\",\n      text: \"Bangkok\",\n    },\n    {\n      title: \"Calofornia\",\n      text: \"Europe \",\n    },\n    {\n      title: \"CCPA\",\n      text: \"Europe\",\n    },\n    {\n      title: \"Canada\",\n      text: \"Ottawa\",\n    },\n    {\n      title: \"Dubai\",\n      text: \"Dubai \",\n    },\n  ]\n\n  selectModule(title: string) {\n    if (this.selectedModules.includes(title)) {\n      this.selectedModules = this.selectedModules.filter(module => module !== title);\n    } else {\n      this.selectedModules = [...this.selectedModules, title];\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-form-screen-fourth {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n\n  &__list {\n    width: 48%;\n  }\n\n  &__item {\n    width: 100%;\n    margin-bottom: 16px;\n  }\n}\n\n.fs-h3 {\n  margin-bottom: 43px;\n}\n\n@media screen and (max-width: 600px) {\n  .app-form-screen-fourth {\n    flex-direction: column;\n  \n    &__list {\n      width: 100%;\n    }\n  \n    &__item {\n      width: 100%;\n      margin-bottom: 8px;;\n    }\n  }\n}",
                    "styleUrl": "./form-screen-fourth.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<h3 class=\"fs-h3\">Select your compliance modules</h3>\n<div class=\"app-form-screen-fourth\">\n  <ul class=\"app-form-screen-fourth__list\">\n    <li \n      class=\"app-form-screen-fourth__item\"\n      *ngFor=\"let module of modules.slice(0, modules.length/2); let i = index\" \n    >\n      <app-large-button\n        (click)=\"selectModule(module.title)\"\n        [title]=\"module.title\"\n        [text]=\"module.text\"\n        [isActive]=\"selectedModules.includes(module.title)\"\n      >\n      </app-large-button>\n    </li>\n  </ul>\n  <ul class=\"app-form-screen-fourth__list\">\n    <li \n      class=\"app-form-screen-fourth__item\"\n      *ngFor=\"let module of modules.slice(modules.length/2); let i = index\" \n    >\n      <app-large-button\n        (click)=\"selectModule(module.title)\"\n        [title]=\"module.title\"\n        [text]=\"module.text\"\n        [isActive]=\"selectedModules.includes(module.title)\"\n      >\n      </app-large-button>\n    </li>\n  </ul>\n</div>\n\n"
        },
        {
            "name": "FormScreenSecondComponent",
            "id": "component-FormScreenSecondComponent-919edb93ff38330aee9741fca97f57e1",
            "file": "src/app/molecules/form-screens/form-screen-second/form-screen-second.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-form-screen-second",
            "styleUrls": [
                "./form-screen-second.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./form-screen-second.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-form-screen-second',\n  templateUrl: './form-screen-second.component.html',\n  styleUrls: ['./form-screen-second.component.scss']\n})\n\nexport class FormScreenSecondComponent {\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "h3 {\n  margin-bottom: 22px;\n}\n\np {\n  margin-bottom: 40px;\n}",
                    "styleUrl": "./form-screen-second.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<h3 class=\"fs-h3\">Add your first domain</h3>\n<p class=\"fs-18-sofia-300\">You can add more domains inside the app</p>\n<app-form-input\n  [placeholderText]=\"'yourwebsite.com'\"\n  [classes]=\"'form-input-field form-input-field--simple fs-16-sofia-300'\"\n  [wrapperClasses]=\"'form-input__wrapper form-input__wrapper--simple'\"\n> \n</app-form-input>"
        },
        {
            "name": "FormScreenThirdComponent",
            "id": "component-FormScreenThirdComponent-ae34384e6e13eceb75d03fb11c334547",
            "file": "src/app/molecules/form-screens/form-screen-third/form-screen-third.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-form-screen-third",
            "styleUrls": [
                "./form-screen-third.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./form-screen-third.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "modules",
                    "defaultValue": "[\n    {\n      title: \"GDPR, eprivacy\",\n      text: \"Europe\",\n      src: \"assets/images/flags/euro.png\"\n    },\n    {\n      title: \"CCPA\",\n      text: \"California\",\n      src: \"assets/images/flags/ccpa.png\"\n    },\n    {\n      title: \"LGPD\",\n      text: \"Brasil \",\n      src: \"assets/images/flags/lgpd.png\"\n    }\n  ]",
                    "type": "Module[]",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "selectedModules",
                    "defaultValue": "[]",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [
                {
                    "name": "selectModule",
                    "args": [
                        {
                            "name": "title",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "jsdoctags": [
                        {
                            "name": "title",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, ViewEncapsulation } from '@angular/core';\n\ninterface Module {\n  title: string,\n  text: string,\n  src: string\n}\n\n@Component({\n  selector: 'app-form-screen-third',\n  templateUrl: './form-screen-third.component.html',\n  styleUrls: ['./form-screen-third.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class FormScreenThirdComponent {\n  selectedModules: string[] = [];\n  modules: Module[] = [\n    {\n      title: \"GDPR, eprivacy\",\n      text: \"Europe\",\n      src: \"assets/images/flags/euro.png\"\n    },\n    {\n      title: \"CCPA\",\n      text: \"California\",\n      src: \"assets/images/flags/ccpa.png\"\n    },\n    {\n      title: \"LGPD\",\n      text: \"Brasil \",\n      src: \"assets/images/flags/lgpd.png\"\n    }\n  ]\n\n  selectModule(title: string) {\n    if (this.selectedModules.includes(title)) {\n      this.selectedModules = this.selectedModules.filter(module => module !== title);\n    } else {\n      this.selectedModules = [...this.selectedModules, title];\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-form-screen-third {\n  &__container {\n    display: flex;\n    justify-content: space-between;\n    width: 100%;\n    margin-top: 56px;\n  }\n}\n\n@media screen and (max-width: 600px) {\n  .app-form-screen-third {\n    &__container {\n      flex-direction: column;\n    }\n  }\n\n  .app-card {\n    margin-bottom: 8px;\n  }\n}",
                    "styleUrl": "./form-screen-third.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<h3 class=\"fs-h3\">Select your compliance modules</h3>\n<ul class=\"app-form-screen-third__container\">\n  <li \n    class=\"app-form-screen-third__item\"\n    *ngFor=\"let module of modules; let i = index\" \n  >\n    <app-card\n      (click)=\"selectModule(module.title)\"\n      [title]=\"module.title\"\n      [text]=\"module.text\"\n      [src]=\"module.src\"\n      [isActive]=\"selectedModules.includes(module.title)\"\n    >\n    </app-card>\n  </li>\n</ul>\n"
        },
        {
            "name": "gradientButtonComponent",
            "id": "component-gradientButtonComponent-869107bbcebf19d9e145ff9f57f547b4",
            "file": "src/app/atoms/buttons/gradientButton/gradientButton.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-gradient-button",
            "styleUrls": [
                "../button.component.scss",
                "gradientButton.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./gradientButton.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "color",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "title",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-gradient-button',\n  templateUrl: './gradientButton.component.html',\n  styleUrls: ['../button.component.scss', 'gradientButton.component.scss'],\n})\n\nexport class gradientButtonComponent  {\n  @Input() title: string;\n  @Input() backgroundColor: string;\n  @Input() color: string;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".btn-app {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  transition: 0.3s;\n  border-radius: 8px;\n\n  &--h36 {\n    display: flex;\n    align-items: center;\n\n    height: 36px;\n    padding: 0 18px 0 18px;\n  }\n  \n  &--asimetric {\n    border-radius: 20px 5px;\n    height: 52px;\n    padding: 18px 41px 18px 44px;\n  }\n\n  &--h46 {\n    height: 46px;\n    padding: 13px 15px 12px 15px;\n  }\n\n  &--h53 {\n    height: 53px;\n    padding: 9px 10px;\n  }\n}\n",
                    "styleUrl": "../button.component.scss"
                },
                {
                    "data": ".btn-grad {\n  background: var(--higlited-grad-light);\n  border: none;\n  color: var(--text-color);\n  \n  display: flex;\n  align-items: center;\n\n  &__img {\n    margin-left: 27px;\n  }\n\n  &:hover {\n    background: var(--highlited-grad-dark);\n  }\n\n  &:active {\n    background: var(--higlited-grad-light);\n  }\n}\n",
                    "styleUrl": "gradientButton.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<button\n  class=\"btn-app--asimetric btn-app btn-grad fs-16-sofia-800\"\n  [ngStyle]=\"{ 'background': backgroundColor, 'color': color }\"\n>\n  <p>\n    {{ title }}\n    <img src='assets/images/next.svg' alt=\"arrow\"  class=\"btn-grad__img\"/>\n  </p>\n</button>"
        },
        {
            "name": "IconContainerComponent",
            "id": "component-IconContainerComponent-a4975d8d2274a6b68c4a0bd0919df590",
            "file": "src/app/atoms/iconContainer/iconContainer.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-icon-container",
            "styleUrls": [
                "iconContainer.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./iconContainer.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-icon-container',\n  templateUrl: './iconContainer.component.html',\n  styleUrls: ['iconContainer.component.scss'],\n})\n\nexport class IconContainerComponent {\n  @Input() backgroundColor: string;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".icons-container {\n  width: 100%;\n\n  &-box {\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n    align-items: center;\n    opacity: 0.3;\n\n    & > img {\n      max-width: 80%;\n    }\n  }\n}",
                    "styleUrl": "iconContainer.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div \n  [ngStyle]=\"{ 'background': backgroundColor }\"\n  class=\"icons-container\"\n>\n  <div class=\"icons-container-box\">\n    <img src=\"assets/images/companies/logo1.png\" alt=\"company logo\">\n    <img src=\"assets/images/companies/logo2.png\" alt=\"company logo\">\n    <img src=\"assets/images/companies/logo3.png\" alt=\"company logo\">\n  </div>\n  <div class=\"icons-container-box\">\n    <img src=\"assets/images/companies/logo4.png\" alt=\"company logo\">\n    <img src=\"assets/images/companies/logo5.png\" alt=\"company logo\">\n    <img src=\"assets/images/companies/logo6.png\" alt=\"company logo\">\n  </div>\n</div>\n"
        },
        {
            "name": "IconLinksComponent",
            "id": "component-IconLinksComponent-4311d2f7f0d021354fa2531e0614f363",
            "file": "src/app/atoms/navLink/icon-links/icon-links.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-icon-links",
            "styleUrls": [
                "./icon-links.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./icon-links.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "isActive",
                    "line": 10,
                    "type": "boolean"
                },
                {
                    "name": "svgPath",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "title",
                    "line": 11,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "fillColor",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28
                },
                {
                    "name": "onHover",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16
                },
                {
                    "name": "onLeave",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnChanges } from '@angular/core';\n\n@Component({\n  selector: 'app-icon-links',\n  templateUrl: './icon-links.component.html',\n  styleUrls: ['./icon-links.component.scss']\n})\n\nexport class IconLinksComponent implements OnChanges {\n  @Input() isActive: boolean;\n  @Input() title: string;\n  @Input() svgPath: string;\n  \n  fillColor: string;\n\n  onHover() {\n    if (!this.isActive) {\n      this.fillColor = 'rgba(1, 25, 73, 1)';\n    }\n  }\n\n  onLeave() {\n    if (!this.isActive) {\n      this.fillColor = 'rgba(1, 25, 73, 0.5)';\n    }\n  }\n\n  ngOnChanges(): void {\n    this.fillColor = this.isActive ? '#24B04B' : 'rgba(1, 25, 73, 0.5)'\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-icon-link {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 2px;\n\n  text-transform: capitalize;\n  border: none;\n  background: transparent;\n\n  &__title {\n    margin-top: 6px;\n  }\n}",
                    "styleUrl": "./icon-links.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnChanges"
            ],
            "templateData": "<a class=\"app-icon-link fs-10-sofia-500\"\n  href=\"#\"\n  (mouseenter)=\"onHover()\"\n  (mouseleave)=\"onLeave()\"\n>\n  <svg-icon \n    [src]=\"svgPath\"\n    [svgStyle]=\"{'fill':fillColor }\"\n  >\n  </svg-icon>\n  <p class=\"app-icon-link__title\" [ngStyle]=\"{ 'color': fillColor }\">\n    {{title}}\n  </p>     \n</a>\n"
        },
        {
            "name": "infoButtonComponent",
            "id": "component-infoButtonComponent-b1789af0f0fb6ec1f45ad45f41784510",
            "file": "src/app/atoms/buttons/infoButton/infoButton.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-info-button",
            "styleUrls": [
                "../button.component.scss",
                "infoButton.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./infoButton.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "color",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "title",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-info-button',\n  templateUrl: './infoButton.component.html',\n  styleUrls: ['../button.component.scss', 'infoButton.component.scss'],\n})\n\nexport class infoButtonComponent {\n  @Input() title: string;\n  @Input() backgroundColor: string;\n  @Input() color: string;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".btn-app {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  transition: 0.3s;\n  border-radius: 8px;\n\n  &--h36 {\n    display: flex;\n    align-items: center;\n\n    height: 36px;\n    padding: 0 18px 0 18px;\n  }\n  \n  &--asimetric {\n    border-radius: 20px 5px;\n    height: 52px;\n    padding: 18px 41px 18px 44px;\n  }\n\n  &--h46 {\n    height: 46px;\n    padding: 13px 15px 12px 15px;\n  }\n\n  &--h53 {\n    height: 53px;\n    padding: 9px 10px;\n  }\n}\n",
                    "styleUrl": "../button.component.scss"
                },
                {
                    "data": ".btn-info {\n  padding: 9px 15px 9px 15px;\n  height: 40px;\n  border: none;\n  color: var(--info-color);\n  background-color: rgba(var(--info-color-code), 0.05);  \n  text-transform: capitalize;\n\n  & > img {\n    margin-right: 15px;\n  }\n\n  &:hover {\n    background-color: rgba(var(--info-color-code), 0.3);  \n  }\n\n  &:active {\n    background-color: transparent; \n  }\n}\n",
                    "styleUrl": "infoButton.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<button \n  class=\"btn-app btn-info fs-14-sofia-normal\"\n  [ngStyle]=\"{ 'background': backgroundColor, 'color': color }\"\n>\n  <img src=\"assets/images/support.png\" alt=\"support button logo\">\n  {{ title }}\n</button>\n"
        },
        {
            "name": "largeButtonComponent",
            "id": "component-largeButtonComponent-b93d92f1fc905f76dccbdfe29bc76058",
            "file": "src/app/atoms/buttons/largeButton/largeButton.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-large-button",
            "styleUrls": [
                "../button.component.scss",
                "largeButton.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./largeButton.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "line": 13,
                    "type": "string"
                },
                {
                    "name": "color",
                    "line": 14,
                    "type": "string"
                },
                {
                    "name": "isActive",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "text",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "title",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "classes",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnChanges } from '@angular/core';\n\n@Component({\n  selector: 'app-large-button',\n  templateUrl: './largeButton.component.html',\n  styleUrls: ['../button.component.scss', 'largeButton.component.scss'],\n})\n\nexport class largeButtonComponent implements OnChanges {\n  @Input() title: string;\n  @Input() text: string;\n  @Input() isActive: string;\n  @Input() backgroundColor: string;\n  @Input() color: string;\n\n  classes: string;\n\n  ngOnChanges() {\n    this.classes = !this.isActive ? \"btn-large btn-app--h53 btn-app \" : \"btn-large active btn-app--h53 btn-app \";\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".btn-app {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  transition: 0.3s;\n  border-radius: 8px;\n\n  &--h36 {\n    display: flex;\n    align-items: center;\n\n    height: 36px;\n    padding: 0 18px 0 18px;\n  }\n  \n  &--asimetric {\n    border-radius: 20px 5px;\n    height: 52px;\n    padding: 18px 41px 18px 44px;\n  }\n\n  &--h46 {\n    height: 46px;\n    padding: 13px 15px 12px 15px;\n  }\n\n  &--h53 {\n    height: 53px;\n    padding: 9px 10px;\n  }\n}\n",
                    "styleUrl": "../button.component.scss"
                },
                {
                    "data": ".btn-large {\n  position: relative;\n  width: 100%;\n  z-index: 2;\n  \n  color: var(--secondary-color);\n  background: transparent;\n  border: none;\n\n  display: flex;\n  justify-content: center;\n\n  &.active {\n    background: var(--success-grad-light);\n    color: var(--text-color);\n  }\n\n  & > span > p {\n    margin: 0;\n  }\n\n  & > span > .fs-14-gramm-normal {\n    text-transform: uppercase;\n  }\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    z-index: -1;\n\n    width: 100%;\n    height: 100%;\n\n    background: rgba(var(--secondary-color-code), 0.05);\n    border-radius: 8px;\n    transition: 0.3s;\n  }\n\n  &::after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    z-index: -1;\n\n    width: 100%;\n    height: 100%;\n\n    background: var(--success-grad-light);\n    border-radius: 8px;\n    transition: 0.3s;\n    opacity: 0;\n  }\n\n  &:hover {\n    &::before {\n      background: rgba(var(--secondary-color-code), 0.1);\n    }\n  }\n\n  &:active {\n    color: var(--text-color);\n    &::before {\n      opacity: 0;\n    }\n\n    &::after {\n      opacity: 1;\n    }\n  }\n}",
                    "styleUrl": "largeButton.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnChanges"
            ],
            "templateData": "<button \n  [ngClass]=\"classes\"\n  [ngStyle]=\"{ 'background': backgroundColor, 'color': color }\"\n>\n  <span>\n    <p class=\"fs-14-gramm-normal\">{{ title }}</p>\n    <p class=\"fs-14-sofia-300\">{{ text }}</p>\n  </span>\n</button>"
        },
        {
            "name": "lightButtonComponent",
            "id": "component-lightButtonComponent-f3c6cddfd2b1c7eb1b8b3339b0254a8f",
            "file": "src/app/atoms/buttons/lightButton/lightButton.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-light-button",
            "styleUrls": [
                "../button.component.scss",
                "lightButton.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./lightButton.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-light-button',\n  templateUrl: './lightButton.component.html',\n  styleUrls: ['../button.component.scss', 'lightButton.component.scss'],\n})\n\nexport class lightButtonComponent {\n  @Input() backgroundColor: string;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".btn-app {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  transition: 0.3s;\n  border-radius: 8px;\n\n  &--h36 {\n    display: flex;\n    align-items: center;\n\n    height: 36px;\n    padding: 0 18px 0 18px;\n  }\n  \n  &--asimetric {\n    border-radius: 20px 5px;\n    height: 52px;\n    padding: 18px 41px 18px 44px;\n  }\n\n  &--h46 {\n    height: 46px;\n    padding: 13px 15px 12px 15px;\n  }\n\n  &--h53 {\n    height: 53px;\n    padding: 9px 10px;\n  }\n}\n",
                    "styleUrl": "../button.component.scss"
                },
                {
                    "data": ".btn-light {\n  border: none;\n  padding: 16px;\n  background: var(--input-bg-color);\n\n  &:hover {\n    background: var(--light-btn-hover);\n  }\n\n  &:active {\n    background: var(--light-btn-hover);\n  }\n}",
                    "styleUrl": "lightButton.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<button \n  class=\"btn-app btn-light\"\n  [ngStyle]=\"{ 'background': backgroundColor }\"\n>\n  <img src=\"assets/images/back-icon.png\">\n</button>\n\n"
        },
        {
            "name": "MainNavigationMenuComponent",
            "id": "component-MainNavigationMenuComponent-a4db732f26a80faa5f5cc3155c8a1945",
            "file": "src/app/molecules/menu/main-navigation-menu/main-navigation-menu.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-main-navigation-menu",
            "styleUrls": [
                "./main-navigation-menu.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./main-navigation-menu.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "items",
                    "line": 11,
                    "type": "string[]"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "active",
                    "defaultValue": "0",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "handlClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "any"
                        },
                        {
                            "name": "i",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "i",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-main-navigation-menu',\n  templateUrl: './main-navigation-menu.component.html',\n  styleUrls: ['./main-navigation-menu.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\n\nexport class MainNavigationMenuComponent  {\n  @Input() items: string[];\n\n  active: number = 0;\n\n  handlClick(event: any, i: number) {\n    event.preventDefault();\n    this.active = i;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-main-navigation-menu {\n  display: flex;\n  align-items: center;\n\n  &__item {\n    margin-right: 20px;\n  }\n}\n\n.nav-link-secondary {\n  text-transform: capitalize!important;\n}",
                    "styleUrl": "./main-navigation-menu.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<ul class=\"app-main-navigation-menu\">\n  <li \n    class=\"app-main-navigation-menu__item\"\n    *ngFor=\"let item of items; let i = index\" \n  >\n    <app-nav-link\n      [isActive]=\"active === i\"\n      [title]=\"item\" \n      classes=\"nav-link-secondary fs-16-sofia-800 \"\n      (click)=\"handlClick($event, i)\"\n    >\n    </app-nav-link>\n  </li>\n</ul>\n\n"
        },
        {
            "name": "MobileButtonComponent",
            "id": "component-MobileButtonComponent-2804d122931b4541f228c9f866b09ba1",
            "file": "src/app/atoms/buttons/mobile-button/mobile-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-mobile-button",
            "styleUrls": [
                "./mobile-button.component.scss",
                "../button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./mobile-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "isOpen",
                    "line": 10,
                    "type": "boolean"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-mobile-button',\n  templateUrl: './mobile-button.component.html',\n  styleUrls: ['./mobile-button.component.scss', '../button.component.scss']\n})\n\nexport class MobileButtonComponent {\n  @Input() isOpen: boolean;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".module-border-wrap {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  box-sizing: border-box;\n  height: 46px;\n  width: fit-content;\n  padding: 1px;\n  \n  background: var(--success-grad-light);\n  border-radius: 6px;\n}\n\n.btn-mobile.btn-app {\n  height: 44px;\n  border-radius: 5px;  \n}\n\n.module-opacity-wrap {\n  background: var(--text-color);\n  border-radius: 5px;\n}\n\n.btn-mobile {\n  border: none;\n  background-color: var(--text-color);\n}",
                    "styleUrl": "./mobile-button.component.scss"
                },
                {
                    "data": ".btn-app {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  transition: 0.3s;\n  border-radius: 8px;\n\n  &--h36 {\n    display: flex;\n    align-items: center;\n\n    height: 36px;\n    padding: 0 18px 0 18px;\n  }\n  \n  &--asimetric {\n    border-radius: 20px 5px;\n    height: 52px;\n    padding: 18px 41px 18px 44px;\n  }\n\n  &--h46 {\n    height: 46px;\n    padding: 13px 15px 12px 15px;\n  }\n\n  &--h53 {\n    height: 53px;\n    padding: 9px 10px;\n  }\n}\n",
                    "styleUrl": "../button.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"module-border-wrap\">\n  <div class=\"module-opacity-wrap \">\n    <button type=\"button\" class=\"btn-app btn-app--h46 btn-mobile\">\n      <svg width=\"16\" height=\"16\" viewBox=\"0 0 20 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" *ngIf=\"!isOpen\">\n        <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0 1C0 0.447715 0.447715 0 1 0H19C19.5523 0 20 0.447715 20 1C20 1.55228 19.5523 2 19 2H1C0.447715 2 0 1.55228 0 1ZM0 6C0 5.44772 0.447715 5 1 5H19C19.5523 5 20 5.44772 20 6C20 6.55228 19.5523 7 19 7H1C0.447715 7 0 6.55228 0 6ZM1 10C0.447715 10 0 10.4477 0 11C0 11.5523 0.447715 12 1 12H19C19.5523 12 20 11.5523 20 11C20 10.4477 19.5523 10 19 10H1Z\" fill=\"url(#paint0_linear)\"/>\n        <defs>\n        <linearGradient id=\"paint0_linear\" x1=\"-9.10937\" y1=\"26.4157\" x2=\"37.9049\" y2=\"25.7578\" gradientUnits=\"userSpaceOnUse\">\n        <stop stop-color=\"#24B04B\"/>\n        <stop offset=\"1\" stop-color=\"#0263BC\"/>\n        </linearGradient>\n        </defs>\n      </svg>\n      <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" *ngIf=\"isOpen\">\n        <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M1.12132 13.4351C0.730792 13.8256 0.730792 14.4588 1.12132 14.8493C1.51184 15.2399 2.14501 15.2399 2.53553 14.8493L7.91405 9.47081L13.435 14.9918C13.8256 15.3823 14.4587 15.3823 14.8492 14.9918C15.2398 14.6013 15.2398 13.9681 14.8492 13.5776L9.32827 8.0566L15.2635 2.12141C15.654 1.73089 15.654 1.09772 15.2635 0.7072C14.8729 0.316675 14.2398 0.316676 13.8492 0.7072L7.91405 6.64239L2.12132 0.849655C1.7308 0.459131 1.09763 0.459131 0.707108 0.849655C0.316584 1.24018 0.316584 1.87334 0.707108 2.26387L6.49984 8.0566L1.12132 13.4351Z\" fill=\"url(#paint0_linear)\"/>\n        <defs>\n        <linearGradient id=\"paint0_linear\" x1=\"-6.48255\" y1=\"33.1485\" x2=\"29.1166\" y2=\"32.8442\" gradientUnits=\"userSpaceOnUse\">\n        <stop stop-color=\"#24B04B\"/>\n        <stop offset=\"1\" stop-color=\"#0263BC\"/>\n        </linearGradient>\n        </defs>\n      </svg>\n    </button>\n  </div>\n</div>\n"
        },
        {
            "name": "MobileMainNavigationMenuComponent",
            "id": "component-MobileMainNavigationMenuComponent-d79a7481b08c3d7a806ac840ce46a1df",
            "file": "src/app/molecules/menu/mobile-main-navigation-menu/mobile-main-navigation-menu.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-mobile-main-navigation-menu",
            "styleUrls": [
                "./mobile-main-navigation-menu.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./mobile-main-navigation-menu.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "items",
                    "line": 10,
                    "type": "string[]"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "active",
                    "defaultValue": "0",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "handlClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "any"
                        },
                        {
                            "name": "i",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "i",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-mobile-main-navigation-menu',\n  templateUrl: './mobile-main-navigation-menu.component.html',\n  styleUrls: ['./mobile-main-navigation-menu.component.scss']\n})\n\nexport class MobileMainNavigationMenuComponent {\n  @Input() items: string[];\n\n  active: number = 0;\n\n  handlClick(event: any, i: number) {\n    event.preventDefault();\n    this.active = i;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-mobile-main-navigation-menu {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n  padding: 20px;\n  background: #EAEDF2;\n}",
                    "styleUrl": "./mobile-main-navigation-menu.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<ul class=\"app-mobile-main-navigation-menu\">\n  <li \n  class=\"app-mobile-main-navigation-menu__item\"\n  *ngFor=\"let item of items; let i = index\" \n  >\n    <app-icon-links\n      [isActive]=\"active === i\"\n      [title]=\"item.title\" \n      [svgPath]=\"item.svgPath\"\n      (click)=\"handlClick($event, i)\"\n    >\n    </app-icon-links>\n  </li>\n</ul>\n\n"
        },
        {
            "name": "navLinkComponent",
            "id": "component-navLinkComponent-8d90507f4162362e8faa501fbb3414f6",
            "file": "src/app/atoms/navLink/textLinks/navLink.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-nav-link",
            "styleUrls": [
                "navLink.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./navLink.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "classes",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "isActive",
                    "line": 12,
                    "type": "boolean"
                },
                {
                    "name": "title",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "appointedClasses",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnChanges } from '@angular/core';\n\n@Component({\n  selector: 'app-nav-link',\n  templateUrl: './navLink.component.html',\n  styleUrls: ['navLink.component.scss'],\n})\n\nexport class navLinkComponent implements OnChanges {\n  @Input() title: string;\n  @Input() classes: string;\n  @Input() isActive: boolean;\n\n  appointedClasses: string = '';\n\n  ngOnChanges() {\n    this.appointedClasses = this.isActive ? `${this.classes} active` : this.classes;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".nav-link-secondary {\n  position: relative;\n  text-transform: uppercase;\n  background: rgba(var(--secondary-color-code), 0.5);\n  -webkit-text-fill-color: transparent;\n  -webkit-background-clip: text;\n  background-clip: text;\n  transition: 0.3;\n\n  &:hover {\n    background: var(--secondary-color); \n    -webkit-background-clip: text;\n    background-clip: text;\n  }\n\n  &:active {\n    background: var(--success-grad-light); \n    -webkit-background-clip: text;\n    background-clip: text;\n  }\n\n  &.active {\n    text-decoration: none;\n    -webkit-text-fill-color: transparent;\n    background: var(--success-grad-light); \n    -webkit-background-clip: text;\n    background-clip: text;\n    transition: 0.3;\n  }\n}\n\n.nav-link-highlited {\n  &.active {\n    &::after {\n      width: 100%;\n    }\n  }\n\n  &::after {\n    content: '';\n    position: absolute;\n    bottom: -3px;\n    left: 0;\n\n    width: 0;\n    height: 2px;\n\n    background: var(--success-grad-light);\n    transition: 0.3s;\n  }\n\n  &:active {\n    &::after {\n      width: 100%;\n    }\n  }\n}\n\n.nav-link-main {\n  position: relative;\n  background: rgba(var(--secondary-color-code), 0.75);\n  -webkit-background-clip: text;\n  background-clip: text;\n  -webkit-text-fill-color: transparent;\n  text-transform: capitalize;\n\n  &::after {\n    content: '';\n    position: absolute;\n    bottom: 0;\n    left: 0;\n\n    width: 0;\n    height: 1px;\n\n    background-color: rgba(var(--secondary-color-code), 0.75);\n    transition: 0.3s;\n  }\n\n  &:hover {\n    &::after {\n      width: 100%;\n    }\n  }\n\n  &:active {\n    background: var(--success-grad-light); \n    -webkit-background-clip: text;\n    background-clip: text;\n\n    &::after {\n      width: 0;\n    }\n  }\n\n  &.active {\n    text-decoration: none;\n    background: var(--success-grad-light); \n    -webkit-text-fill-color: transparent;\n    -webkit-background-clip: text;\n    background-clip: text;\n    transition: 0.3;\n  }\n}\n",
                    "styleUrl": "navLink.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnChanges"
            ],
            "templateData": "<a \n  href=\"#\" \n  [ngClass]=\"appointedClasses\"\n>\n  {{ title }}\n</a>\n"
        },
        {
            "name": "primaryButtonComponent",
            "id": "component-primaryButtonComponent-b05771d8a42b42ca32bdd5f4f544c528",
            "file": "src/app/atoms/buttons/primaryButton/primaryButton.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-primary-button",
            "styleUrls": [
                "../button.component.scss",
                "primaryButton.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./primaryButton.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "title",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-primary-button',\n  templateUrl: './primaryButton.component.html',\n  styleUrls: ['../button.component.scss', 'primaryButton.component.scss'],\n})\n\nexport class primaryButtonComponent {\n  @Input() title: string;\n  @Input() backgroundColor: string;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".btn-app {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  transition: 0.3s;\n  border-radius: 8px;\n\n  &--h36 {\n    display: flex;\n    align-items: center;\n\n    height: 36px;\n    padding: 0 18px 0 18px;\n  }\n  \n  &--asimetric {\n    border-radius: 20px 5px;\n    height: 52px;\n    padding: 18px 41px 18px 44px;\n  }\n\n  &--h46 {\n    height: 46px;\n    padding: 13px 15px 12px 15px;\n  }\n\n  &--h53 {\n    height: 53px;\n    padding: 9px 10px;\n  }\n}\n",
                    "styleUrl": "../button.component.scss"
                },
                {
                    "data": ".module-border-wrap {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  \n  box-sizing: border-box;\n  height: 46px;\n  width: fit-content;\n  padding: 1px;\n  \n  background: var(--success-grad-light);\n  border-radius: 6px;\n}\n\n.module-opacity-wrap {\n  background: var(--text-color);\n  border-radius: 5px;\n}\n\n.btn-primary.btn-app {\n  height: 44px;\n  border-radius: 5px;  \n}\n\n.btn-primary {\n  margin: 0;\n  background: transparent;\n  border: none;\n  position: relative;\n  display: flex;\n  align-items: center;\n\n  p {\n    margin: 0;\n    margin-left: 20px;\n  } \n\n  &__name {\n    background: var(--success-grad-light);\n    background-clip: text;\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n    transition: 0;\n  }\n\n  & > svg { \n    fill: url(#paint0_linear);\n    opacity: 0.8;\n    fill-opacity: 0.8;\n  }\n\n  &:active > svg { \n    opacity: 1;\n    fill-opacity: 1;\n    fill: var(--text-color); \n  }\n\n  &:hover {\n    background: linear-gradient(89.52deg, hsla(137, 66%, 42%, 0.2) -46.17%, rgba(2, 99, 188, 0.2) 186.99%);\n  }\n\n  &:active {\n    background: var(--success-grad-light);\n    color: var(--text-color);\n\n    & > .btn-primary__name {\n      background: var(--text-color);\n      -webkit-background-clip: text;\n      background-clip: text;\n      -webkit-text-fill-color: transparent;\n    }\n  }\n}\n",
                    "styleUrl": "primaryButton.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"module-border-wrap\">\n  <div class=\"module-opacity-wrap \">\n    <button \n      [ngStyle]=\"{ 'background': backgroundColor }\"\n      class=\"btn-app btn-app--h46 btn-primary fs-16-sofia-300\"\n    >\n      <svg width=\"20\" height=\"21\" viewBox=\"0 0 20 21\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M6.71 5.96433L9 3.55979V13.5857C9 13.863 9.10536 14.1289 9.29289 14.3249C9.48043 14.521 \n        9.73478 14.6312 10 14.6312C10.2652 14.6312 10.5196 14.521 10.7071 14.3249C10.8946 14.1289 \n        11 13.863 11 13.5857V3.55979L13.29 5.96433C13.383 6.06232 13.4936 6.1401 13.6154 6.19317C13.7373 \n        6.24625 13.868 6.27358 14 6.27358C14.132 6.27358 14.2627 6.24625 14.3846 6.19317C14.5064 6.1401\n        14.617 6.06232 14.71 5.96433C14.8037 5.86714 14.8781 5.75152 14.9289 5.62412C14.9797 5.49672 \n        15.0058 5.36007 15.0058 5.22206C15.0058 5.08405 14.9797 4.9474 14.9289 4.82C14.8781 4.6926 14.8037 \n        4.57698 14.71 4.47979L10.71 0.297969C10.6149 0.20279 10.5028 0.128181 10.38 0.0784232C10.1365 \n        -0.0261411 9.86346 -0.0261411 9.62 0.0784232C9.49725 0.128181 9.3851 0.20279 9.29 0.297969L5.29 \n        4.47979C5.19676 4.57726 5.1228 4.69299 5.07234 4.82034C5.02188 4.9477 4.99591 5.08421 4.99591 \n        5.22206C4.99591 5.35991 5.02188 5.49642 5.07234 5.62378C5.1228 5.75113 5.19676 5.86686 5.29 \n        5.96433C5.38324 6.06181 5.49393 6.13913 5.61575 6.19189C5.73757 6.24464 5.86814 6.27179 6 \n        6.27179C6.13186 6.27179 6.26243 6.24464 6.38425 6.19189C6.50607 6.13913 6.61676 6.06181 6.71 \n        5.96433ZM19 10.4493C18.7348 10.4493 18.4804 10.5595 18.2929 10.7555C18.1054 10.9516 18 11.2175 \n        18 11.4948V17.7675C18 18.0448 17.8946 18.3107 17.7071 18.5068C17.5196 18.7028 17.2652 18.813 17 \n        18.813H3C2.73478 18.813 2.48043 18.7028 2.29289 18.5068C2.10536 18.3107 2 18.0448 2 \n        17.7675V11.4948C2 11.2175 1.89464 10.9516 1.70711 10.7555C1.51957 10.5595 1.26522 10.4493 \n        1 10.4493C0.734784 10.4493 0.48043 10.5595 0.292893 10.7555C0.105357 10.9516 0 11.2175 0 \n        11.4948V17.7675C0 18.5993 0.316071 19.3971 0.87868 19.9853C1.44129 20.5734 2.20435 20.9039 \n        3 20.9039H17C17.7956 20.9039 18.5587 20.5734 19.1213 19.9853C19.6839 19.3971 20 18.5993 20 \n        17.7675V11.4948C20 11.2175 19.8946 10.9516 19.7071 10.7555C19.5196 10.5595 19.2652 10.4493 \n        19 10.4493Z\"/>\n        <defs>\n        <linearGradient id=\"paint0_linear\" x1=\"-9.10937\" y1=\"46.0158\" x2=\"37.9111\" y2=\"45.6381\" \n        gradientUnits=\"userSpaceOnUse\">\n        <stop stop-color=\"#24B04B\"/>\n        <stop offset=\"1\" stop-color=\"#0263BC\"/>\n        </linearGradient>\n        </defs>\n      </svg>\n      <p class=\"btn-primary__name\" *ngIf=\"title!==''\">\n        {{ title }}\n      </p>\n    </button>\n  </div>\n</div>"
        },
        {
            "name": "RegistrationFormComponent",
            "id": "component-RegistrationFormComponent-88ef3af2d9a262b8d5a4340408b1019a",
            "file": "src/app/organisms/registration-form/registration-form.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-registration-form",
            "styleUrls": [
                "./registration-form.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./registration-form.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "activeScreen",
                    "defaultValue": "1",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "isMobile",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "isStarted",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "changeScreen",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20
                },
                {
                    "name": "changeScreenToPrevious",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40
                },
                {
                    "name": "setIsStarted",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36
                }
            ],
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "window:resize",
                    "args": [
                        {
                            "name": "event",
                            "type": "any"
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "line": 16
                }
            ],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, HostListener, OnInit, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-registration-form',\n  templateUrl: './registration-form.component.html',\n  styleUrls: ['./registration-form.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\n\nexport class RegistrationFormComponent implements OnInit {\n  activeScreen: number = 1;\n  isStarted: boolean = false;\n  isMobile: boolean;\n\n  @HostListener('window:resize', ['$event'])\n  onResize(event: any) {\n    this.isMobile = (window.innerWidth < 950) ? true : false;\n  }\n\n  changeScreen() {\n    if (this.activeScreen === 5) {\n      return;\n    } else {\n      this.activeScreen = this.activeScreen + 1;\n    }\n  }\n\n  changeScreenToPrevious() {\n    if (this.activeScreen === 1) {\n      return;\n    } else {\n      this.activeScreen = this.activeScreen - 1;\n    }\n  }\n\n  setIsStarted() {\n    this.isStarted = true;\n  }\n\n  ngOnInit(): void {\n    this.isMobile = (window.innerWidth < 950) ? true : false;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".registration-form {\n  width: 100%;\n  height: auto;\n  background: url('../../../assets/images/bg.png');\n\n  &__header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    width: 100%;\n    padding: 20px 64px;\n    background-color: rgba(var(--text-color-code), 0.5);\n  }\n\n  &__logo {\n    width: 117px;\n    height: 46px;\n  }\n\n  &__list {\n    width: 75%;\n    margin-bottom: 30px;\n  }\n\n  &__body {\n    display: flex;\n    justify-content: space-between;\n    padding: 42px 64px 130px;\n\n    &--left {\n      display: flex;\n      flex-direction: column;\n      align-items: flex-start;\n      width: 44%;\n\n      & > h2, & > h5 {\n        margin-bottom: 20px;\n      }\n    }\n\n    &--right {\n      display: flex;\n      flex-direction: column;\n      justify-content: space-between;\n\n      width: 52%;\n      min-height: 458px;\n\n      border-radius: 12px 30px;\n      box-shadow: 0px 50px 70px rgba(44, 59, 82, 0.15);\n    }\n  }\n\n  &__wrapper-top {\n    padding: 34px 48px 7px 48px;\n  }\n\n  &__wrapper-bottom {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    padding: 32px 48px 28px 48px;\n    background-color: var(--input-bg-color);\n    border-radius: 0 0 12px 30px;\n\n    &--left {\n      width: 55%;\n    }\n  }\n}\n\n.list-item-icon {\n  margin-bottom: 12px;\n}\n\n@media screen and (max-width: 1250px) {\n  .registration-form {\n    &__list {\n      width: 100%;\n    }\n\n    &__body {\n      padding: 42px 20px;\n    }\n\n    &__header {\n      padding: 20px;\n    }\n\n    &__wrapper-top {\n      padding: 20px;\n    }\n\n    &__wrapper-bottom {\n      padding: 20px 10px;\n    }\n  }\n}",
                    "styleUrl": "./registration-form.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"registration-form\" *ngIf=\"!isMobile\">\n  <div class=\"registration-form__header\">\n    <img class=\"registration-form__logo\" src=\"assets/images/logo.png\" alt=\"logo secure privacy\">\n    <app-info-button [title]=\"'support'\"></app-info-button>\n  </div>\n  <div class=\"registration-form__body\">\n    <div class=\"registration-form__body--left\">\n      <h2 class=\"fs-h2\">\n        Register now and receive 100% no-risk\n        <span class=\"fs-h2--bold\">Free Trial</span>\n      </h2>\n      <ul class=\"registration-form__list\">\n        <app-search-item \n          [title]=\"'Get access to all features.'\"\n          [classes]=\"'list-item-icon fs-16-sofia-300'\"\n        >\n        </app-search-item>\n        <app-search-item \n          [title]=\"'Pay NOTHING for the first 7-days.'\"\n          [classes]=\"'list-item-icon fs-16-sofia-300'\"\n        >\n        </app-search-item>\n        <app-search-item \n          [title]=\"'Cancel at ANY time during your trial.'\"\n          [classes]=\"'list-item-icon fs-16-sofia-300'\"\n        >\n        </app-search-item>\n      </ul>\n      <h5 class=\"fs-h5\">These awesome companies are using Secure Privacy</h5>\n      <app-icon-container></app-icon-container>\n    </div>\n    <div class=\"registration-form__body--right\">\n      <div class=\"registration-form__wrapper-top\" [ngSwitch]=\"activeScreen\">\n        <app-form-screen-first *ngSwitchCase=\"1\"></app-form-screen-first>\n        <app-form-screen-second *ngSwitchCase=\"2\"></app-form-screen-second>\n        <app-form-screen-third *ngSwitchCase=\"3\"></app-form-screen-third>\n        <app-form-screen-fourth *ngSwitchCase=\"4\"></app-form-screen-fourth>\n        <app-form-screen-fifth *ngSwitchCase=\"5\"></app-form-screen-fifth>\n      </div>\n      <div class=\"registration-form__wrapper-bottom\">\n        <div class=\"registration-form__wrapper-bottom--left\">\n          <app-steps [activePoints]=\"activeScreen\"></app-steps>\n        </div>\n        <app-gradient-button \n          [title]=\"'Next'\"\n          (click)=\"changeScreen()\"\n        >\n        </app-gradient-button>\n      </div>\n    </div>\n  </div>  \n</div>\n<div class=\"registration-form\" *ngIf=\"isMobile\">\n<div class=\"registration-form__header\">\n    <img class=\"registration-form__logo\" src=\"assets/images/logo.png\" alt=\"logo secure privacy\">\n    <app-info-button [title]=\"'support'\"></app-info-button>\n</div>\n<div class=\"registration-form__body\" [ngStyle]=\"{'padding-top':'10px'}\">\n  <div \n    class=\"registration-form__body--left\" \n    *ngIf=\"!isStarted\"\n    [ngStyle]=\"{'width':'100%', 'align-items': 'center'}\"\n  >\n    <h2 class=\"fs-h2\">\n      Register now and receive 100% no-risk\n      <span class=\"fs-h2--bold\">Free Trial</span>\n    </h2>\n    <ul class=\"registration-form__list\">\n      <app-search-item \n        [title]=\"'Get access to all features.'\"\n        [classes]=\"'list-item-icon fs-16-sofia-300'\"\n      >\n      </app-search-item>\n      <app-search-item \n        [title]=\"'Pay NOTHING for the first 7-days.'\"\n        [classes]=\"'list-item-icon fs-16-sofia-300'\"\n      >\n      </app-search-item>\n      <app-search-item \n        [title]=\"'Cancel at ANY time during your trial.'\"\n        [classes]=\"'list-item-icon fs-16-sofia-300'\"\n      >\n      </app-search-item>\n    </ul>\n    <h5 class=\"fs-h5\">These awesome companies are using Secure Privacy</h5>\n    <app-icon-container></app-icon-container>\n    <div [ngStyle]=\"{'margin-bottom':'32px'}\"></div>\n    <app-gradient-button \n      [title]=\"'get started'\"\n      (click)=\"setIsStarted()\"\n    >\n    </app-gradient-button>\n  </div>\n  <div \n    class=\"registration-form__body--right\" \n    *ngIf=\"isStarted\"\n    [ngStyle]=\"{'width':'100%'}\"\n  >\n    <div class=\"registration-form__wrapper-top\" [ngSwitch]=\"activeScreen\">\n      <app-form-screen-first *ngSwitchCase=\"1\"></app-form-screen-first>\n      <app-form-screen-second *ngSwitchCase=\"2\"></app-form-screen-second>\n      <app-form-screen-third *ngSwitchCase=\"3\"></app-form-screen-third>\n      <app-form-screen-fourth *ngSwitchCase=\"4\"></app-form-screen-fourth>\n      <app-form-screen-fifth *ngSwitchCase=\"5\"></app-form-screen-fifth>\n    </div>\n    <div class=\"registration-form__wrapper-bottom\">\n        <app-simple-button \n          [classes]=\"'btn-app fs-16-sofia-500 btn-transparent'\"\n          [title]=\"'back'\"\n          (click)=\"changeScreenToPrevious()\"\n        >\n        </app-simple-button>\n        <app-gradient-button \n          [title]=\"'Next'\"\n          (click)=\"changeScreen()\"\n        >\n        </app-gradient-button>\n      </div>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "RollUpComponent",
            "id": "component-RollUpComponent-2bb4549dd8eed6ed1ebd1f4791556712",
            "file": "src/app/molecules/roll-up/roll-up.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-roll-up",
            "styleUrls": [
                "./roll-up.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./roll-up.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "title",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-roll-up',\n  templateUrl: './roll-up.component.html',\n  styleUrls: ['./roll-up.component.scss']\n})\n\nexport class RollUpComponent implements OnInit {\n  @Input() title: string;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".roll-up {\n  background-color: rgba(var(--secondary-color-code), 0.05);\n}",
                    "styleUrl": "./roll-up.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 10
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"roll-up\">\n    <p class=\"roll-up__text\">{{ title }}</p>\n    <ng-content></ng-content>\n</div>\n"
        },
        {
            "name": "RoundIconComponent",
            "id": "component-RoundIconComponent-0bbb7bc258c7adfb082d20f9b1a086d0",
            "file": "src/app/atoms/icons/round-icon/round-icon.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-round-icon",
            "styleUrls": [
                "./round-icon.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./round-icon.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "classes",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-round-icon',\n  templateUrl: './round-icon.component.html',\n  styleUrls: ['./round-icon.component.scss']\n})\n\nexport class RoundIconComponent {\n  @Input() classes: string;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-round-icon {\n  width: 19px;\n  height: 19px;\n  border-radius: 50%;\n  position: relative;\n\n  &__positive {\n    background: var(--success-grad-light);\n\n    &:after {\n      content: \"\";\n      width: 19px;\n      height: 19px;\n      position: absolute;\n      background: no-repeat center url(\"../../../../assets/images/checkbox.svg\");\n    }\n  }\n\n  &__negative {\n    background: rgba(var(--danger-color-code), 0.2);\n\n    &:after {\n      content: \"\";\n      width: 19px;\n      height: 19px;\n      position: absolute;\n      background: no-repeat center url(\"../../../../assets/images/close.svg\");\n    }\n  }\n}",
                    "styleUrl": "./round-icon.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div [ngClass]=\"classes\"></div>\n"
        },
        {
            "name": "ScanAnimationComponent",
            "id": "component-ScanAnimationComponent-4e1169f6dab08960767b6591d56655d7",
            "file": "src/app/atoms/scan-animation/scan-animation.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-scan-animation",
            "styleUrls": [
                "./scan-animation.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./scan-animation.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-scan-animation',\n  templateUrl: './scan-animation.component.html',\n  styleUrls: ['./scan-animation.component.scss']\n})\n\nexport class ScanAnimationComponent {\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".scan-animation {\n  position: relative;\n  width: fit-content;\n\n  &__loader {\n    position: absolute;\n    left: -13px;\n\n    width: 106px;\n    height: 40px;\n    overflow: hidden;\n    background: linear-gradient(180deg, rgba(255, 255, 255, 0) -20px, #FFFFFF 81.25%, #FFFFFF 40px);\n  \n    -webkit-animation: 2s linear 0s infinite alternate loading;\n    -moz-animation: 2s linear 0s infinite alternate loading;\n    -o-animation: 2s linear 0s infinite alternate loading;\n    animation: 2s linear 0s infinite alternate loading;\n\n    &:after {\n      content: \"\";\n      position: absolute;\n      bottom: 0;\n      left: 0;\n\n      width: 112px;\n      height: 2px;\n      \n      background: var(--success-grad-dark);\n      border-radius: 50%;\n    }\n  }\n\n  &__img {\n    width: 80px;\n    height: 95px;\n  }\n}\n\n@-webkit-keyframes loading { from { top:-30px; } to { top:55px; }  }\n@-moz-keyframes loading { from { top:-30px; } to { top:55px; }  }\n@-o-keyframes loading { from { top:-30px; } to { top:55px; }  }\n@keyframes loading { from { top:-30px; } to { top:55px; }  }",
                    "styleUrl": "./scan-animation.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "\n<div class=\"scan-animation\">\n  <img src=\"assets/images/scan.png\" alt=\"document\" class=\"scan-animation__img\">\n  <div class=\"scan-animation__loader\"></div>\n</div>\n"
        },
        {
            "name": "ScanReportComponent",
            "id": "component-ScanReportComponent-0be84ba3302bfca6feae500bc9a9d3e4",
            "file": "src/app/organisms/scan-report/scan-report.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-scan-report",
            "styleUrls": [
                "./scan-report.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./scan-report.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "element",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 50,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'nav'"
                        }
                    ]
                },
                {
                    "name": "isMobile",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "isSideMenuVisible",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "items",
                    "defaultValue": "['reports', 'domains', 'users', 'account', 'request portal']",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "itemsToSearch",
                    "defaultValue": "['My current company', 'My clients company', 'secure privacy', 'secure privacy2', 'secure privacy3']",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "leftSideMenuItems",
                    "defaultValue": "[\n    { title: 'scan'},\n    { title: 'style'},\n    { title: 'cookie banner'},\n    { title: 'IAB 2.0 settings'},\n    { title: 'Preference Center', sections: ['GDPR/ePrivacy', 'CCPA', 'LGPD']},\n    { title: 'data request form'},\n    { title: 'Preference Center', sections: ['Privacy Policy', 'Cookie Declaration', 'Embed On Website']},\n    { title: 'cookie classification'},\n    { title: 'languages'},\n    { title: 'coverage'},\n    { title: 'installation'},\n  ]",
                    "type": "SideItems[]",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "mobileMenuItems",
                    "defaultValue": "[\n    { title: 'Reports', svgPath: 'assets/images/menu/Reports.svg',   isActive: false,},\n    { title: 'Domains', svgPath: 'assets/images/menu/Domains.svg',   isActive: false,},\n    { title: 'Account', svgPath: 'assets/images/menu/Account.svg',   isActive: false,},\n    { title: 'Options', svgPath: 'assets/images/menu/Options.svg',   isActive: false,},\n  ]",
                    "type": "MobileItems[]",
                    "optional": false,
                    "description": "",
                    "line": 37
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 64
                },
                {
                    "name": "toggleSideMenu",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46
                }
            ],
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "document:click",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event"
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "line": 58
                },
                {
                    "name": "window:resize",
                    "args": [
                        {
                            "name": "event",
                            "type": "any"
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "line": 53
                }
            ],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, ElementRef, OnInit, HostListener, ViewEncapsulation, ViewChild } from '@angular/core';\n\ninterface SideItems {\n  title: string;\n  sections?: string[],\n}\n\ninterface MobileItems {\n  title: string;\n  svgPath: string,\n  isActive: boolean\n}\n\n@Component({\n  selector: 'app-scan-report',\n  templateUrl: './scan-report.component.html',\n  styleUrls: ['./scan-report.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\n\nexport class ScanReportComponent implements OnInit {\n  items: string[] = ['reports', 'domains', 'users', 'account', 'request portal'];\n  itemsToSearch: string[] = ['My current company', 'My clients company', 'secure privacy', 'secure privacy2', 'secure privacy3'];\n  leftSideMenuItems: SideItems[] = [\n    { title: 'scan'},\n    { title: 'style'},\n    { title: 'cookie banner'},\n    { title: 'IAB 2.0 settings'},\n    { title: 'Preference Center', sections: ['GDPR/ePrivacy', 'CCPA', 'LGPD']},\n    { title: 'data request form'},\n    { title: 'Preference Center', sections: ['Privacy Policy', 'Cookie Declaration', 'Embed On Website']},\n    { title: 'cookie classification'},\n    { title: 'languages'},\n    { title: 'coverage'},\n    { title: 'installation'},\n  ]\n  mobileMenuItems: MobileItems[] = [\n    { title: 'Reports', svgPath: 'assets/images/menu/Reports.svg',   isActive: false,},\n    { title: 'Domains', svgPath: 'assets/images/menu/Domains.svg',   isActive: false,},\n    { title: 'Account', svgPath: 'assets/images/menu/Account.svg',   isActive: false,},\n    { title: 'Options', svgPath: 'assets/images/menu/Options.svg',   isActive: false,},\n  ]\n  isMobile: boolean = false;\n  isSideMenuVisible: boolean = false;\n\n  toggleSideMenu() {\n    this.isSideMenuVisible = !this.isSideMenuVisible;\n  }\n  \n  @ViewChild('nav') element: ElementRef;\n\n  @HostListener('window:resize', ['$event'])\n  onResize(event: any) {\n    this.isMobile = (event.target.innerWidth < 800) ? true : false;\n  }\n\n  @HostListener('document:click', ['$event'])\n\tonClick(event: Event) {\n    if (!this.element.nativeElement.contains(event.target)) {\n      this.isSideMenuVisible = false;\n    }\n  }\n  \n  ngOnInit(): void {\n    this.isMobile = (window.innerWidth < 800) ? true : false;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-scan-report {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  width: 100%;\n  background-color: var(--layout-bg-color);\n  color: var(--secondary-color);\n\n  &__title {\n    margin-bottom: 35px;\n  }\n\n  &__logo {\n    width: 117px;\n    height: 46px;   \n  }\n\n  &__wrapper {\n    display: flex;\n    justify-content: center;\n    width: 100%;\n    background: rgba(var(--text-color-code), 0.5);\n  }\n\n  &__nav {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    \n    padding: 20px 64px;\n    width: 100%;\n    max-width: 1280px;\n  }\n\n  &__container {\n    display: flex;\n    justify-content: space-between;\n    width: 100%;\n    max-width: 1280px;\n    padding: 22px 45px 220px 45px;\n\n    &--left {\n      width: 260px;\n    }\n\n    &--right {\n      width: 72%;\n    }\n  }\n\n  &__box {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    width: 100%;\n    margin-bottom: 42px;\n  }\n}\n\napp-select-input-search {\n  width: 80%;\n}\n\n@media screen and (max-width: 1150px) {\n  .app-scan-report {\n    &__nav {\n      padding: 20px;\n    }\n\n    &__container {\n      padding: 20px;\n\n      &--right {\n        width: 60%;\n      }\n    }\n  }\n}\n\n@media screen and (max-width: 800px) {\n  .app-scan-report {\n    text-align: center;\n    \n    &__nav {\n      position: relative;\n    }\n\n    &__container {\n      &--right {\n        width: 100%;\n      }\n    }\n  }\n\n  app-mobile-main-navigation-menu {\n    width: 100%;\n  }\n\n  app-checkbox-input-simple {\n    text-align: left;\n  }\n\n  app-composite-menu {\n    position: absolute; \n    top: 90px;\n    left: 0;\n    z-index: 2;\n\n    transition: margin-left 1s;\n  }\n}\n",
                    "styleUrl": "./scan-report.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<div id=\"block\" class=\"app-scan-report\">\n  <div class=\"app-scan-report__wrapper\">\n    <nav class=\"app-scan-report__nav\" *ngIf=\"!isMobile\">\n      <img class=\"app-scan-report__logo\" src=\"assets/images/logo.png\" alt=\"logo\">\n      <app-main-navigation-menu [items]=\"items\"></app-main-navigation-menu>\n      <app-info-button [title]=\"'support'\"></app-info-button>\n    </nav>\n    <nav class=\"app-scan-report__nav\" #nav *ngIf=\"isMobile\">\n      <app-mobile-button [isOpen]=\"isSideMenuVisible\" (click)=\"toggleSideMenu()\"></app-mobile-button>\n      <app-select-input-search\n        [classes]=\"'custom-icon fs-16-sofia-300'\"\n        [placeholderText]=\"'Search for'\"\n        [items]=\"itemsToSearch\" \n      >\n      </app-select-input-search>\n      <app-composite-menu \n        [items]=\"leftSideMenuItems\" \n        *ngIf=\"isSideMenuVisible\"\n      >\n      </app-composite-menu>\n    </nav>\n  </div>\n  <div class=\"app-scan-report__container\">\n    <div class=\"app-scan-report__container--left\" *ngIf=\"!isMobile\">\n      <div class=\"app-scan-report__box\">\n        <app-light-button></app-light-button>\n        <app-select-input-search\n          [classes]=\"'custom-icon fs-16-sofia-300'\"\n          [placeholderText]=\"'Search for'\"\n          [items]=\"itemsToSearch\" \n        >\n        </app-select-input-search>\n      </div>\n      <app-composite-menu [items]=\"leftSideMenuItems\"></app-composite-menu>\n    </div>\n    <div class=\"app-scan-report__container--right\">\n      <h1 class=\"app-scan-report__title fs-h1\">Scan Report</h1>\n      <app-scan-screens></app-scan-screens>\n    </div>\n  </div>\n  <app-mobile-main-navigation-menu *ngIf=\"isMobile\" [items]=\"mobileMenuItems\"></app-mobile-main-navigation-menu>\n</div>\n"
        },
        {
            "name": "ScanScreensComponent",
            "id": "component-ScanScreensComponent-3f869cea3c87e915b65c8bf16138b8e1",
            "file": "src/app/molecules/scan-screens/scan-screens.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-scan-screens",
            "styleUrls": [
                "./scan-screens.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./scan-screens.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-scan-screens',\n  templateUrl: './scan-screens.component.html',\n  styleUrls: ['./scan-screens.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\n\nexport class ScanScreensComponent {\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-scan-screen {\n  width: 100%;\n  padding: 32px 32px 72px 32px;\n  background: var(--text-color);\n  border-radius: 20px;\n  color: var(--secondary-color);\n\n  &__title {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 90px;\n\n    & > h4 {\n      flex: 0 0 150px;  \n    }\n  }\n\n  &__line {\n    height: 1px;\n    width: 75%;\n    background: var(--success-grad-light);\n    opacity: 0.1;\n  }\n\n  &__container {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    width: 100%;\n\n    & > .fs-h3 {\n      margin-bottom: 18px;\n      margin-top: 32px;\n    }\n\n    & > .fs-16-sofia-300 {\n      margin-bottom: 57px;\n      opacity: 0.75;\n    }\n  }\n}\n\n.app-checkbox-input-simple__container {\n  margin-bottom: 20px;\n}",
                    "styleUrl": "./scan-screens.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"app-scan-screen\">\n  <div class=\"app-scan-screen__title\">\n    <h4 class=\"fs-h4--bold\">scan report</h4> \n    <div class=\"app-scan-screen__line\"></div>\n  </div>\n  <div class=\"app-scan-screen__container\">\n    <app-scan-animation></app-scan-animation>\n    <h3 class=\"fs-h3\">Scaning halo-lab.com</h3>\n    <p class=\"fs-16-sofia-300\">The site is being scanned, it will take 5-7 minutes. </p>\n    <app-checkbox-input-simple\n      [isChecked]=\"true\"\n      [title]=\"'Send me an e-mail once the scan is completed'\"\n    >\n    </app-checkbox-input-simple>\n    <app-simple-button\n      [title]=\"'notify me'\"\n      [classes]=\"'btn-app--asimetric  btn-success-asimetric fs-16-sofia-800'\"\n    >\n    </app-simple-button>\n  </div>\n</div>\n"
        },
        {
            "name": "searchItemComponent",
            "id": "component-searchItemComponent-c04584685abc1f9ee048d1ec42325888",
            "file": "src/app/atoms/searchItem/searchItem.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-search-item",
            "styleUrls": [
                "searchItem.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./searchItem.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "classes",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "title",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-search-item',\n  templateUrl: './searchItem.component.html',\n  styleUrls: ['searchItem.component.scss'],\n})\n\nexport class searchItemComponent {\n  @Input() title: string;\n  @Input() classes: string;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".search-list__item {\n  width: 100%;\n  height: 46px;\n  padding: 15px 53px;\n\n  list-style: none;\n  transition: 0.3s;\n  background: var(--input-bg-color);\n  color: var(--secondary-color);\n  opacity: 0.75;\n\n  &:hover {\n    cursor: pointer;\n    background-color: var(--light-btn-hover);\n  }\n}\n\n.list-item-icon {\n  width: 100%;\n  height: auto;\n  padding: 19px 53px;\n\n  border: 1px solid rgba(var(--secondary-color-code), 0.1);\n  border-radius: 8px;\n  position: relative;\n  color: rgba(var(--secondary-color-code), 0.7);\n\n  &:after {\n    content: url('../../../assets/images/check.png');\n    position: absolute;\n    left: 17px;\n    top: calc(50% - 10px);\n  }\n}",
                    "styleUrl": "searchItem.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<li \n  [ngClass]=\"classes\"\n>\n  {{ title }}\n</li>\n\n"
        },
        {
            "name": "secondaryButtonComponent",
            "id": "component-secondaryButtonComponent-65584aec48d82b58943952a5ce07e8d8",
            "file": "src/app/atoms/buttons/secondaryButton/secondaryButton.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-secondary-button",
            "styleUrls": [
                "../button.component.scss",
                "secondaryButton.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./secondaryButton.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "color",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "title",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-secondary-button',\n  templateUrl: './secondaryButton.component.html',\n  styleUrls: ['../button.component.scss', 'secondaryButton.component.scss'],\n})\n\nexport class secondaryButtonComponent {\n  @Input() title: string;\n  @Input() backgroundColor: string;\n  @Input() color: string;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".btn-app {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  transition: 0.3s;\n  border-radius: 8px;\n\n  &--h36 {\n    display: flex;\n    align-items: center;\n\n    height: 36px;\n    padding: 0 18px 0 18px;\n  }\n  \n  &--asimetric {\n    border-radius: 20px 5px;\n    height: 52px;\n    padding: 18px 41px 18px 44px;\n  }\n\n  &--h46 {\n    height: 46px;\n    padding: 13px 15px 12px 15px;\n  }\n\n  &--h53 {\n    height: 53px;\n    padding: 9px 10px;\n  }\n}\n",
                    "styleUrl": "../button.component.scss"
                },
                {
                    "data": ".btn-secondary {\n  background: rgba(var(--secondary-color-code),0.05);\n  color: var(--secondary-color);\n  border: none;\n\n  &__title {\n    margin-left: 20px;\n  }\n\n  &:hover {\n    background: rgba(var(--secondary-color-code),0.2);\n  }\n\n  &:active {\n    background: rgba(var(--secondary-color-code),0.7);\n    color: var(--text-color);\n  }\n\n  & > svg {\n    fill: var(--secondary-color); \n    opacity: 0.5;\n    fill-opacity: 1;\n    transition: 0.3s;\n  }\n\n  &:active > svg { \n    opacity: 1;\n    fill: var(--text-color);\n  }\n}",
                    "styleUrl": "secondaryButton.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<button \n  [ngStyle]=\"{'background': backgroundColor, 'color': color }\"\n  class=\"btn-secondary btn-app btn-app--h46 fs-16-sofia-300\"\n> \n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M17 0H3C2.20435 0 1.44129 0.316071 0.87868 0.87868C0.316071 1.44129 1.80878e-07 2.20435 \n    1.80878e-07 3V4.17C-0.000143207 4.58294 0.0849664 4.99147 0.25 5.37V5.43C0.39128 5.75097 \n    0.591392 6.04266 0.84 6.29L7 12.41V19C6.99966 19.1699 7.04264 19.3372 7.12487 19.4859C7.20711 \n    19.6346 7.32589 19.7599 7.47 19.85C7.62914 19.9486 7.81277 20.0006 8 20C8.15654 19.9991 8.31068 \n    19.9614 8.45 19.89L12.45 17.89C12.6149 17.8069 12.7536 17.6798 12.8507 17.5227C12.9478 17.3656 \n    12.9994 17.1847 13 17V12.41L19.12 6.29C19.3686 6.04266 19.5687 5.75097 19.71 5.43V5.37C19.8888 \n    4.99443 19.9876 4.58578 20 4.17V3C20 2.20435 19.6839 1.44129 19.1213 0.87868C18.5587 0.316071 \n    17.7956 0 17 0ZM11.29 11.29C11.1973 11.3834 11.124 11.4943 11.0742 11.6161C11.0245 11.7379 10.9992 \n    11.8684 11 12V16.38L9 17.38V12C9.00076 11.8684 8.97554 11.7379 8.92577 11.6161C8.87601 11.4943 8.80268\n    11.3834 8.71 11.29L3.41 6H16.59L11.29 11.29ZM18 4H2V3C2 2.73478 2.10536 2.48043 2.29289\n    2.29289C2.48043 2.10536 2.73478 2 3 2H17C17.2652 2 17.5196 2.10536 17.7071 2.29289C17.8946 2.48043 \n    18 2.73478 18 3V4Z\" />\n  </svg>\n  <p class=\"btn-secondary__title\" *ngIf=\"title!==''\">\n    {{ title }}\n  </p>\n</button>"
        },
        {
            "name": "SelectInputSearchComponent",
            "id": "component-SelectInputSearchComponent-347a1d668e9ddb2807d49ae573ea12fd",
            "file": "src/app/atoms/inputs/select-input/select-input-search/select-input-search.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-select-input-search",
            "styleUrls": [
                "./select-input-search.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./select-input-search.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "classes",
                    "line": 13,
                    "type": "string"
                },
                {
                    "name": "items",
                    "line": 11,
                    "type": "string[]"
                },
                {
                    "name": "placeholderText",
                    "line": 12,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "selectedItem",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "onChange",
                    "args": [
                        {
                            "name": "ev",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "jsdoctags": [
                        {
                            "name": "ev",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-select-input-search',\n  templateUrl: './select-input-search.component.html',\n  styleUrls: ['./select-input-search.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\n\nexport class SelectInputSearchComponent {\n  @Input() items: string[];\n  @Input() placeholderText: string;\n  @Input() classes: string;\n\n  selectedItem: string;\n  \n  onChange(ev) {\n    this.selectedItem=ev\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".ng-select {\n  position: relative;\n  box-sizing: border-box;\n  height: 48px; \n  width: 100%;\n\n  background: rgba(var(--secondary-color-code), 0.05);\n  border-radius: 8px;\n  color: rgba(var(--secondary-color-code), 0.5);\n\n  &:hover {\n    background: rgba(var(--secondary-color-code), 0.1);\n  }\n\n  &-container {\n    width: 100%;\n    height: 46px;\n    margin-bottom: 4px;\n  }\n}\n\n.ng-dropdown-panel {\n  position: absolute;\n  left: 0;\n  text-align: left;\n}\n\n.scroll-host{\n  color: rgba(var(--secondary-color-code), 1);\n  position: absolute;\n  box-shadow: 0px 30px 70px rgba(46, 45, 79, 0.15);\n  border-radius: 8px;\n}\n\n.ng-clear-wrapper {\n  display: none;\n}\n\n.ng-value-container .ng-input {\n  & > input {\n    font-family: 'Sofia pro', 'open-sans';\n    font-style: normal;\n    font-style: normal;\n    font-weight: 300;\n    font-size: 16px;\n    color: var(--secondary-color);\n  }\n}\n\n.ng-option {\n  background-color: var(--input-bg-color);\n  padding: 17px 21px 15px 16px;  \n} \n\n.custom {\n  &.ng-select {\n    & > .ng-select-container {\n      padding: 15px 21px 15px 16px;\n\n      & .ng-value-container .ng-input {\n        padding-left: 16px;\n      }\n    }\n  }\n}\n\n.custom-icon {\n  &.ng-select {\n    & > .ng-select-container {\n      padding: 16px 21px 15px 52px;\n      position: relative;\n\n      &:after {\n        content: url('../../../../../assets/images/Search.png');\n        position: absolute;\n        top: 13px;\n        left: 16px;\n        opacity: 0.5;\n      }\n\n      & .ng-value-container .ng-input {\n        padding-left: 52px;\n        padding-right: 16px;\n      }\n    }\n  }\n}",
                    "styleUrl": "./select-input-search.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<ng-select \n    [(ngModel)]=\"selectedItem\"\n    [ngClass]=\"classes\" \n    (change)=\"onChange($event)\"\n    [hideSelected]=\"true\"\n    [editableSearchTerm]=\"true\"\n    [placeholder]=\"placeholderText\"\n>\n  <ng-option class=\"option\" *ngFor=\"let item of items\" [value]=\"item\">\n    {{item}}\n  </ng-option>\n</ng-select>\n"
        },
        {
            "name": "SelectInputSimpleComponent",
            "id": "component-SelectInputSimpleComponent-9991dd07f591a039fd9ce3dcf82abeb9",
            "file": "src/app/atoms/inputs/select-input/select-input-simple/select-input-simple.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-select-input-simple",
            "styleUrls": [
                "./select-input-simple.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./select-input-simple.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "initialValue",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "items",
                    "line": 11,
                    "type": "string[]"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "selectedItem",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-select-input-simple',\n  templateUrl: './select-input-simple.component.html',\n  styleUrls: ['./select-input-simple.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\n\nexport class SelectInputSimpleComponent implements OnInit {\n  @Input() items: string[];\n  @Input() initialValue: string;\n\n  selectedItem: string;\n\n  ngOnInit(): void {\n    this.selectedItem = this.initialValue;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "\n.ng-select {\n  position: relative;\n  box-sizing: border-box;\n  height: 48px; \n  width: 100%;\n\n  background: rgba(var(--secondary-color-code), 0.05);\n  border-radius: 8px;\n  color: rgba(var(--secondary-color-code), 0.5);\n\n  &:hover {\n    background: rgba(var(--secondary-color-code), 0.1);\n  }\n\n  &:after {\n    content: url('../../../../../assets/images/select.png');\n    position: absolute;\n    top: calc(50% - 11px);\n    right: 21px;\n  }\n\n  &.ng-select-opened{\n    &:after {\n      content: url('../../../../../assets/images/select.png');\n      position: absolute;\n      top: calc(50% - 11px);\n      right: 21px;\n      transform: rotate(180deg);\n    }\n  }\n\n  &-container {\n    width: 100%;\n    height: 46px;\n    padding: 15px 21px 15px 16px;\n    margin-bottom: 4px;\n  }\n}\n\n.ng-option {\n  background-color: var(--input-bg-color);\n  padding: 17px 21px 15px 16px;  \n\n  &:hover {\n    background-color: var(--light-btn-hover);\n    font-weight: bold;\n  }\n}\n\n.ng-dropdown-panel {\n  position: absolute;\n}\n\n.scroll-host{\n  color: rgba(var(--secondary-color-code), 1);\n  position: absolute;\n  box-shadow: 0px 30px 70px rgba(46, 45, 79, 0.15);\n  border-radius: 8px;\n}\n\n.ng-clear-wrapper {\n  display: none;\n}",
                    "styleUrl": "./select-input-simple.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<ng-select \n    [(ngModel)]=\"selectedItem\"\n    class=\"custom fs-16-sofia-300\" \n    [hideSelected]=\"true\"\n    [searchable]=\"false\"\n>\n  <ng-option class=\"option\" *ngFor=\"let item of items\" [value]=\"item\">\n    {{item}}\n  </ng-option>\n</ng-select>\n\n  "
        },
        {
            "name": "SemicircleChartCardComponent",
            "id": "component-SemicircleChartCardComponent-f5b57447a99cf580b8dede8748e95caa",
            "file": "src/app/atoms/card/semicircle-chart-card/semicircle-chart-card.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-semicircle-chart-card",
            "styleUrls": [
                "./semicircle-chart-card.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./semicircle-chart-card.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "percent",
                    "line": 11,
                    "type": "number"
                },
                {
                    "name": "text",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "title",
                    "line": 10,
                    "type": "string"
                },
                {
                    "name": "value",
                    "line": 13,
                    "type": "number"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-semicircle-chart-card',\n  templateUrl: './semicircle-chart-card.component.html',\n  styleUrls: ['./semicircle-chart-card.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class SemicircleChartCardComponent implements OnInit {\n  @Input() title: string;\n  @Input() percent: number;\n  @Input() text: string;\n  @Input() value: number;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".semicircle-card {\n  width: 256px;\n  height: 152px;\n  overflow: hidden;\n  display: flex;\n\n  border-radius: 12px 30px;\n  color: var(--secondary-color);\n\n  &:hover {\n    box-shadow: 0px 40px 70px rgba(var(--secondary-color-code), 0.3);\n  }\n\n  &__left {\n    width: 44.4%;\n    padding: 10px 16px;\n  }\n\n  &__right {\n    width: 55.6%;\n    padding: 43px 25px 8px 9px;\n    background-color: rgba(var(--secondary-color-code), 0.05);\n  }\n\n  &__title {\n    margin-bottom: 24px;\n  }\n}",
                    "styleUrl": "./semicircle-chart-card.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 13
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"semicircle-card\">\n  <div class=\"semicircle-card__left\">\n    <p class=\"semicircle-card__title fs-14-gramm-400\">{{ title }}</p>\n    <app-semicircle-chart [percent]=\"[percent]\"></app-semicircle-chart>\n  </div>\n  <div class=\"semicircle-card__right\">\n    <span class=\"semicircle-card__value fs-h2-b\">{{ value }}</span>\n    <p class=\"semicircle-card__text fs-12-sofia-300\">{{ text }}</p>\n  </div>\n</div>\n"
        },
        {
            "name": "SemicircleChartComponent",
            "id": "component-SemicircleChartComponent-5bbcedd2b2342972614cc5648d3a5cee",
            "file": "src/app/atoms/semicircle-chart/semicircle-chart.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-semicircle-chart",
            "styleUrls": [
                "./semicircle-chart.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./semicircle-chart.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "percent",
                    "line": 11,
                    "type": "number"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "chartOptions",
                    "defaultValue": "{\n    chart: {\n      type: \"radialBar\",\n      offsetY: 0\n    },\n    plotOptions: {\n      radialBar: {\n        startAngle: -120,\n        endAngle: 120,\n        track: {\n          background: \"#D0DAEB\",\n          strokeWidth: \"97%\",\n        },\n      }\n    },\n    states: {\n      normal: {\n        filter: {\n          type: 'none',\n        }\n      },\n      hover: {\n        filter: {\n          type: 'none',\n        }\n      },\n      active: {\n        allowMultipleDataPointsSelection: false,\n        filter: {\n          type: 'none',\n        }\n      },\n    },\n    fill: {\n      type: \"gradient\",\n      gradient: {\n        type: \"diagonal2\",\n        shadeIntensity: 1,\n        opacityFrom: 0.7,\n        opacityTo: 0.9,\n        colorStops: [\n          {\n            offset: 0,\n            color: '',\n            opacity: 1\n          },\n          {\n            offset: 50,\n            color: '',\n            opacity: 1\n          },\n          {\n            offset: 100,\n            color: '',\n            opacity: 1\n          }\n        ]\n      }\n    }\n  }",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnChanges, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-semicircle-chart',\n  templateUrl: './semicircle-chart.component.html',\n  styleUrls: ['./semicircle-chart.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\n\nexport class SemicircleChartComponent implements OnChanges {\n  @Input() percent: number;\n\n  chartOptions = {\n    chart: {\n      type: \"radialBar\",\n      offsetY: 0\n    },\n    plotOptions: {\n      radialBar: {\n        startAngle: -120,\n        endAngle: 120,\n        track: {\n          background: \"#D0DAEB\",\n          strokeWidth: \"97%\",\n        },\n      }\n    },\n    states: {\n      normal: {\n        filter: {\n          type: 'none',\n        }\n      },\n      hover: {\n        filter: {\n          type: 'none',\n        }\n      },\n      active: {\n        allowMultipleDataPointsSelection: false,\n        filter: {\n          type: 'none',\n        }\n      },\n    },\n    fill: {\n      type: \"gradient\",\n      gradient: {\n        type: \"diagonal2\",\n        shadeIntensity: 1,\n        opacityFrom: 0.7,\n        opacityTo: 0.9,\n        colorStops: [\n          {\n            offset: 0,\n            color: '',\n            opacity: 1\n          },\n          {\n            offset: 50,\n            color: '',\n            opacity: 1\n          },\n          {\n            offset: 100,\n            color: '',\n            opacity: 1\n          }\n        ]\n      }\n    }\n  }\n\n  ngOnChanges () {\n    if (this.percent < 30) {\n      this.chartOptions.fill.gradient.colorStops.forEach(colorStop => colorStop.color = \"#EA2D2D\");\n    } else if (this.percent < 65) {\n      this.chartOptions.fill.gradient.colorStops[0].color = \"#F9BE5A\";\n      this.chartOptions.fill.gradient.colorStops[1].color = \"#F9BE5A\";\n      this.chartOptions.fill.gradient.colorStops[2].color = \"#FB5F47\";\n    } else {\n      this.chartOptions.fill.gradient.colorStops[0].color = \"#0263BC\";\n      this.chartOptions.fill.gradient.colorStops[1].color = \"#24B04B\";\n      this.chartOptions.fill.gradient.colorStops[2].color = \"#24B04B\";\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".chart {\n  position: absolute;\n  top: -20px;\n  left: -33.5px;\n  width: 145px;\n  height: 80px;\n  background: white;\n\n  &__value {\n    position: absolute;\n    top: 30px;\n    left: 22px;\n    z-index: 3;\n    color: var(--secondary-color);\n  }\n}\n\n.wrapper {\n  width: 80px;\n  height: 80px;\n  overflow: hidden;\n  position: relative;\n}\n\n.apexcharts-pie-label, .apexcharts-datalabels, .apexcharts-datalabel, .apexcharts-datalabel-label, .apexcharts-datalabel-value {\n  display: none!important;\n}\n",
                    "styleUrl": "./semicircle-chart.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnChanges"
            ],
            "templateData": "\n<div class=\"wrapper\">\n  <div id=\"chart\" class=\"chart\">\n    <apx-chart\n    [states]=\"chartOptions.states\"\n      [series]=\"percent\"\n      [chart]=\"chartOptions.chart\"\n      [plotOptions]=\"chartOptions.plotOptions\"\n      [fill]=\"chartOptions.fill\"\n    ></apx-chart>\n  </div>\n  <span class=\"chart__value fs-12-gramm-400\">{{ percent[0] }}/100</span>\n</div>"
        },
        {
            "name": "SideMenuComponent",
            "id": "component-SideMenuComponent-298192f99808308ac20568445f2d2cb1",
            "file": "src/app/molecules/menu/side-menu/side-menu.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-side-menu",
            "styleUrls": [
                "./side-menu.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./side-menu.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "items",
                    "line": 10,
                    "type": "string[]"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "active",
                    "defaultValue": "0",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "handlClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "any"
                        },
                        {
                            "name": "i",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "i",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-side-menu',\n  templateUrl: './side-menu.component.html',\n  styleUrls: ['./side-menu.component.scss']\n})\n\nexport class SideMenuComponent {\n  @Input() items: string[];\n\n  active: number = 0;\n  \n  handlClick(event: any, i: number) {\n    event.preventDefault();\n    this.active = i;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-side-menu {\n  width: fit-content;\n  min-width: 260px;\n  padding: 32px 72px 12px 32px;\n  \n  border-radius: 12px 30px;\n  background-color: var(--text-color);\n  box-shadow: 0px 50px 70px rgba(44, 59, 82, 0.15);\n  \n  &__item {\n    width: fit-content;\n    margin-bottom: 20px;\n  }\n}",
                    "styleUrl": "./side-menu.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<ul class=\"app-side-menu list\">\n  <li \n    class=\"app-side-menu__item\"\n    *ngFor=\"let item of items; let i = index\" \n  >   \n    <app-nav-link\n      [isActive]=\"active === i\"\n      [title]=\"item\" \n      classes=\"nav-link-secondary fs-12-gramm-400\"\n      (click)=\"handlClick($event, i)\"\n    >\n    </app-nav-link>\n  </li>\n</ul>\n\n  \n"
        },
        {
            "name": "simpleButtonComponent",
            "id": "component-simpleButtonComponent-1ca71d0f8e590958a051c006dce82e0a",
            "file": "src/app/atoms/buttons/simpleButton/simpleButton.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-simple-button",
            "styleUrls": [
                "../button.component.scss",
                "simpleButton.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./simpleButton.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "classes",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "color",
                    "line": 13,
                    "type": "string"
                },
                {
                    "name": "title",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-simple-button',\n  templateUrl: './simpleButton.component.html',\n  styleUrls: ['../button.component.scss', 'simpleButton.component.scss'],\n})\n\nexport class simpleButtonComponent {\n  @Input() title: string;\n  @Input() classes: string;\n  @Input() backgroundColor: string;\n  @Input() color: string;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".btn-app {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  transition: 0.3s;\n  border-radius: 8px;\n\n  &--h36 {\n    display: flex;\n    align-items: center;\n\n    height: 36px;\n    padding: 0 18px 0 18px;\n  }\n  \n  &--asimetric {\n    border-radius: 20px 5px;\n    height: 52px;\n    padding: 18px 41px 18px 44px;\n  }\n\n  &--h46 {\n    height: 46px;\n    padding: 13px 15px 12px 15px;\n  }\n\n  &--h53 {\n    height: 53px;\n    padding: 9px 10px;\n  }\n}\n",
                    "styleUrl": "../button.component.scss"
                },
                {
                    "data": ".btn-danger {\n  color: var(--danger-color);\n  background: inherit;\n  outline: none;\n  border: 1px solid rgba(var(--danger-color-code), 0.2);\n\n  &:hover {\n    cursor: pointer;\n    background: rgba(var(--danger-color-code), 0.3);\n  }\n\n  &:active {\n    background: rgba(var(--danger-color-code), 0.5);\n  }\n}\n\n.btn-transparent {\n  position: relative;\n  padding-left: 20px;\n\n  text-transform: uppercase;\n  color: rgba(var(--secondary-color-code), 0.75);\n  border: none;\n  background-color: transparent;\n\n  &:hover {\n    &:after {\n      content: url('../../../../assets/images/back.svg');\n      position: absolute;\n      top: 0;\n      left: 0;\n    }\n  }\n}\n\n.btn-success {\n  position: relative;\n  z-index: 2;\n\n  background: transparent;\n  border: none;\n  color: var(--text-color);\n  text-transform: uppercase;\n\n  &::before {\n    content: '';\n    position: absolute;\n    z-index: -1;\n    top: 0;\n    left: 0;\n\n    width: 100%;\n    height: 100%;\n    \n    background: var(--success-grad-light);\n    border-radius: 8px;\n    transition: 0.3s;\n  }\n\n  &::after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    z-index: -1;\n\n    width: 100%;\n    height: 100%;\n\n    background: var(--success-grad-dark);\n    border-radius: 8px;\n    transition: 0.3s;\n    opacity: 0;\n  }\n\n  &:hover {\n    &::before {\n      opacity: 0;\n    }\n\n    &::after {\n      opacity: 1;\n    }\n  }\n\n  &:active {\n    &::before {\n      opacity: 1;\n    }\n\n    &::after {\n      opacity: 0;\n    }\n  }\n}\n\n\n.btn-success-asimetric {\n  position: relative;\n  z-index: 2;\n\n  background: transparent;\n  border: none;\n  color: var(--text-color);\n  text-transform: uppercase;\n\n  &::before {\n    content: '';\n    position: absolute;\n    z-index: -1;\n    top: 0;\n    left: 0;\n\n    width: 100%;\n    height: 100%;\n    \n    background: var(--success-grad-light);\n    border-radius: 20px 5px;\n    transition: 0.3s;\n  }\n  \n  &::after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    z-index: -1;\n\n    width: 100%;\n    height: 100%;\n\n    background: var(--success-grad-dark);\n    border-radius: 20px 5px;\n    transition: 0.3s;\n    opacity: 0;\n  }\n  \n  &:hover {\n    &::before {\n      opacity: 0;\n    }\n\n    &::after {\n      opacity: 1;\n    }\n  }\n  \n  &:active {\n      &::before {\n        opacity: 1;\n      }\n\n      &::after {\n        opacity: 0;\n      }\n    }\n  }\n",
                    "styleUrl": "simpleButton.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<button\n  [ngClass]=\"classes\"\n  [ngStyle]=\"{ 'background-color': backgroundColor, 'color': color }\"\n>\n  {{ title }}\n</button>\n"
        },
        {
            "name": "StepsComponent",
            "id": "component-StepsComponent-0ca1f66f74e881de4f64e09798a4066a",
            "file": "src/app/atoms/steps/steps.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-steps",
            "styleUrls": [
                "./steps.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./steps.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "activePoints",
                    "line": 11,
                    "type": "number"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "classes",
                    "defaultValue": "[]",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnChanges } from '@angular/core';\nimport { detectClasses } from './helpers';\n\n@Component({\n  selector: 'app-steps',\n  templateUrl: './steps.component.html',\n  styleUrls: ['./steps.component.scss']\n})\n\nexport class StepsComponent implements OnChanges {\n  @Input() activePoints: number;\n  classes: string[] = [];\n  \n  ngOnChanges(): void {\n    this.classes = detectClasses(this.activePoints);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-steps {\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n\n  width: 100%;\n  height: 47px;\n\n  &__label {\n    position: absolute;\n    top: 200%;\n  }\n\n  &__line {\n    height: 1px;\n    width: 49%;\n    z-index: 3;\n    margin-top: 3px;\n    background-color: var(--text-color);\n  \n    &.active {\n      background: var(--success-grad-light);\n    }\n  }\n\n  &__circle {\n    position: relative;\n    z-index: 2;\n    height: 8px;\n    width: 8px;\n    border-radius: 50%;\n    color: rgba(var(--secondary-color-code), 0.5);\n\n    & > .app-steps__dot {\n      height: 8px;\n      width: 8px;\n      border-radius: 50%;\n      background: rgba(var(--secondary-color-code), 0.5);\n    }\n\n    &.active {\n      color: var(--secondary-color);\n  \n      & > .app-steps__dot {\n        background: var(--success-grad-light);\n      }\n    }\n\n    &::before {\n      content: \"\";\n      position: absolute;\n      top: -3px;\n      left: -3px;\n      z-index: -1;\n\n      height: 14px;\n      width: 14px;\n\n      border-radius: 50%;\n      background: var(--text-color)\n    }\n  }\n}\n\n.text-al-left {\n  text-align: left;\n}\n\n.text-al-center {\n  text-align: center;\n  left: -18px;\n}\n\n.text-al-right {\n  text-align: right;\n  left: -50px;\n}",
                    "styleUrl": "./steps.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnChanges"
            ],
            "templateData": "<div class=\"app-steps fs-12-sofia-400\">\n  <div [ngClass]=\"classes[0]\">\n    <div class=\"app-steps__dot\"></div>\n    <div class=\"app-steps__label text-al-left\">Add your information</div>\n  </div>\n  <div [ngClass]=\"classes[1]\"></div>\n  <div [ngClass]=\"classes[2]\">\n    <div class=\"app-steps__dot\"></div>\n    <div class=\"app-steps__label text-al-center\">Add domain</div>\n  </div>\n  <div [ngClass]=\"classes[3]\"></div>\n  <div [ngClass]=\"classes[4]\">\n    <div class=\"app-steps__dot\"></div>\n    <div class=\"app-steps__label text-al-right\">Select coverage</div>\n  </div>\n</div>\n"
        },
        {
            "name": "TextWithGradientBackComponent",
            "id": "component-TextWithGradientBackComponent-573d6d4c08bd5d9f6f87117c9919d70b",
            "file": "src/app/atoms/text/text-with-gradient-back/text-with-gradient-back.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-text-with-gradient-back",
            "styleUrls": [
                "./text-with-gradient-back.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./text-with-gradient-back.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "titles",
                    "line": 10,
                    "type": "string[]"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-text-with-gradient-back',\n  templateUrl: './text-with-gradient-back.component.html',\n  styleUrls: ['./text-with-gradient-back.component.scss']\n})\n\nexport class TextWithGradientBackComponent {\n  @Input() titles: string[];\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".text-with-gradient-back {\n  display: flex;\n  flex-wrap: wrap;\n  width: 100%;\n\n  &__wrapper {\n    background: var(--success-grad-light);\n    color: var(--text-color);\n    height: 19px;\n    border-radius: 21px;\n    line-height: 19px;\n    padding: 1px 8px 0 8px;\n    width: fit-content;\n  }\n}",
                    "styleUrl": "./text-with-gradient-back.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"text-with-gradient-back fs-12-sofia-300\">\n  <div class=\"text-with-gradient-back__wrapper\" *ngFor=\"let title of titles; let i = index\">\n    {{ title }}\n  </div>\n</div>\n\n"
        },
        {
            "name": "TransparentTableComponent",
            "id": "component-TransparentTableComponent-3986056b542ef5070d6ba0e90c48f0b6",
            "file": "src/app/atoms/tables/transparent-table/transparent-table.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-transparent-table",
            "styleUrls": [
                "./transparent-table.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./transparent-table.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "line": 12,
                    "type": "any[]"
                },
                {
                    "name": "heads",
                    "line": 11,
                    "type": "string[]"
                },
                {
                    "name": "mainColumn",
                    "line": 13,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "activeColumn",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "headsListWithoutMain",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "isMobile",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "checkType",
                    "args": [
                        {
                            "name": "value",
                            "type": "any"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 36,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47
                },
                {
                    "name": "showNext",
                    "args": [
                        {
                            "name": "direction",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "jsdoctags": [
                        {
                            "name": "direction",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "window:resize",
                    "args": [
                        {
                            "name": "event",
                            "type": "any"
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "line": 20
                }
            ],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, HostListener, Input, OnInit, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-transparent-table',\n  templateUrl: './transparent-table.component.html',\n  styleUrls: ['./transparent-table.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\n\nexport class TransparentTableComponent implements OnInit {\n  @Input() heads: string[];\n  @Input() data: any[];\n  @Input() mainColumn: string;\n  \n  isMobile: boolean;\n  activeColumn: string;\n  headsListWithoutMain: string[];\n\n  @HostListener('window:resize', ['$event'])\n  onResize(event: any) {\n    this.isMobile = (event.target.innerWidth < 800) ? true : false;\n  }\n\n  showNext(direction: string) {\n    const currentIndex = this.headsListWithoutMain.findIndex(head => head === this.activeColumn);\n    let nextIndex;\n    \n    if (direction =='forward') {\n      nextIndex = (currentIndex + 1 > this.headsListWithoutMain.length - 1) ? 0 : currentIndex + 1; \n    } else if (direction =='back') {\n      nextIndex = (currentIndex - 1 < 0) ? this.headsListWithoutMain.length - 1 : currentIndex - 1; \n    }\n    this.activeColumn = this.headsListWithoutMain[nextIndex]\n  }\n\n  checkType (value: any) {\n    switch (typeof value) {\n      case 'boolean':\n        return 'boolean';\n      case 'string':\n        return 'string';\n      case 'object': \n        return value.type\n    }\n  }\n\n  ngOnInit(): void {\n    this.headsListWithoutMain = this.heads.filter(head => head !== this.mainColumn);\n    this.activeColumn = this.headsListWithoutMain[0];\n    this.isMobile = (window.innerWidth < 800) ? true : false;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-transparent-table {\n  width: 100%;\n  border-radius: 12px;\n  overflow: hidden;\n  color: var(--secondary-color);\n  border: 1px solid rgba(var(--secondary-color-code), 0.3);\n  border-spacing: 0;\n  transition: margin 3s;\n\n  &__head {\n    position: relative;\n    padding: 13px 16px;\n    height: 38px;\n    text-transform: capitalize;\n    color: rgba(var(--secondary-color-code), 0.75);\n    background-color: rgba(var(--secondary-color-code), 0.2);\n  }\n\n  &__head-item {\n    margin-left: 24px;\n  }\n\n  &__row {\n    margin-bottom: 20px;\n    padding: 13px 16px;\n  }\n\n  &__main-column {\n    width: 30%;\n  }\n}\n\ntd, th {\n  padding: 10px;\n  text-align: left;;\n}\n\n.text-with-gradient-back__wrapper {\n  margin: 0 5px 5px 0;\n}\n\n.app-transparent-table__button {\n  width: 24px;\n  height: 24px;\n  border-radius: 50%;\n  background-color: rgba(var(--secondary-color-code), 1);\n  border: none;\n  position: absolute;\n  top: 23px;\n  z-index: 2;\n}\n\n.prev {\n  left: 25%;\n  transform: rotate(180deg);\n  &:after {\n    content: '';\n    position: absolute;\n    top: 0px;\n    left: 1px;\n    width: 24px;\n    height: 24px;\n    border-radius: 50%;\n    background: center no-repeat url('../../../../assets/images/next.svg');\n  }\n}\n\n.next {\n  &:after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 1px;\n    width: 24px;\n    height: 24px;\n    border-radius: 50%;\n    background: center no-repeat url('../../../../assets/images/next.svg');\n  }\n  right: 30%;\n}",
                    "styleUrl": "./transparent-table.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<!-- !!!!!!!!!desktop version of table!!!!!!!!!!!!  -->\n<table \n  id=\"table\" \n  *ngIf=\"isMobile\" \n  class=\"app-transparent-table fs-12-sofia-400\"\n>\n  <tr class=\"app-transparent-table__head\">\n   <th class=\"app-transparent-table__head-item app-transparent-table__main-column\">\n     {{ mainColumn }}\n   </th>\n   <th  class=\"app-transparent-table__head-item\">\n     {{ activeColumn }}\n   </th>\n  </tr>\n  <tr \n    class=\"app-transparent-table__row fs-12-sofia-300\" \n    *ngFor=\"let item of data; let i = index\"\n  >\n    <td>\n      <p *ngIf=\"checkType(item[mainColumn])==='string'\">\n        {{ item[mainColumn] }}\n      </p>\n      <app-text-with-gradient-back \n        [titles]=\"item[mainColumn].data\"\n        *ngIf=\"checkType(item[mainColumn])==='gradientText'\"\n      >\n      </app-text-with-gradient-back>\n      <img [src]=\"item[mainColumn].path\" *ngIf=\"checkType(item[mainColumn])==='image'\">\n      <span *ngIf=\"checkType(item[mainColumn])==='boolean'\">\n        <app-round-icon\n          [classes]=\"item[mainColumn] ? 'app-round-icon app-round-icon__positive' : 'app-round-icon app-round-icon__negative'\"\n          [ngStyle]=\"{'display': 'flex', 'justify-content': 'center'}\"\n        ></app-round-icon>\n      </span>\n    </td>\n    <td>\n      <p *ngIf=\"checkType(item[activeColumn])==='string'\">\n        {{ item[activeColumn] }}\n      </p>\n      <img [src]=\"item[activeColumn].path\" *ngIf=\"checkType(item[activeColumn])==='image'\" >\n      <app-text-with-gradient-back \n        [titles]=\"item[activeColumn].data\"\n        *ngIf=\"checkType(item[activeColumn])==='gradientText'\"\n      >\n      </app-text-with-gradient-back>\n      <span *ngIf=\"checkType(item[activeColumn])==='boolean'\">\n        <app-round-icon\n          [classes]=\"item[activeColumn] ? 'app-round-icon app-round-icon__positive' : 'app-round-icon app-round-icon__negative'\"\n        ></app-round-icon>\n      </span>\n    </td>\n  </tr>\n  <button class=\"prev app-transparent-table__button\" type=\"button\" (click)=\"showNext('back')\"></button>\n  <button class=\"next app-transparent-table__button\"type=\"button\" (click)=\"showNext('forward')\"></button>\n</table> \n\n\n<!-- !!!!!!!!!desktop version of table!!!!!!!!!!!!  -->\n<table id=\"table\" class=\"app-transparent-table fs-12-sofia-400\"  *ngIf=\"!isMobile\">\n  <tr class=\"app-transparent-table__head\">\n   <th \n      class=\"app-transparent-table__head-item\"\n      *ngFor=\"let head of heads; let i = index\"\n    >\n     {{ head }}\n   </th>\n  </tr>\n  <tr class=\"app-transparent-table__row fs-12-sofia-300\" *ngFor=\"let item of data; let i = index\">\n    <td *ngFor=\"let head of heads; let j = index\">\n      <p *ngIf=\"checkType(item[head])==='string'\">\n        {{ item[head] }}\n      </p>\n      <app-text-with-gradient-back \n        [titles]=\"item[head].data\"\n        *ngIf=\"checkType(item[head])==='gradientText'\"\n      >\n      </app-text-with-gradient-back>\n      <img [src]=\"item[head].path\" *ngIf=\"checkType(item[head])==='image'\">\n      <span *ngIf=\"checkType(item[head])=='boolean'\">\n        <app-round-icon\n          [classes]=\"item[head] ? 'app-round-icon app-round-icon__positive' : 'app-round-icon app-round-icon__negative'\"\n          [ngStyle]=\"{'display': 'flex', 'justify-content': 'center'}\"\n        ></app-round-icon>\n      </span>\n    </td>\n  </tr>\n</table>"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "CardComponent"
                        },
                        {
                            "name": "CardWithCenterTextComponent"
                        },
                        {
                            "name": "CardWithColumnsTextComponent"
                        },
                        {
                            "name": "CardWithDonutChartComponent"
                        },
                        {
                            "name": "CheckboxInputSimpleComponent"
                        },
                        {
                            "name": "CheckboxInputSwitchComponent"
                        },
                        {
                            "name": "CompositeMenuComponent"
                        },
                        {
                            "name": "DateMenuComponent"
                        },
                        {
                            "name": "FormScreenFifthComponent"
                        },
                        {
                            "name": "FormScreenFirstComponent"
                        },
                        {
                            "name": "FormScreenFourthComponent"
                        },
                        {
                            "name": "FormScreenSecondComponent"
                        },
                        {
                            "name": "FormScreenThirdComponent"
                        },
                        {
                            "name": "IconContainerComponent"
                        },
                        {
                            "name": "IconLinksComponent"
                        },
                        {
                            "name": "MainNavigationMenuComponent"
                        },
                        {
                            "name": "MobileButtonComponent"
                        },
                        {
                            "name": "MobileMainNavigationMenuComponent"
                        },
                        {
                            "name": "RegistrationFormComponent"
                        },
                        {
                            "name": "RollUpComponent"
                        },
                        {
                            "name": "RoundIconComponent"
                        },
                        {
                            "name": "ScanAnimationComponent"
                        },
                        {
                            "name": "ScanReportComponent"
                        },
                        {
                            "name": "ScanScreensComponent"
                        },
                        {
                            "name": "SelectInputSearchComponent"
                        },
                        {
                            "name": "SelectInputSimpleComponent"
                        },
                        {
                            "name": "SemicircleChartCardComponent"
                        },
                        {
                            "name": "SemicircleChartComponent"
                        },
                        {
                            "name": "SideMenuComponent"
                        },
                        {
                            "name": "StepsComponent"
                        },
                        {
                            "name": "TextWithGradientBackComponent"
                        },
                        {
                            "name": "TransparentTableComponent"
                        },
                        {
                            "name": "formInputComponent"
                        },
                        {
                            "name": "infoButtonComponent"
                        },
                        {
                            "name": "largeButtonComponent"
                        },
                        {
                            "name": "lightButtonComponent"
                        },
                        {
                            "name": "navLinkComponent"
                        },
                        {
                            "name": "primaryButtonComponent"
                        },
                        {
                            "name": "secondaryButtonComponent"
                        },
                        {
                            "name": "simpleButtonComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "CardWithCenterText",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/card/card-with-center-text/card-with-center-text.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "CardWithColumns",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/card/card-with-columns-text/card-with-columns-text.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "CompositeMenu",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/menu/composite-menu/composite-menu.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "test.ts",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "Danger",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/simpleButton/simpleButton.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Date",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/menu/date-menu/date-menu.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "DonutChartCard",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/card/card-with-donut-chart/card-with-donut-chart.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "type": "object",
                "defaultValue": "{\n  production: false\n}"
            },
            {
                "name": "Fifth",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/form-screens/form-screen-fifth/form-screen-fifth.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "First",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/scan-screens/scan-screens.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "First",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/roll-up/roll-up.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "First",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/form-screens/form-screen-first/form-screen-first.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Fourth",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/form-screens/form-screen-fourth/form-screen-fourth.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Gradient",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/gradientButton/gradientButton.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Green",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/text/text-with-gradient-back/text-with-gradient-back.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Highlited",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/navLink/textLinks/navLink.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Icon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/navLink/icon-links/icon-links.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Info",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/infoButton/infoButton.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/largeButton/largeButton.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Light",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/lightButton/lightButton.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Main",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/navLink/textLinks/navLink.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Mobile",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/mobile-button/mobile-button.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "MobileNavigation",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/menu/mobile-main-navigation-menu/mobile-main-navigation-menu.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Navigation",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/menu/main-navigation-menu/main-navigation-menu.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Negative",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/icons/round-icon/round-icon.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Positive",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/icons/round-icon/round-icon.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/primaryButton/primaryButton.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/scan-screens/scan-screens.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/roll-up/roll-up.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/organisms/scan-report/scan-report.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/organisms/registration-form/registration-form.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/card/card.stories.ts",
                "type": "object",
                "defaultValue": "{\n  backgroundColor: { control: 'color' },\n  color: { control: 'color' },\n  src: { control: 'text' },\n  title: { control: 'text' },\n  text: { control: 'text' },\n  isActive: { control: 'boolean' }\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/iconContainer/iconContainer.stories.ts",
                "type": "object",
                "defaultValue": "{\n  backgroundColor: { control: 'color' },\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/scan-animation/scan-animation.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/steps/steps.stories.ts",
                "type": "object",
                "defaultValue": "{\n  activePoints: { control: 'number' }\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/searchItem/searchItem.stories.ts",
                "type": "object",
                "defaultValue": "{\n  title: { control: 'text' },\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/semicircle-chart/semicircle-chart.component.stories.ts",
                "type": "object",
                "defaultValue": "{\n  percent: { control: 'array' },\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/form-screens/form-screen-fifth/form-screen-fifth.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/form-screens/form-screen-first/form-screen-first.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/form-screens/form-screen-fourth/form-screen-fourth.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/form-screens/form-screen-second/form-screen-second.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/form-screens/form-screen-third/form-screen-third.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/menu/composite-menu/composite-menu.stories.ts",
                "type": "object",
                "defaultValue": "{\n  items: { control: 'object' }\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/menu/date-menu/date-menu.stories.ts",
                "type": "object",
                "defaultValue": "{\n  backgroundColor: { control: 'color' },\n  items: { control: 'array' }\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/menu/main-navigation-menu/main-navigation-menu.component.stories.ts",
                "type": "object",
                "defaultValue": "{\n  backgroundColor: { control: 'color' },\n  items: { control: 'array' }\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/menu/mobile-main-navigation-menu/mobile-main-navigation-menu.component.stories.ts",
                "type": "object",
                "defaultValue": "{\n  items: { control: 'object' }\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/menu/side-menu/side-menu.stories.ts",
                "type": "object",
                "defaultValue": "{\n  backgroundColor: { control: 'color' },\n  items: { control: 'array' }\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/card/card-with-columns-text/card-with-columns-text.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/card/card-with-center-text/card-with-center-text.component.stories.ts",
                "type": "object",
                "defaultValue": "{\n  backgroundColor: { control: 'color' },\n  color: { control: 'color' },\n  src: { control: 'text' },\n  title: { control: 'text' },\n  text: { control: 'text' },\n  isActive: { control: 'boolean' }\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/card/card-with-donut-chart/card-with-donut-chart.component.stories.ts",
                "type": "object",
                "defaultValue": "{\n  title: { control: 'text' },\n  labels: { control: 'array' },\n  values: { control: 'array' }\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/card/semicircle-chart-card/semicircle-chart-card.component.stories.ts",
                "type": "object",
                "defaultValue": "{\n  title: { control: 'text' },\n  labels: { control: 'array' },\n  values: { control: 'array' }\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/gradientButton/gradientButton.stories.ts",
                "type": "object",
                "defaultValue": "{\n  backgroundColor: { control: 'color' },\n  color: { control: 'color' },\n  title: { control: 'text' },\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/largeButton/largeButton.stories.ts",
                "type": "object",
                "defaultValue": "{\n  backgroundColor: { control: 'color' },\n  color: { control: 'color' },\n  title: { control: 'text' },\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/infoButton/infoButton.stories.ts",
                "type": "object",
                "defaultValue": "{\n  backgroundColor: { control: 'color' },\n  color: { control: 'color' },\n  title: { control: 'text' },\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/mobile-button/mobile-button.component.stories.ts",
                "type": "object",
                "defaultValue": "{\n  isOpen: { control: 'boolean' }\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/primaryButton/primaryButton.stories.ts",
                "type": "object",
                "defaultValue": "{\n  backgroundColor: { control: 'color' },\n  title: { control: 'text' },\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/lightButton/lightButton.stories.ts",
                "type": "object",
                "defaultValue": "{\n  backgroundColor: { control: 'color' },\n  color: { control: 'color' },\n  title: { control: 'text' },\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/secondaryButton/secondaryButton.stories.ts",
                "type": "object",
                "defaultValue": "{\n  backgroundColor: { control: 'color' },\n  color: { control: 'color' },\n  title: { control: 'text' },\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/simpleButton/simpleButton.stories.ts",
                "type": "object",
                "defaultValue": "{\n  backgroundColor: { control: 'color' },\n  color: { control: 'color' },\n  title: { control: 'text' },\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/icons/round-icon/round-icon.component.stories.ts",
                "type": "object",
                "defaultValue": "{\n\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/inputs/formInput/formInput.stories.ts",
                "type": "object",
                "defaultValue": "{\n  backgroundColor: { control: 'color' },\n  color: { control: 'color' },\n  placeholder: { control: 'text' },\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/navLink/icon-links/icon-links.component.stories.ts",
                "type": "object",
                "defaultValue": "{\n  title: { control: 'text' },\n  isActive: { control: 'boolean' }\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/navLink/textLinks/navLink.stories.ts",
                "type": "object",
                "defaultValue": "{\n  title: { control: 'text' },\n  isActive: { control: 'boolean' }\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/text/text-with-gradient-back/text-with-gradient-back.component.stories.ts",
                "type": "object",
                "defaultValue": "{\n  title: { control: 'text' },\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/tables/transparent-table/transparent-table.component.stories.ts",
                "type": "object",
                "defaultValue": "{\n  percent: { control: 'array' },\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/inputs/checkbox/checkbox-input-simple/checkbox-input-simple.stories.ts",
                "type": "object",
                "defaultValue": "{\n  isChecked: { control: 'boolean' },\n  title: { control: 'text' }\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/inputs/checkbox/checkbox-input-switch/checkbox-input-switch.stories.ts",
                "type": "object",
                "defaultValue": "{\n    isChecked: { control: 'boolean' },\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/inputs/select-input/select-input-search/select-input-search.component.stories.ts",
                "type": "object",
                "defaultValue": "{\n  initialValue: { control: 'text'},\n  items: { control: 'array'}\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/inputs/select-input/select-input-simple/select-input-simple.stories.ts",
                "type": "object",
                "defaultValue": "{\n  initialValue: { control: 'text' },\n  items: { control: 'array' }\n}"
            },
            {
                "name": "RegistrationForm",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/organisms/registration-form/registration-form.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "test.ts",
                "type": "literal type"
            },
            {
                "name": "Scan",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/scan-animation/scan-animation.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "ScanReport",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/organisms/scan-report/scan-report.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Search",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/inputs/select-input/select-input-search/select-input-search.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SearchIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/inputs/select-input/select-input-search/select-input-search.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Second",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/form-screens/form-screen-second/form-screen-second.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/secondaryButton/secondaryButton.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/navLink/textLinks/navLink.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Semicirce",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/semicircle-chart/semicircle-chart.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SemicircleChart",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/card/semicircle-chart-card/semicircle-chart-card.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Side",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/menu/side-menu/side-menu.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/card/card.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/iconContainer/iconContainer.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/steps/steps.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/searchItem/searchItem.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/inputs/checkbox/checkbox-input-simple/checkbox-input-simple.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/inputs/select-input/select-input-simple/select-input-simple.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Success",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/simpleButton/simpleButton.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SuccessAsimetric",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/simpleButton/simpleButton.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Switch",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/inputs/checkbox/checkbox-input-switch/checkbox-input-switch.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/scan-screens/scan-screens.component.stories.ts",
                "type": "Story<ScanScreensComponent>",
                "defaultValue": "(args: ScanScreensComponent) => ({\n  component: ScanScreensComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/roll-up/roll-up.component.stories.ts",
                "type": "Story<RollUpComponent>",
                "defaultValue": "(args: RollUpComponent) => ({\n  component: RollUpComponent,\n  props: args,\n  template: `\n  <app-roll-up>\n    <app-icon-container></app-icon-container>\n  </app-roll-up>\n  `,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/organisms/scan-report/scan-report.component.stories.ts",
                "type": "Story<ScanReportComponent>",
                "defaultValue": "(args: ScanReportComponent) => ({\n  component: ScanReportComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/organisms/registration-form/registration-form.stories.ts",
                "type": "Story<RegistrationFormComponent>",
                "defaultValue": "(args: RegistrationFormComponent) => ({\n  component: RegistrationFormComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/card/card.stories.ts",
                "type": "Story<CardComponent>",
                "defaultValue": "(args: CardComponent) => ({\n  component: CardComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/iconContainer/iconContainer.stories.ts",
                "type": "Story<IconContainerComponent>",
                "defaultValue": "(args: IconContainerComponent) => ({\n  component: IconContainerComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/scan-animation/scan-animation.component.stories.ts",
                "type": "Story<ScanAnimationComponent>",
                "defaultValue": "(args: ScanAnimationComponent) => ({\n  component: ScanAnimationComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/steps/steps.stories.ts",
                "type": "Story<StepsComponent>",
                "defaultValue": "(args: StepsComponent) => ({\n  component: StepsComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/searchItem/searchItem.stories.ts",
                "type": "Story<searchItemComponent>",
                "defaultValue": "(args: searchItemComponent) => ({\n  component: searchItemComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/semicircle-chart/semicircle-chart.component.stories.ts",
                "type": "Story<SemicircleChartComponent>",
                "defaultValue": "(args: SemicircleChartComponent) => ({\n  component: SemicircleChartComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/form-screens/form-screen-fifth/form-screen-fifth.stories.ts",
                "type": "Story<FormScreenFifthComponent>",
                "defaultValue": "(args: FormScreenFifthComponent) => ({\n    component: FormScreenFifthComponent,\n    props: args,\n  })"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/form-screens/form-screen-first/form-screen-first.stories.ts",
                "type": "Story<FormScreenFirstComponent>",
                "defaultValue": "(args: FormScreenFirstComponent) => ({\n  component: FormScreenFirstComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/form-screens/form-screen-fourth/form-screen-fourth.stories.ts",
                "type": "Story<FormScreenFourthComponent>",
                "defaultValue": "(args: FormScreenFourthComponent) => ({\n  component: FormScreenFourthComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/form-screens/form-screen-second/form-screen-second.stories.ts",
                "type": "Story<FormScreenSecondComponent>",
                "defaultValue": "(args: FormScreenSecondComponent) => ({\n  component: FormScreenSecondComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/form-screens/form-screen-third/form-screen-third.stories.ts",
                "type": "Story<FormScreenThirdComponent>",
                "defaultValue": "(args: FormScreenThirdComponent) => ({\n  component: FormScreenThirdComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/menu/composite-menu/composite-menu.stories.ts",
                "type": "Story<CompositeMenuComponent>",
                "defaultValue": "(args: CompositeMenuComponent) => ({\n  component: CompositeMenuComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/menu/date-menu/date-menu.stories.ts",
                "type": "Story<DateMenuComponent>",
                "defaultValue": "(args: DateMenuComponent) => ({\n  component: DateMenuComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/menu/main-navigation-menu/main-navigation-menu.component.stories.ts",
                "type": "Story<MainNavigationMenuComponent>",
                "defaultValue": "(args: MainNavigationMenuComponent) => ({\n  component: MainNavigationMenuComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/menu/mobile-main-navigation-menu/mobile-main-navigation-menu.component.stories.ts",
                "type": "Story<MobileMainNavigationMenuComponent>",
                "defaultValue": "(args: MobileMainNavigationMenuComponent) => ({\n  component: MobileMainNavigationMenuComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/menu/side-menu/side-menu.stories.ts",
                "type": "Story<SideMenuComponent>",
                "defaultValue": "(args: SideMenuComponent) => ({\n  component: SideMenuComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/card/card-with-columns-text/card-with-columns-text.component.stories.ts",
                "type": "Story<CardWithColumnsTextComponent>",
                "defaultValue": "(args: CardWithColumnsTextComponent) => ({\n  component: CardWithColumnsTextComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/card/card-with-center-text/card-with-center-text.component.stories.ts",
                "type": "Story<CardWithCenterTextComponent>",
                "defaultValue": "(args: CardWithCenterTextComponent) => ({\n  component: CardWithCenterTextComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/card/card-with-donut-chart/card-with-donut-chart.component.stories.ts",
                "type": "Story<CardWithDonutChartComponent>",
                "defaultValue": "(args: CardWithDonutChartComponent) => ({\n  component: CardWithDonutChartComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/card/semicircle-chart-card/semicircle-chart-card.component.stories.ts",
                "type": "Story<SemicircleChartCardComponent>",
                "defaultValue": "(args: SemicircleChartCardComponent) => ({\n  component: SemicircleChartCardComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/gradientButton/gradientButton.stories.ts",
                "type": "Story<gradientButtonComponent>",
                "defaultValue": "(args: gradientButtonComponent) => ({\n  component: gradientButtonComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/largeButton/largeButton.stories.ts",
                "type": "Story<largeButtonComponent>",
                "defaultValue": "(args: largeButtonComponent) => ({\n  component: largeButtonComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/infoButton/infoButton.stories.ts",
                "type": "Story<infoButtonComponent>",
                "defaultValue": "(args: infoButtonComponent) => ({\n  component: infoButtonComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/mobile-button/mobile-button.component.stories.ts",
                "type": "Story<MobileButtonComponent>",
                "defaultValue": "(args: MobileButtonComponent) => ({\n  component: MobileButtonComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/primaryButton/primaryButton.stories.ts",
                "type": "Story<primaryButtonComponent>",
                "defaultValue": "(args: primaryButtonComponent) => ({\n  component: primaryButtonComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/lightButton/lightButton.stories.ts",
                "type": "Story<lightButtonComponent>",
                "defaultValue": "(args: lightButtonComponent) => ({\n  component: lightButtonComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/secondaryButton/secondaryButton.stories.ts",
                "type": "Story<secondaryButtonComponent>",
                "defaultValue": "(args: secondaryButtonComponent) => ({\n  component: secondaryButtonComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/simpleButton/simpleButton.stories.ts",
                "type": "Story<simpleButtonComponent>",
                "defaultValue": "(args: simpleButtonComponent) => ({\n  component: simpleButtonComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/icons/round-icon/round-icon.component.stories.ts",
                "type": "Story<RoundIconComponent>",
                "defaultValue": "(args: RoundIconComponent) => ({\n  component: RoundIconComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/inputs/formInput/formInput.stories.ts",
                "type": "Story<formInputComponent>",
                "defaultValue": "(args: formInputComponent) => ({\n  component: formInputComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/navLink/icon-links/icon-links.component.stories.ts",
                "type": "Story<IconLinksComponent>",
                "defaultValue": "(args: IconLinksComponent) => ({\n  component: IconLinksComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/navLink/textLinks/navLink.stories.ts",
                "type": "Story<navLinkComponent>",
                "defaultValue": "(args: navLinkComponent) => ({\n  component: navLinkComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/text/text-with-gradient-back/text-with-gradient-back.component.stories.ts",
                "type": "Story<TextWithGradientBackComponent>",
                "defaultValue": "(args: TextWithGradientBackComponent) => ({\n  component: TextWithGradientBackComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/tables/transparent-table/transparent-table.component.stories.ts",
                "type": "Story<TransparentTableComponent>",
                "defaultValue": "(args: TransparentTableComponent) => ({\n  component: TransparentTableComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/inputs/checkbox/checkbox-input-simple/checkbox-input-simple.stories.ts",
                "type": "Story<CheckboxInputSimpleComponent>",
                "defaultValue": "(args: CheckboxInputSimpleComponent) => ({\n  component: CheckboxInputSimpleComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/inputs/checkbox/checkbox-input-switch/checkbox-input-switch.stories.ts",
                "type": "Story<CheckboxInputSwitchComponent>",
                "defaultValue": "(args: CheckboxInputSwitchComponent) => ({\n  component: CheckboxInputSwitchComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/inputs/select-input/select-input-search/select-input-search.component.stories.ts",
                "type": "Story<SelectInputSearchComponent>",
                "defaultValue": "(args: SelectInputSearchComponent) => ({\n  component: SelectInputSearchComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/inputs/select-input/select-input-simple/select-input-simple.stories.ts",
                "type": "Story<SelectInputSimpleComponent>",
                "defaultValue": "(args: SelectInputSimpleComponent) => ({\n  component: SelectInputSimpleComponent,\n  props: args,\n})"
            },
            {
                "name": "Text",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/inputs/formInput/formInput.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Third",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/form-screens/form-screen-third/form-screen-third.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Transparent",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/simpleButton/simpleButton.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Transparent",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/tables/transparent-table/transparent-table.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "WithIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/searchItem/searchItem.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            }
        ],
        "functions": [
            {
                "name": "detectClasses",
                "file": "src/app/atoms/steps/helpers.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "description": "",
                "args": [
                    {
                        "name": "num"
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "num",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        ],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/app/atoms/card/card-with-center-text/card-with-center-text.component.stories.ts": [
                {
                    "name": "CardWithCenterText",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/card/card-with-center-text/card-with-center-text.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/card/card-with-center-text/card-with-center-text.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  backgroundColor: { control: 'color' },\n  color: { control: 'color' },\n  src: { control: 'text' },\n  title: { control: 'text' },\n  text: { control: 'text' },\n  isActive: { control: 'boolean' }\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/card/card-with-center-text/card-with-center-text.component.stories.ts",
                    "type": "Story<CardWithCenterTextComponent>",
                    "defaultValue": "(args: CardWithCenterTextComponent) => ({\n  component: CardWithCenterTextComponent,\n  props: args,\n})"
                }
            ],
            "src/app/atoms/card/card-with-columns-text/card-with-columns-text.component.stories.ts": [
                {
                    "name": "CardWithColumns",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/card/card-with-columns-text/card-with-columns-text.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/card/card-with-columns-text/card-with-columns-text.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/card/card-with-columns-text/card-with-columns-text.component.stories.ts",
                    "type": "Story<CardWithColumnsTextComponent>",
                    "defaultValue": "(args: CardWithColumnsTextComponent) => ({\n  component: CardWithColumnsTextComponent,\n  props: args,\n})"
                }
            ],
            "src/app/molecules/menu/composite-menu/composite-menu.stories.ts": [
                {
                    "name": "CompositeMenu",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/menu/composite-menu/composite-menu.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/menu/composite-menu/composite-menu.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  items: { control: 'object' }\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/menu/composite-menu/composite-menu.stories.ts",
                    "type": "Story<CompositeMenuComponent>",
                    "defaultValue": "(args: CompositeMenuComponent) => ({\n  component: CompositeMenuComponent,\n  props: args,\n})"
                }
            ],
            "test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "test.ts",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "test.ts",
                    "type": "literal type"
                }
            ],
            "src/app/atoms/buttons/simpleButton/simpleButton.stories.ts": [
                {
                    "name": "Danger",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/simpleButton/simpleButton.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/simpleButton/simpleButton.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  backgroundColor: { control: 'color' },\n  color: { control: 'color' },\n  title: { control: 'text' },\n}"
                },
                {
                    "name": "Success",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/simpleButton/simpleButton.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "SuccessAsimetric",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/simpleButton/simpleButton.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/simpleButton/simpleButton.stories.ts",
                    "type": "Story<simpleButtonComponent>",
                    "defaultValue": "(args: simpleButtonComponent) => ({\n  component: simpleButtonComponent,\n  props: args,\n})"
                },
                {
                    "name": "Transparent",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/simpleButton/simpleButton.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/app/molecules/menu/date-menu/date-menu.stories.ts": [
                {
                    "name": "Date",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/menu/date-menu/date-menu.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/menu/date-menu/date-menu.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  backgroundColor: { control: 'color' },\n  items: { control: 'array' }\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/menu/date-menu/date-menu.stories.ts",
                    "type": "Story<DateMenuComponent>",
                    "defaultValue": "(args: DateMenuComponent) => ({\n  component: DateMenuComponent,\n  props: args,\n})"
                }
            ],
            "src/app/atoms/card/card-with-donut-chart/card-with-donut-chart.component.stories.ts": [
                {
                    "name": "DonutChartCard",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/card/card-with-donut-chart/card-with-donut-chart.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/card/card-with-donut-chart/card-with-donut-chart.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  title: { control: 'text' },\n  labels: { control: 'array' },\n  values: { control: 'array' }\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/card/card-with-donut-chart/card-with-donut-chart.component.stories.ts",
                    "type": "Story<CardWithDonutChartComponent>",
                    "defaultValue": "(args: CardWithDonutChartComponent) => ({\n  component: CardWithDonutChartComponent,\n  props: args,\n})"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "type": "object",
                    "defaultValue": "{\n  production: false\n}"
                }
            ],
            "src/app/molecules/form-screens/form-screen-fifth/form-screen-fifth.stories.ts": [
                {
                    "name": "Fifth",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/form-screens/form-screen-fifth/form-screen-fifth.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/form-screens/form-screen-fifth/form-screen-fifth.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/form-screens/form-screen-fifth/form-screen-fifth.stories.ts",
                    "type": "Story<FormScreenFifthComponent>",
                    "defaultValue": "(args: FormScreenFifthComponent) => ({\n    component: FormScreenFifthComponent,\n    props: args,\n  })"
                }
            ],
            "src/app/molecules/scan-screens/scan-screens.component.stories.ts": [
                {
                    "name": "First",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/scan-screens/scan-screens.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/scan-screens/scan-screens.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/scan-screens/scan-screens.component.stories.ts",
                    "type": "Story<ScanScreensComponent>",
                    "defaultValue": "(args: ScanScreensComponent) => ({\n  component: ScanScreensComponent,\n  props: args,\n})"
                }
            ],
            "src/app/molecules/roll-up/roll-up.component.stories.ts": [
                {
                    "name": "First",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/roll-up/roll-up.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/roll-up/roll-up.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/roll-up/roll-up.component.stories.ts",
                    "type": "Story<RollUpComponent>",
                    "defaultValue": "(args: RollUpComponent) => ({\n  component: RollUpComponent,\n  props: args,\n  template: `\n  <app-roll-up>\n    <app-icon-container></app-icon-container>\n  </app-roll-up>\n  `,\n})"
                }
            ],
            "src/app/molecules/form-screens/form-screen-first/form-screen-first.stories.ts": [
                {
                    "name": "First",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/form-screens/form-screen-first/form-screen-first.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/form-screens/form-screen-first/form-screen-first.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/form-screens/form-screen-first/form-screen-first.stories.ts",
                    "type": "Story<FormScreenFirstComponent>",
                    "defaultValue": "(args: FormScreenFirstComponent) => ({\n  component: FormScreenFirstComponent,\n  props: args,\n})"
                }
            ],
            "src/app/molecules/form-screens/form-screen-fourth/form-screen-fourth.stories.ts": [
                {
                    "name": "Fourth",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/form-screens/form-screen-fourth/form-screen-fourth.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/form-screens/form-screen-fourth/form-screen-fourth.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/form-screens/form-screen-fourth/form-screen-fourth.stories.ts",
                    "type": "Story<FormScreenFourthComponent>",
                    "defaultValue": "(args: FormScreenFourthComponent) => ({\n  component: FormScreenFourthComponent,\n  props: args,\n})"
                }
            ],
            "src/app/atoms/buttons/gradientButton/gradientButton.stories.ts": [
                {
                    "name": "Gradient",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/gradientButton/gradientButton.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/gradientButton/gradientButton.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  backgroundColor: { control: 'color' },\n  color: { control: 'color' },\n  title: { control: 'text' },\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/gradientButton/gradientButton.stories.ts",
                    "type": "Story<gradientButtonComponent>",
                    "defaultValue": "(args: gradientButtonComponent) => ({\n  component: gradientButtonComponent,\n  props: args,\n})"
                }
            ],
            "src/app/atoms/text/text-with-gradient-back/text-with-gradient-back.component.stories.ts": [
                {
                    "name": "Green",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/text/text-with-gradient-back/text-with-gradient-back.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/text/text-with-gradient-back/text-with-gradient-back.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  title: { control: 'text' },\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/text/text-with-gradient-back/text-with-gradient-back.component.stories.ts",
                    "type": "Story<TextWithGradientBackComponent>",
                    "defaultValue": "(args: TextWithGradientBackComponent) => ({\n  component: TextWithGradientBackComponent,\n  props: args,\n})"
                }
            ],
            "src/app/atoms/navLink/textLinks/navLink.stories.ts": [
                {
                    "name": "Highlited",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/navLink/textLinks/navLink.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Main",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/navLink/textLinks/navLink.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/navLink/textLinks/navLink.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  title: { control: 'text' },\n  isActive: { control: 'boolean' }\n}"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/navLink/textLinks/navLink.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/navLink/textLinks/navLink.stories.ts",
                    "type": "Story<navLinkComponent>",
                    "defaultValue": "(args: navLinkComponent) => ({\n  component: navLinkComponent,\n  props: args,\n})"
                }
            ],
            "src/app/atoms/navLink/icon-links/icon-links.component.stories.ts": [
                {
                    "name": "Icon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/navLink/icon-links/icon-links.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/navLink/icon-links/icon-links.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  title: { control: 'text' },\n  isActive: { control: 'boolean' }\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/navLink/icon-links/icon-links.component.stories.ts",
                    "type": "Story<IconLinksComponent>",
                    "defaultValue": "(args: IconLinksComponent) => ({\n  component: IconLinksComponent,\n  props: args,\n})"
                }
            ],
            "src/app/atoms/buttons/infoButton/infoButton.stories.ts": [
                {
                    "name": "Info",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/infoButton/infoButton.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/infoButton/infoButton.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  backgroundColor: { control: 'color' },\n  color: { control: 'color' },\n  title: { control: 'text' },\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/infoButton/infoButton.stories.ts",
                    "type": "Story<infoButtonComponent>",
                    "defaultValue": "(args: infoButtonComponent) => ({\n  component: infoButtonComponent,\n  props: args,\n})"
                }
            ],
            "src/app/atoms/buttons/largeButton/largeButton.stories.ts": [
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/largeButton/largeButton.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/largeButton/largeButton.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  backgroundColor: { control: 'color' },\n  color: { control: 'color' },\n  title: { control: 'text' },\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/largeButton/largeButton.stories.ts",
                    "type": "Story<largeButtonComponent>",
                    "defaultValue": "(args: largeButtonComponent) => ({\n  component: largeButtonComponent,\n  props: args,\n})"
                }
            ],
            "src/app/atoms/buttons/lightButton/lightButton.stories.ts": [
                {
                    "name": "Light",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/lightButton/lightButton.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/lightButton/lightButton.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  backgroundColor: { control: 'color' },\n  color: { control: 'color' },\n  title: { control: 'text' },\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/lightButton/lightButton.stories.ts",
                    "type": "Story<lightButtonComponent>",
                    "defaultValue": "(args: lightButtonComponent) => ({\n  component: lightButtonComponent,\n  props: args,\n})"
                }
            ],
            "src/app/atoms/buttons/mobile-button/mobile-button.component.stories.ts": [
                {
                    "name": "Mobile",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/mobile-button/mobile-button.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/mobile-button/mobile-button.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  isOpen: { control: 'boolean' }\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/mobile-button/mobile-button.component.stories.ts",
                    "type": "Story<MobileButtonComponent>",
                    "defaultValue": "(args: MobileButtonComponent) => ({\n  component: MobileButtonComponent,\n  props: args,\n})"
                }
            ],
            "src/app/molecules/menu/mobile-main-navigation-menu/mobile-main-navigation-menu.component.stories.ts": [
                {
                    "name": "MobileNavigation",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/menu/mobile-main-navigation-menu/mobile-main-navigation-menu.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/menu/mobile-main-navigation-menu/mobile-main-navigation-menu.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  items: { control: 'object' }\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/menu/mobile-main-navigation-menu/mobile-main-navigation-menu.component.stories.ts",
                    "type": "Story<MobileMainNavigationMenuComponent>",
                    "defaultValue": "(args: MobileMainNavigationMenuComponent) => ({\n  component: MobileMainNavigationMenuComponent,\n  props: args,\n})"
                }
            ],
            "src/app/molecules/menu/main-navigation-menu/main-navigation-menu.component.stories.ts": [
                {
                    "name": "Navigation",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/menu/main-navigation-menu/main-navigation-menu.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/menu/main-navigation-menu/main-navigation-menu.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  backgroundColor: { control: 'color' },\n  items: { control: 'array' }\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/menu/main-navigation-menu/main-navigation-menu.component.stories.ts",
                    "type": "Story<MainNavigationMenuComponent>",
                    "defaultValue": "(args: MainNavigationMenuComponent) => ({\n  component: MainNavigationMenuComponent,\n  props: args,\n})"
                }
            ],
            "src/app/atoms/icons/round-icon/round-icon.component.stories.ts": [
                {
                    "name": "Negative",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/icons/round-icon/round-icon.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Positive",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/icons/round-icon/round-icon.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/icons/round-icon/round-icon.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/icons/round-icon/round-icon.component.stories.ts",
                    "type": "Story<RoundIconComponent>",
                    "defaultValue": "(args: RoundIconComponent) => ({\n  component: RoundIconComponent,\n  props: args,\n})"
                }
            ],
            "src/app/atoms/buttons/primaryButton/primaryButton.stories.ts": [
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/primaryButton/primaryButton.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/primaryButton/primaryButton.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  backgroundColor: { control: 'color' },\n  title: { control: 'text' },\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/primaryButton/primaryButton.stories.ts",
                    "type": "Story<primaryButtonComponent>",
                    "defaultValue": "(args: primaryButtonComponent) => ({\n  component: primaryButtonComponent,\n  props: args,\n})"
                }
            ],
            "src/app/organisms/scan-report/scan-report.component.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/organisms/scan-report/scan-report.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "ScanReport",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/organisms/scan-report/scan-report.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/organisms/scan-report/scan-report.component.stories.ts",
                    "type": "Story<ScanReportComponent>",
                    "defaultValue": "(args: ScanReportComponent) => ({\n  component: ScanReportComponent,\n  props: args,\n})"
                }
            ],
            "src/app/organisms/registration-form/registration-form.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/organisms/registration-form/registration-form.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "RegistrationForm",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/organisms/registration-form/registration-form.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/organisms/registration-form/registration-form.stories.ts",
                    "type": "Story<RegistrationFormComponent>",
                    "defaultValue": "(args: RegistrationFormComponent) => ({\n  component: RegistrationFormComponent,\n  props: args,\n})"
                }
            ],
            "src/app/atoms/card/card.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/card/card.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  backgroundColor: { control: 'color' },\n  color: { control: 'color' },\n  src: { control: 'text' },\n  title: { control: 'text' },\n  text: { control: 'text' },\n  isActive: { control: 'boolean' }\n}"
                },
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/card/card.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/card/card.stories.ts",
                    "type": "Story<CardComponent>",
                    "defaultValue": "(args: CardComponent) => ({\n  component: CardComponent,\n  props: args,\n})"
                }
            ],
            "src/app/atoms/iconContainer/iconContainer.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/iconContainer/iconContainer.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  backgroundColor: { control: 'color' },\n}"
                },
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/iconContainer/iconContainer.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/iconContainer/iconContainer.stories.ts",
                    "type": "Story<IconContainerComponent>",
                    "defaultValue": "(args: IconContainerComponent) => ({\n  component: IconContainerComponent,\n  props: args,\n})"
                }
            ],
            "src/app/atoms/scan-animation/scan-animation.component.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/scan-animation/scan-animation.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Scan",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/scan-animation/scan-animation.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/scan-animation/scan-animation.component.stories.ts",
                    "type": "Story<ScanAnimationComponent>",
                    "defaultValue": "(args: ScanAnimationComponent) => ({\n  component: ScanAnimationComponent,\n  props: args,\n})"
                }
            ],
            "src/app/atoms/steps/steps.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/steps/steps.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  activePoints: { control: 'number' }\n}"
                },
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/steps/steps.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/steps/steps.stories.ts",
                    "type": "Story<StepsComponent>",
                    "defaultValue": "(args: StepsComponent) => ({\n  component: StepsComponent,\n  props: args,\n})"
                }
            ],
            "src/app/atoms/searchItem/searchItem.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/searchItem/searchItem.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  title: { control: 'text' },\n}"
                },
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/searchItem/searchItem.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/searchItem/searchItem.stories.ts",
                    "type": "Story<searchItemComponent>",
                    "defaultValue": "(args: searchItemComponent) => ({\n  component: searchItemComponent,\n  props: args,\n})"
                },
                {
                    "name": "WithIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/searchItem/searchItem.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/app/atoms/semicircle-chart/semicircle-chart.component.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/semicircle-chart/semicircle-chart.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  percent: { control: 'array' },\n}"
                },
                {
                    "name": "Semicirce",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/semicircle-chart/semicircle-chart.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/semicircle-chart/semicircle-chart.component.stories.ts",
                    "type": "Story<SemicircleChartComponent>",
                    "defaultValue": "(args: SemicircleChartComponent) => ({\n  component: SemicircleChartComponent,\n  props: args,\n})"
                }
            ],
            "src/app/molecules/form-screens/form-screen-second/form-screen-second.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/form-screens/form-screen-second/form-screen-second.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Second",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/form-screens/form-screen-second/form-screen-second.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/form-screens/form-screen-second/form-screen-second.stories.ts",
                    "type": "Story<FormScreenSecondComponent>",
                    "defaultValue": "(args: FormScreenSecondComponent) => ({\n  component: FormScreenSecondComponent,\n  props: args,\n})"
                }
            ],
            "src/app/molecules/form-screens/form-screen-third/form-screen-third.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/form-screens/form-screen-third/form-screen-third.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/form-screens/form-screen-third/form-screen-third.stories.ts",
                    "type": "Story<FormScreenThirdComponent>",
                    "defaultValue": "(args: FormScreenThirdComponent) => ({\n  component: FormScreenThirdComponent,\n  props: args,\n})"
                },
                {
                    "name": "Third",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/form-screens/form-screen-third/form-screen-third.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/app/molecules/menu/side-menu/side-menu.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/menu/side-menu/side-menu.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  backgroundColor: { control: 'color' },\n  items: { control: 'array' }\n}"
                },
                {
                    "name": "Side",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/menu/side-menu/side-menu.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/menu/side-menu/side-menu.stories.ts",
                    "type": "Story<SideMenuComponent>",
                    "defaultValue": "(args: SideMenuComponent) => ({\n  component: SideMenuComponent,\n  props: args,\n})"
                }
            ],
            "src/app/atoms/card/semicircle-chart-card/semicircle-chart-card.component.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/card/semicircle-chart-card/semicircle-chart-card.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  title: { control: 'text' },\n  labels: { control: 'array' },\n  values: { control: 'array' }\n}"
                },
                {
                    "name": "SemicircleChart",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/card/semicircle-chart-card/semicircle-chart-card.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/card/semicircle-chart-card/semicircle-chart-card.component.stories.ts",
                    "type": "Story<SemicircleChartCardComponent>",
                    "defaultValue": "(args: SemicircleChartCardComponent) => ({\n  component: SemicircleChartCardComponent,\n  props: args,\n})"
                }
            ],
            "src/app/atoms/buttons/secondaryButton/secondaryButton.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/secondaryButton/secondaryButton.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  backgroundColor: { control: 'color' },\n  color: { control: 'color' },\n  title: { control: 'text' },\n}"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/secondaryButton/secondaryButton.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/secondaryButton/secondaryButton.stories.ts",
                    "type": "Story<secondaryButtonComponent>",
                    "defaultValue": "(args: secondaryButtonComponent) => ({\n  component: secondaryButtonComponent,\n  props: args,\n})"
                }
            ],
            "src/app/atoms/inputs/formInput/formInput.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/inputs/formInput/formInput.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  backgroundColor: { control: 'color' },\n  color: { control: 'color' },\n  placeholder: { control: 'text' },\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/inputs/formInput/formInput.stories.ts",
                    "type": "Story<formInputComponent>",
                    "defaultValue": "(args: formInputComponent) => ({\n  component: formInputComponent,\n  props: args,\n})"
                },
                {
                    "name": "Text",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/inputs/formInput/formInput.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/app/atoms/tables/transparent-table/transparent-table.component.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/tables/transparent-table/transparent-table.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  percent: { control: 'array' },\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/tables/transparent-table/transparent-table.component.stories.ts",
                    "type": "Story<TransparentTableComponent>",
                    "defaultValue": "(args: TransparentTableComponent) => ({\n  component: TransparentTableComponent,\n  props: args,\n})"
                },
                {
                    "name": "Transparent",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/tables/transparent-table/transparent-table.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/app/atoms/inputs/checkbox/checkbox-input-simple/checkbox-input-simple.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/inputs/checkbox/checkbox-input-simple/checkbox-input-simple.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  isChecked: { control: 'boolean' },\n  title: { control: 'text' }\n}"
                },
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/inputs/checkbox/checkbox-input-simple/checkbox-input-simple.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/inputs/checkbox/checkbox-input-simple/checkbox-input-simple.stories.ts",
                    "type": "Story<CheckboxInputSimpleComponent>",
                    "defaultValue": "(args: CheckboxInputSimpleComponent) => ({\n  component: CheckboxInputSimpleComponent,\n  props: args,\n})"
                }
            ],
            "src/app/atoms/inputs/checkbox/checkbox-input-switch/checkbox-input-switch.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/inputs/checkbox/checkbox-input-switch/checkbox-input-switch.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n    isChecked: { control: 'boolean' },\n}"
                },
                {
                    "name": "Switch",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/inputs/checkbox/checkbox-input-switch/checkbox-input-switch.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/inputs/checkbox/checkbox-input-switch/checkbox-input-switch.stories.ts",
                    "type": "Story<CheckboxInputSwitchComponent>",
                    "defaultValue": "(args: CheckboxInputSwitchComponent) => ({\n  component: CheckboxInputSwitchComponent,\n  props: args,\n})"
                }
            ],
            "src/app/atoms/inputs/select-input/select-input-search/select-input-search.component.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/inputs/select-input/select-input-search/select-input-search.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  initialValue: { control: 'text'},\n  items: { control: 'array'}\n}"
                },
                {
                    "name": "Search",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/inputs/select-input/select-input-search/select-input-search.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "SearchIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/inputs/select-input/select-input-search/select-input-search.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/inputs/select-input/select-input-search/select-input-search.component.stories.ts",
                    "type": "Story<SelectInputSearchComponent>",
                    "defaultValue": "(args: SelectInputSearchComponent) => ({\n  component: SelectInputSearchComponent,\n  props: args,\n})"
                }
            ],
            "src/app/atoms/inputs/select-input/select-input-simple/select-input-simple.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/inputs/select-input/select-input-simple/select-input-simple.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  initialValue: { control: 'text' },\n  items: { control: 'array' }\n}"
                },
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/inputs/select-input/select-input-simple/select-input-simple.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/inputs/select-input/select-input-simple/select-input-simple.stories.ts",
                    "type": "Story<SelectInputSimpleComponent>",
                    "defaultValue": "(args: SelectInputSimpleComponent) => ({\n  component: SelectInputSimpleComponent,\n  props: args,\n})"
                }
            ]
        },
        "groupedFunctions": {
            "src/app/atoms/steps/helpers.ts": [
                {
                    "name": "detectClasses",
                    "file": "src/app/atoms/steps/helpers.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "description": "",
                    "args": [
                        {
                            "name": "num"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "num",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "e2e/src/app.po.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AppPage",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/gradientButton/gradientButton.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "gradientButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/gradientButton/gradientButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Gradient",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/gradientButton/gradientButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/gradientButton/gradientButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/infoButton/infoButton.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "infoButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/infoButton/infoButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Info",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/infoButton/infoButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/infoButton/infoButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/largeButton/largeButton.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "largeButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/largeButton/largeButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/largeButton/largeButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/largeButton/largeButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/lightButton/lightButton.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "lightButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/lightButton/lightButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Light",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/lightButton/lightButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/lightButton/lightButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/mobile-button/mobile-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Mobile",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/mobile-button/mobile-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/mobile-button/mobile-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/mobile-button/mobile-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MobileButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/primaryButton/primaryButton.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "primaryButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/primaryButton/primaryButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/primaryButton/primaryButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/primaryButton/primaryButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/secondaryButton/secondaryButton.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "secondaryButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/secondaryButton/secondaryButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/secondaryButton/secondaryButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/secondaryButton/secondaryButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/simpleButton/simpleButton.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "simpleButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/simpleButton/simpleButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Danger",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/simpleButton/simpleButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/simpleButton/simpleButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Success",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/simpleButton/simpleButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SuccessAsimetric",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/simpleButton/simpleButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/simpleButton/simpleButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Transparent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/card/card-with-center-text/card-with-center-text.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CardWithCenterText",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/card/card-with-center-text/card-with-center-text.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/card/card-with-center-text/card-with-center-text.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/card/card-with-center-text/card-with-center-text.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardWithCenterTextComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/card/card-with-columns-text/card-with-columns-text.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CardWithColumns",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/card/card-with-columns-text/card-with-columns-text.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/card/card-with-columns-text/card-with-columns-text.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/card/card-with-columns-text/card-with-columns-text.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardWithColumnsTextComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/card/card-with-donut-chart/card-with-donut-chart.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DonutChartCard",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/card/card-with-donut-chart/card-with-donut-chart.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/card/card-with-donut-chart/card-with-donut-chart.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/card/card-with-donut-chart/card-with-donut-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardWithDonutChartComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/card/card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/card/card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/card/card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/card/card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/card/semicircle-chart-card/semicircle-chart-card.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/card/semicircle-chart-card/semicircle-chart-card.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SemicircleChart",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/card/semicircle-chart-card/semicircle-chart-card.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/card/semicircle-chart-card/semicircle-chart-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SemicircleChartCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/iconContainer/iconContainer.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IconContainerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/iconContainer/iconContainer.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/iconContainer/iconContainer.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/iconContainer/iconContainer.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/icons/round-icon/round-icon.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Negative",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/icons/round-icon/round-icon.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Positive",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/icons/round-icon/round-icon.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/icons/round-icon/round-icon.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/icons/round-icon/round-icon.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RoundIconComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/checkbox/checkbox-input-simple/checkbox-input-simple.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CheckboxInputSimpleComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/checkbox/checkbox-input-simple/checkbox-input-simple.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/checkbox/checkbox-input-simple/checkbox-input-simple.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/checkbox/checkbox-input-simple/checkbox-input-simple.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/checkbox/checkbox-input-switch/checkbox-input-switch.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CheckboxInputSwitchComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/checkbox/checkbox-input-switch/checkbox-input-switch.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/checkbox/checkbox-input-switch/checkbox-input-switch.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Switch",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/checkbox/checkbox-input-switch/checkbox-input-switch.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/formInput/formInput.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "formInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/formInput/formInput.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/formInput/formInput.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/formInput/formInput.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Text",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/select-input/select-input-search/select-input-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/select-input/select-input-search/select-input-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Search",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/select-input/select-input-search/select-input-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SearchIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/select-input/select-input-search/select-input-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/select-input/select-input-search/select-input-search.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SelectInputSearchComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/select-input/select-input-simple/select-input-simple.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SelectInputSimpleComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/select-input/select-input-simple/select-input-simple.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/select-input/select-input-simple/select-input-simple.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/select-input/select-input-simple/select-input-simple.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/navLink/icon-links/icon-links.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Icon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/navLink/icon-links/icon-links.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/navLink/icon-links/icon-links.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/navLink/icon-links/icon-links.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IconLinksComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/navLink/textLinks/navLink.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "navLinkComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/navLink/textLinks/navLink.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Highlited",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/navLink/textLinks/navLink.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Main",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/navLink/textLinks/navLink.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/navLink/textLinks/navLink.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/navLink/textLinks/navLink.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/scan-animation/scan-animation.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/scan-animation/scan-animation.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Scan",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/scan-animation/scan-animation.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/scan-animation/scan-animation.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ScanAnimationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/searchItem/searchItem.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "searchItemComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/searchItem/searchItem.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/searchItem/searchItem.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/searchItem/searchItem.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/searchItem/searchItem.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/semicircle-chart/semicircle-chart.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/semicircle-chart/semicircle-chart.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Semicirce",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/semicircle-chart/semicircle-chart.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/semicircle-chart/semicircle-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SemicircleChartComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/steps/helpers.ts",
                "type": "function",
                "linksubtype": "function",
                "name": "detectClasses",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/steps/steps.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StepsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/steps/steps.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/steps/steps.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/steps/steps.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/tables/transparent-table/transparent-table.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/tables/transparent-table/transparent-table.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/tables/transparent-table/transparent-table.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Transparent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/tables/transparent-table/transparent-table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TransparentTableComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/text/text-with-gradient-back/text-with-gradient-back.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Green",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/text/text-with-gradient-back/text-with-gradient-back.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/text/text-with-gradient-back/text-with-gradient-back.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/text/text-with-gradient-back/text-with-gradient-back.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TextWithGradientBackComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/form-screens/form-screen-fifth/form-screen-fifth.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormScreenFifthComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/form-screens/form-screen-fifth/form-screen-fifth.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Module",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/form-screens/form-screen-fifth/form-screen-fifth.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Fifth",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/form-screens/form-screen-fifth/form-screen-fifth.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/form-screens/form-screen-fifth/form-screen-fifth.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/form-screens/form-screen-first/form-screen-first.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormScreenFirstComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/form-screens/form-screen-first/form-screen-first.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "First",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/form-screens/form-screen-first/form-screen-first.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/form-screens/form-screen-first/form-screen-first.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/form-screens/form-screen-fourth/form-screen-fourth.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormScreenFourthComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/form-screens/form-screen-fourth/form-screen-fourth.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Module",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/form-screens/form-screen-fourth/form-screen-fourth.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Fourth",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/form-screens/form-screen-fourth/form-screen-fourth.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/form-screens/form-screen-fourth/form-screen-fourth.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/form-screens/form-screen-second/form-screen-second.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormScreenSecondComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/form-screens/form-screen-second/form-screen-second.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/form-screens/form-screen-second/form-screen-second.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Second",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/form-screens/form-screen-second/form-screen-second.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/form-screens/form-screen-third/form-screen-third.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormScreenThirdComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/form-screens/form-screen-third/form-screen-third.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Module",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/form-screens/form-screen-third/form-screen-third.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/form-screens/form-screen-third/form-screen-third.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/form-screens/form-screen-third/form-screen-third.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Third",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/menu/composite-menu/composite-menu.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CompositeMenuComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/menu/composite-menu/composite-menu.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Item",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/menu/composite-menu/composite-menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CompositeMenu",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/menu/composite-menu/composite-menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/menu/composite-menu/composite-menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/menu/date-menu/date-menu.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DateMenuComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/menu/date-menu/date-menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Date",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/menu/date-menu/date-menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/menu/date-menu/date-menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/menu/main-navigation-menu/main-navigation-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Navigation",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/menu/main-navigation-menu/main-navigation-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/menu/main-navigation-menu/main-navigation-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/menu/main-navigation-menu/main-navigation-menu.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MainNavigationMenuComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/menu/mobile-main-navigation-menu/mobile-main-navigation-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MobileNavigation",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/menu/mobile-main-navigation-menu/mobile-main-navigation-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/menu/mobile-main-navigation-menu/mobile-main-navigation-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/menu/mobile-main-navigation-menu/mobile-main-navigation-menu.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MobileMainNavigationMenuComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/menu/side-menu/side-menu.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SideMenuComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/menu/side-menu/side-menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/menu/side-menu/side-menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Side",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/menu/side-menu/side-menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/roll-up/roll-up.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "First",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/roll-up/roll-up.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/roll-up/roll-up.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/roll-up/roll-up.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RollUpComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/scan-screens/scan-screens.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "First",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/scan-screens/scan-screens.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/scan-screens/scan-screens.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/scan-screens/scan-screens.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ScanScreensComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/organisms/registration-form/registration-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RegistrationFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/organisms/registration-form/registration-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/organisms/registration-form/registration-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "RegistrationForm",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/organisms/registration-form/registration-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/organisms/scan-report/scan-report.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/organisms/scan-report/scan-report.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ScanReport",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/organisms/scan-report/scan-report.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/organisms/scan-report/scan-report.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ScanReportComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/organisms/scan-report/scan-report.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "MobileItems",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/organisms/scan-report/scan-report.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SideItems",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}