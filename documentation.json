{
    "pipes": [],
    "interfaces": [],
    "injectables": [],
    "classes": [
        {
            "name": "AppPage",
            "id": "class-AppPage-a0db91bfa3b9914e9048612074084ee6",
            "file": "e2e/src/app.po.ts",
            "type": "class",
            "sourceCode": "import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo(): Promise<unknown> {\n    return browser.get(browser.baseUrl) as Promise<unknown>;\n  }\n\n  getTitleText(): Promise<string> {\n    return element(by.css('app-root .content span')).getText() as Promise<string>;\n  }\n}\n",
            "properties": [],
            "methods": [
                {
                    "name": "getTitleText",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<string>",
                    "typeParameters": [],
                    "line": 8
                },
                {
                    "name": "navigateTo",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<unknown>",
                    "typeParameters": [],
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-c67b52eeadb9e5f21393b209c8fc673f",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'secure'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\n\nexport class AppComponent {\n  title = 'secure';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".title {\n    font-size: 20px;\n    color: red;\n}",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div>\n  <h1 class=\"title\">{{title}}dddd</h1>\n  <app-date-menu></app-date-menu>\n</div>\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-9a0e161cfb9c2b7b47e11baef7e6c1b8",
            "file": "src/stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": "<button   type=\"button\"\n   (click)=\"onClick.emit($event)\"\n   [ngClass]=\"classes\"\n   [ngStyle]=\"{ 'background-color': backgroundColor, 'color': color }\"\n >\n   {{ label }} {{ title }}\n </button>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "description": "<p>What background color to use</p>\n",
                    "line": 29,
                    "type": "string"
                },
                {
                    "name": "color",
                    "line": 32,
                    "type": "string"
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "description": "<p>Button contents</p>\n",
                    "line": 49
                },
                {
                    "name": "name",
                    "line": 35,
                    "type": "string"
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 20
                },
                {
                    "name": "size",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 41,
                    "type": "string"
                },
                {
                    "name": "title",
                    "defaultValue": "'Butto'",
                    "line": 23
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 55,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button',\n  template: ` <button\n    type=\"button\"\n    (click)=\"onClick.emit($event)\"\n    [ngClass]=\"classes\"\n    [ngStyle]=\"{ 'background-color': backgroundColor, 'color': color }\"\n  >\n    {{ label }} {{ title }}\n  </button>`,\n  styleUrls: ['./button.css'],\n})\nexport default class ButtonComponent {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  @Input()\n  primary = false;\n\n  @Input()\n  title = 'Butto';\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  @Input()\n  color?: string;\n\n  @Input()\n  name?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: string;\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-weight: 700;\n  border: 0;\n  border-radius: 3em;\n  cursor: pointer;\n  display: inline-block;\n  line-height: 1;\n}\n.storybook-button--primary {\n  color: white;\n  background-color: #1ea7fd;\n}\n.storybook-button--secondary {\n  color: #333;\n  background-color: transparent;\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\n}\n.storybook-button--small {\n  font-size: 12px;\n  padding: 10px 16px;\n}\n.storybook-button--medium {\n  font-size: 14px;\n  padding: 11px 20px;\n}\n.storybook-button--large {\n  font-size: 16px;\n  padding: 12px 24px;\n}\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 57
                    }
                }
            }
        },
        {
            "name": "CardComponent",
            "id": "component-CardComponent-af75f195a51a9de5f615c9b73681229e",
            "file": "src/app/atoms/card/card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-card",
            "styleUrls": [
                "./card.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./card.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "isActive",
                    "line": 13,
                    "type": "string"
                },
                {
                    "name": "src",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "text",
                    "line": 10,
                    "type": "string"
                },
                {
                    "name": "title",
                    "line": 11,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "classes",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnChanges } from '@angular/core';\n\n@Component({\n  selector: 'app-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.scss']\n})\n\nexport class CardComponent implements OnChanges {\n  @Input() text: string;\n  @Input() title: string;\n  @Input() src: string;\n  @Input() isActive: string;\n\n  classes;\n\n  constructor() { }\n\n  ngOnChanges() {\n    console.log(this.title, this.isActive,'yugbuiguyg')\n    this.classes = this.isActive ? \"app-card active\" : \"app-card\";\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-card {\n    background: rgba(var(--secondary-color-code), 0.5);\n    width: fit-content;\n    padding: 1px;\n    border-radius: 12px;\n    text-align: center;\n\n    &.active {\n        background: var(--success-grad-light);\n        position: relative;\n        \n        &::after {\n          content: url('../../../assets/images/checkbox.svg');\n          width: 19px;\n          height: 19px;\n          position: absolute;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          top: 8px;\n          right: 8px;\n          background: var(--success-grad-light);\n          border-radius: 50%;\n        }\n    }\n\n    &:hover {\n      background: var(--success-grad-light);\n    }\n\n    &__wrapper {\n        border-radius: 12px;\n        background-color: var(--text-color);\n    }\n\n    &__text-wrapper {\n        width: 100%;\n        word-wrap: break-word;\n    }\n\n    &__container {\n        width: 130px;\n        padding: 22px 15px 28px;\n\n        border-radius: 12px;\n        background-color: rgba(var(--text-color-code), 0.15);\n        color: var(--secondary-color);\n\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n\n        & > img {\n            margin-bottom: 20px;\n            width: 44px;\n            height: 50px;\n        }\n    }\n  }\n\n  @media screen and (max-width: 600px) {\n    .app-card {\n      width: 100%;\n      &.active {\n          &::after {\n            top: 12px;\n            left: 58px;\n          }\n      }\n      &__wrapper  {\n        width: 100%;\n      } \n\n      &__container {\n        flex-direction: row;\n        padding: 13px 15px;\n        width: 100%;\n        & > img {\n          margin-right: 50px;\n          margin-bottom: 0;\n          width: 55px;\n          height: 62px;\n        }\n      }\n  \n  \n      &__text-wrapper {\n        text-align: center;\n        width: 50%;\n      }\n    }\n  }",
                    "styleUrl": "./card.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 15
            },
            "implements": [
                "OnChanges"
            ],
            "templateData": "<div [ngClass]=\"classes\">\n    <div class=\"app-card__wrapper\">\n        <div class=\"app-card__container\">\n            <img [src]='src' alt=\"text + 'flag'\" />\n            <div class=\"app-card__text-wrapper\">\n              <p class=\"fs-12-gramm-400\">{{ title }}</p>\n              <p class=\"fs-10-sofia-300\">{{ text }}</p>\n            </div>\n        </div>\n    </div>\n</div>"
        },
        {
            "name": "DateMenuComponent",
            "id": "component-DateMenuComponent-5d1894e3c0ac585d7f019eccb0c44786",
            "file": "src/app/molecules/menu/date-menu/date-menu.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-date-menu",
            "styleUrls": [
                "./date-menu.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./date-menu.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "items",
                    "line": 9,
                    "type": "string[]"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "active",
                    "defaultValue": "0",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [
                {
                    "name": "handlClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "any"
                        },
                        {
                            "name": "i",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "i",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-date-menu',\n  templateUrl: './date-menu.component.html',\n  styleUrls: ['./date-menu.component.scss']\n})\nexport class DateMenuComponent implements OnInit {\n  @Input() items: string[];\n  active = 0;\n\n  ngOnInit() {\n  }\n  \n  handlClick(event: any, i: number) {\n    event.preventDefault();\n    this.active = i;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-date-menu {\n    display: flex;\n    align-items: center;\n\n    &__list {\n        display: flex;\n        align-items: center;\n    }\n\n    &__item {\n        padding: 0 10px 5px;\n    }\n\n    &__container {\n        height: 46px;\n        margin-left: 20px;\n        padding: 10px 13px;\n        border: 1px solid rgba(var(--secondary-color-code), 0.3);\n        border-radius: 12px;\n        & > img {\n            height: 20px;\n            width: 18px;\n          }\n    }\n}",
                    "styleUrl": "./date-menu.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"app-date-menu\">\n  <ul class=\"app-date-menu__list\">\n    <li \n      class=\"app-date-menu__item\"\n      *ngFor=\"let item of items; let i = index\" \n    >\n      <app-nav-link\n        [isActive]=\"active === i\"\n        [title]=\"item\" \n        classes=\"nav-link-secondary nav-link-highlited fs-12-gramm-400\"\n        (click)=\"handlClick($event, i)\"\n      >\n      </app-nav-link>\n    </li>\n  </ul>\n  <div class=\"app-date-menu__container\">\n    <img src='../../../../assets/images/calendar.png' alt=\"calendar\" />\n  </div>\n</div>\n"
        },
        {
            "name": "formInputComponent",
            "id": "component-formInputComponent-685838e89e17c5238e1345aad72a1dcc",
            "file": "src/app/atoms/inputs/formInput/formInput.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-form-input",
            "styleUrls": [
                "formInput.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./formInput.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "classes",
                    "line": 15,
                    "type": "string"
                },
                {
                    "name": "color",
                    "line": 14,
                    "type": "string"
                },
                {
                    "name": "placeholder",
                    "line": 13,
                    "type": "string"
                },
                {
                    "name": "wrapperClasses",
                    "line": 16,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-form-input',\n    templateUrl: './formInput.component.html',\n    styleUrls: ['formInput.component.scss'],\n})\n\n\n\nexport class formInputComponent implements OnInit {\n    @Input() backgroundColor: string;\n    @Input() placeholder: string;\n    @Input() color: string;\n    @Input() classes: string;\n    @Input() wrapperClasses: string;\n\n    ngOnInit() {\n\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".form-input-field {\n  width: 100%;\n  padding-bottom: 11px;\n  padding-top: 15px;\n  padding-right: 16px;\n  background: var(--input-bg-color);\n  border: none;\n  color: var(--secondary-color);\n  border-radius: 8px;\n\n  &--simple {\n    padding-left: 16px;\n  }\n\n  &--icon {\n    padding-left: 53px;\n    background: var(--input-bg-color); \n  }\n\n  &::placeholder {\n    color: rgba(var(--secondary-color-code), 0.5);\n  }\n}\n\n.form-input__wrapper {\n  width: 100%;\n  position: relative;\n  width: 100%;\n  height: 46px;\n\n  &--icon {\n    &:after {\n      content: url('../../../../assets/images/Search.png');\n      position: absolute;\n      top: 13px;\n      left: 16px;\n      opacity: 0.5;\n      width: 20px;\n      height: 20px;\n    }\n  }\n}",
                    "styleUrl": "formInput.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<div \n  [ngClass]=\"wrapperClasses\"\n>\n  <input \n    [ngClass]=\"classes\"\n    [ngStyle]=\"{ 'background': backgroundColor, 'color': color }\"\n    [placeholder]=\"placeholder\"\n    type=\"text\"\n  >\n</div>\n"
        },
        {
            "name": "FormScreenFirstComponent",
            "id": "component-FormScreenFirstComponent-16eb4047c9a3b278a32b3b361bdad16d",
            "file": "src/app/molecules/form-screens/form-screen-first/form-screen-first.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-form-screen-first",
            "styleUrls": [
                "./form-screen-first.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./form-screen-first.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-form-screen-first',\n  templateUrl: './form-screen-first.component.html',\n  styleUrls: ['./form-screen-first.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class FormScreenFirstComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-form-screen-first {\n    &__container {\n        width: 100%;\n        margin-top: 32px;\n        display: flex;\n        justify-content: space-between;\n    }\n\n    &__column {\n        width: 48%;\n\n        & > app-form-input {\n            margin-bottom: 32px;\n        }\n    }\n}\n\n.form-input__wrapper {\n    margin-bottom: 32px;\n}\n\n@media screen and (max-width: 600px) {\n    .app-form-screen-first {\n        &__container {\n            flex-direction: column;\n        }\n\n        &__column {\n            width: 99%;\n        }\n    } \n}\n",
                    "styleUrl": "./form-screen-first.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 9
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<h3 class=\"fs-h3\">Create your account</h3>\n<div class=\"app-form-screen-first__container\"> \n    <div class=\"app-form-screen-first__column\">   \n       <app-form-input\n            [placeholder]=\"'First Name'\"\n            [classes]=\"'form-input-field form-input-field--simple fs-16-sofia-300'\"\n            [wrapperClasses]=\"'form-input__wrapper form-input__wrapper--simple'\"\n        > \n        </app-form-input> \n        <app-form-input\n            [placeholder]=\"'Email'\"\n            [classes]=\"'form-input-field form-input-field--simple fs-16-sofia-300'\"\n            [wrapperClasses]=\"'form-input__wrapper form-input__wrapper--simple'\"\n        > \n        </app-form-input>    \n        <app-form-input\n            [placeholder]=\"'Password'\"\n            [classes]=\"'form-input-field form-input-field--simple fs-16-sofia-300'\"\n            [wrapperClasses]=\"'form-input__wrapper form-input__wrapper--simple'\"\n        > \n        </app-form-input>        \n    </div>\n    <div class=\"app-form-screen-first__column\">   \n        <app-form-input\n            [placeholder]=\"'Last Name'\"\n            [classes]=\"'form-input-field form-input-field--simple fs-16-sofia-300'\"\n            [wrapperClasses]=\"'form-input__wrapper form-input__wrapper--simple'\"\n         > \n         </app-form-input> \n         <app-form-input\n            [placeholder]=\"'This account is for'\"\n            [classes]=\"'form-input-field form-input-field--simple fs-16-sofia-300'\"\n            [wrapperClasses]=\"'form-input__wrapper form-input__wrapper--simple'\"\n         > \n         </app-form-input>    \n         <app-form-input\n            [placeholder]=\"'Confirm Password'\"\n            [classes]=\"'form-input-field form-input-field--simple fs-16-sofia-300'\"\n            [wrapperClasses]=\"'form-input__wrapper form-input__wrapper--simple'\"\n         > \n         </app-form-input>        \n   </div>\n</div>\n"
        },
        {
            "name": "FormScreenFourthComponent",
            "id": "component-FormScreenFourthComponent-adf65d61df554e975fea2814b714ddbb",
            "file": "src/app/molecules/form-screens/form-screen-fourth/form-screen-fourth.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-form-screen-fourth",
            "styleUrls": [
                "./form-screen-fourth.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./form-screen-fourth.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-form-screen-fourth',\n  templateUrl: './form-screen-fourth.component.html',\n  styleUrls: ['./form-screen-fourth.component.scss']\n})\nexport class FormScreenFourthComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./form-screen-fourth.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>form-screen-fourth works!</p>\n"
        },
        {
            "name": "FormScreenSecondComponent",
            "id": "component-FormScreenSecondComponent-f38e5338cd795724065676f709596162",
            "file": "src/app/molecules/form-screens/form-screen-second/form-screen-second.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-form-screen-second",
            "styleUrls": [
                "./form-screen-second.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./form-screen-second.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-form-screen-second',\n  templateUrl: './form-screen-second.component.html',\n  styleUrls: ['./form-screen-second.component.scss']\n})\nexport class FormScreenSecondComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "h3 {\n    margin-bottom: 22px;\n}\n\np {\n    margin-bottom: 40px;\n}",
                    "styleUrl": "./form-screen-second.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<h3 class=\"fs-h3\">Add your first domain</h3>\n<p class=\"fs-18-sofia-300\">You can add more domains inside the app</p>\n<app-form-input\n    [placeholder]=\"'yourwebsite.com'\"\n    [classes]=\"'form-input-field form-input-field--simple fs-16-sofia-300'\"\n    [wrapperClasses]=\"'form-input__wrapper form-input__wrapper--simple'\"\n> \n</app-form-input>"
        },
        {
            "name": "FormScreenThirdComponent",
            "id": "component-FormScreenThirdComponent-6f96c522c4d6cbd13302ce6231a0da22",
            "file": "src/app/molecules/form-screens/form-screen-third/form-screen-third.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-form-screen-third",
            "styleUrls": [
                "./form-screen-third.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./form-screen-third.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "modules",
                    "defaultValue": "[\n    {\n      title: \"GDPR, eprivacy\",\n      text: \"Europe\",\n      src: \"../../../assets/images/flags/euro.png\"\n    },\n    {\n      title: \"CCPA\",\n      text: \"California\",\n      src: \"../../../assets/images/flags/ccpa.png\"\n    },\n    {\n      title: \"LGPD\",\n      text: \"Brasil\",\n      src: \"../../../assets/images/flags/lgpd.png\"\n    }\n  ]",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "selectedModules",
                    "defaultValue": "[]",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39
                },
                {
                    "name": "selectModule",
                    "args": [
                        {
                            "name": "title",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "jsdoctags": [
                        {
                            "name": "title",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-form-screen-third',\n  templateUrl: './form-screen-third.component.html',\n  styleUrls: ['./form-screen-third.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class FormScreenThirdComponent implements OnInit {\n  selectedModules: string[]=[];\n  modules=[\n    {\n      title: \"GDPR, eprivacy\",\n      text: \"Europe\",\n      src: \"../../../assets/images/flags/euro.png\"\n    },\n    {\n      title: \"CCPA\",\n      text: \"California\",\n      src: \"../../../assets/images/flags/ccpa.png\"\n    },\n    {\n      title: \"LGPD\",\n      text: \"Brasil\",\n      src: \"../../../assets/images/flags/lgpd.png\"\n    }\n  ]\n\n  selectModule(title: string) {\n    if (this.selectedModules.includes(title)) {\n      this.selectedModules = this.selectedModules.filter(module => module !== title);\n    } else {\n      this.selectedModules = [...this.selectedModules, title];\n    }\n\n    console.log(this.selectedModules)\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-form-screen-third {\n    &__container {\n        width: 100%;\n        margin-top: 56px;\n        display: flex;\n        justify-content: space-between;\n    }\n}\n\n@media screen and (max-width: 600px) {\n    .app-form-screen-third {\n        &__container {\n            flex-direction: column;\n        }\n    }\n\n    .app-card {\n        margin-bottom: 8px;\n    }\n}",
                    "styleUrl": "./form-screen-third.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<h3 class=\"fs-h3\">Select your compliance modules</h3>\n<ul class=\"app-form-screen-third__container\">\n    <li \n        class=\"app-form-screen-third__item\"\n        *ngFor=\"let module of modules; let i = index\" \n    >\n        <app-card\n            (click)=\"selectModule(module.title)\"\n            [title]=\"module.title\"\n            [text]=\"module.text\"\n            [src]=\"module.src\"\n            [isActive]=\"selectedModules.includes(module.title)\"\n        >\n        </app-card>\n    </li>\n</ul>\n"
        },
        {
            "name": "gradientButtonComponent",
            "id": "component-gradientButtonComponent-ee857e56cbc93120dd448d40b64dc232",
            "file": "src/app/atoms/buttons/gradientButton/gradientButton.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-gradient-button",
            "styleUrls": [
                "../button.component.scss",
                "gradientButton.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./gradientButton.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "line": 13,
                    "type": "string"
                },
                {
                    "name": "color",
                    "line": 14,
                    "type": "string"
                },
                {
                    "name": "title",
                    "line": 12,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-gradient-button',\n    templateUrl: './gradientButton.component.html',\n    styleUrls: ['../button.component.scss', 'gradientButton.component.scss'],\n})\n\n\n\nexport class gradientButtonComponent implements OnInit {\n    @Input() title: string;\n    @Input() backgroundColor: string;\n    @Input() color: string;\n\n    ngOnInit() {\n\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".btn-app {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  box-sizing: border-box;\n  outline: none;\n  transition: 0.3s;\n  border-radius: 8px;\n  &--h36 {\n    height: 36px;\n    padding: 10px 18px 8px 18px;\n  }\n  &--asimetric {\n    border-radius: 20px 5px;\n    height: 52px;\n    padding: 18px 41px 18px 44px;\n  }\n\n  &--h46 {\n    height: 46px;\n    padding: 13px 19px 12px 17px;\n  }\n\n  &--h53 {\n    padding: 9px 50px;\n    height: 53px;\n  }\n}\n",
                    "styleUrl": "../button.component.scss"
                },
                {
                    "data": ".btn-grad {\n  background: var(--higlited-grad-light);\n  border: none;\n  color: var(--text-color);\n\n  & > img {\n     margin-left: 27px;\n     height: 8px;\n     width: 4px;\n     margin-bottom: 2px;\n  }\n\n  &:hover {\n      background: var(--highlited-grad-dark);\n  }\n\n  &:active {\n      background: var(--higlited-grad-light);\n  }\n\n}\n",
                    "styleUrl": "gradientButton.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<button\n  [ngClass]=\"classes\"\n  [ngStyle]=\"{ 'background': backgroundColor, 'color': color }\"\n>\n  {{ title }}\n  <img src='../../../assets/images/next.svg' alt=\"arrow\" />\n</button>\n\n"
        },
        {
            "name": "IconContainerComponent",
            "id": "component-IconContainerComponent-7cbd95fa14f6bcba21cf9a5a4b6f1d3c",
            "file": "src/app/atoms/iconContainer/iconContainer.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-icon-container",
            "styleUrls": [
                "iconContainer.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./iconContainer.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "line": 12,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-icon-container',\n    templateUrl: './iconContainer.component.html',\n    styleUrls: ['iconContainer.component.scss'],\n})\n\n\n\nexport class IconContainerComponent implements OnInit {\n    @Input() backgroundColor: string;\n\n    ngOnInit() {\n\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".icons-container {\n  width: 100%;\n\n  &-box {\n    \n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n    align-items: center;\n    opacity: 0.3;\n\n    & > img {\n      max-width: 80%;\n    }\n  }\n}",
                    "styleUrl": "iconContainer.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<div \n  [ngStyle]=\"{ 'background': backgroundColor }\"\n  class=\"icons-container\"\n>\n  <div class=\"icons-container-box\">\n      <img src=\"../../../assets/images/companies/logo1.png\" alt=\"company logo\">\n      <img src=\"../../../assets/images/companies/logo2.png\" alt=\"company logo\">\n      <img src=\"../../../assets/images/companies/logo3.png\" alt=\"company logo\">\n  </div>\n  <div class=\"icons-container-box\">\n      <img src=\"../../../assets/images/companies/logo4.png\" alt=\"company logo\">\n      <img src=\"../../../assets/images/companies/logo5.png\" alt=\"company logo\">\n      <img src=\"../../../assets/images/companies/logo6.png\" alt=\"company logo\">\n  </div>\n</div>\n"
        },
        {
            "name": "infoButtonComponent",
            "id": "component-infoButtonComponent-a0e838d1117da308099ddbbbb641b940",
            "file": "src/app/atoms/buttons/infoButton/infoButton.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-info-button",
            "styleUrls": [
                "../button.component.scss",
                "infoButton.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./infoButton.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "line": 14,
                    "type": "string"
                },
                {
                    "name": "classes",
                    "line": 13,
                    "type": "string"
                },
                {
                    "name": "color",
                    "line": 15,
                    "type": "string"
                },
                {
                    "name": "title",
                    "line": 12,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-info-button',\n    templateUrl: './infoButton.component.html',\n    styleUrls: ['../button.component.scss', 'infoButton.component.scss'],\n})\n\n\n\nexport class infoButtonComponent implements OnInit {\n    @Input() title: string;\n    @Input() classes: string;\n    @Input() backgroundColor: string;\n    @Input() color: string;\n\n    ngOnInit() {\n\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".btn-app {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  box-sizing: border-box;\n  outline: none;\n  transition: 0.3s;\n  border-radius: 8px;\n  &--h36 {\n    height: 36px;\n    padding: 10px 18px 8px 18px;\n  }\n  &--asimetric {\n    border-radius: 20px 5px;\n    height: 52px;\n    padding: 18px 41px 18px 44px;\n  }\n\n  &--h46 {\n    height: 46px;\n    padding: 13px 19px 12px 17px;\n  }\n\n  &--h53 {\n    padding: 9px 50px;\n    height: 53px;\n  }\n}\n",
                    "styleUrl": "../button.component.scss"
                },
                {
                    "data": ".btn-info {\n  padding: 9px 15px 9px 15px;\n  height: 40px;\n  border: none;\n  color: var(--info-color);\n  background-color: rgba(var(--info-color-code), 0.05);  \n  text-transform: capitalize;\n\n  & > img {\n      margin-right: 15px;\n  }\n\n  &:hover {\n      background-color: rgba(var(--info-color-code), 0.3);  \n  }\n\n  &:active {\n      background-color: transparent; \n  }\n}\n",
                    "styleUrl": "infoButton.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<button \n  [ngClass]=\"classes\"\n  [ngStyle]=\"{ 'background': backgroundColor, 'color': color }\"\n>\n  <img src=\"../../../assets/images/support.png\" alt=\"support button logo\">\n  {{ title }}\n</button>\n"
        },
        {
            "name": "largeButtonComponent",
            "id": "component-largeButtonComponent-63bad58326caa129a51d540d58512e45",
            "file": "src/app/atoms/buttons/largeButton/largeButton.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-large-button",
            "styleUrls": [
                "../button.component.scss",
                "largeButton.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./largeButton.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "line": 15,
                    "type": "string"
                },
                {
                    "name": "classes",
                    "line": 14,
                    "type": "string"
                },
                {
                    "name": "color",
                    "line": 16,
                    "type": "string"
                },
                {
                    "name": "text",
                    "line": 13,
                    "type": "string"
                },
                {
                    "name": "title",
                    "line": 12,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-large-button',\n    templateUrl: './largeButton.component.html',\n    styleUrls: ['../button.component.scss', 'largeButton.component.scss'],\n})\n\n\n\nexport class largeButtonComponent implements OnInit {\n    @Input() title: string;\n    @Input() text: string;\n    @Input() classes: string;\n    @Input() backgroundColor: string;\n    @Input() color: string;\n\n    ngOnInit() {\n\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".btn-app {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  box-sizing: border-box;\n  outline: none;\n  transition: 0.3s;\n  border-radius: 8px;\n  &--h36 {\n    height: 36px;\n    padding: 10px 18px 8px 18px;\n  }\n  &--asimetric {\n    border-radius: 20px 5px;\n    height: 52px;\n    padding: 18px 41px 18px 44px;\n  }\n\n  &--h46 {\n    height: 46px;\n    padding: 13px 19px 12px 17px;\n  }\n\n  &--h53 {\n    padding: 9px 50px;\n    height: 53px;\n  }\n}\n",
                    "styleUrl": "../button.component.scss"
                },
                {
                    "data": ".btn-large {\n    background: transparent;\n    border: none;\n    position: relative;\n    color: var(--secondary-color);\n    width: 100%;\n    z-index: 2;\n    display: flex;\n    \n    &.btn-app { \n        justify-content: center;\n    }\n\n    &--active {\n        background: var(--success-grad-light);\n        color: var(--text-color);\n    }\n\n    & > span > p {\n        margin: 0;\n    }\n\n    & > span > .fs-14-strong {\n        text-transform: uppercase;\n    }\n\n    &::before {\n        position: absolute;\n        width: 100%;\n        height: 100%;\n        content: '';\n        background: rgba(var(--secondary-color-code), 0.05);\n        z-index: -1;\n        top: 0;\n        left: 0;\n        border-radius: 8px;\n        transition: 0.3s;\n    }\n\n    &::after {\n        position: absolute;\n        width: 100%;\n        height: 100%;\n        content: '';\n        z-index: -1;\n        background: var(--success-grad-light);\n        top: 0;\n        left: 0;\n        border-radius: 8px;\n        transition: 0.3s;\n        opacity: 0;\n    }\n\n    &:hover {\n        &::before {\n            background: rgba(var(--secondary-color-code), 0.1);\n        }\n    }\n\n    &:active {\n        color: var(--text-color);\n        &::before {\n            opacity: 0;\n        }\n\n        &::after {\n            opacity: 1;\n        }\n    }\n}",
                    "styleUrl": "largeButton.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<button \n  [ngClass]=\"classes\"\n  [ngStyle]=\"{ 'background': backgroundColor, 'color': color }\"\n>\n  <span>\n      <p class=\"fs-14-gramm-normal\">{{ title }}</p>\n      <p class=\"fs-14-sofia-300\">{{ text }}</p>\n  </span>\n</button>"
        },
        {
            "name": "lightButtonComponent",
            "id": "component-lightButtonComponent-b84de4644a0bba524447d89278eda9ac",
            "file": "src/app/atoms/buttons/lightButton/lightButton.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-light-button",
            "styleUrls": [
                "../button.component.scss",
                "lightButton.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./lightButton.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "line": 13,
                    "type": "string"
                },
                {
                    "name": "classes",
                    "line": 12,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-light-button',\n    templateUrl: './lightButton.component.html',\n    styleUrls: ['../button.component.scss', 'lightButton.component.scss'],\n})\n\n\n\nexport class lightButtonComponent implements OnInit {\n    @Input() classes: string;\n    @Input() backgroundColor: string;\n\n    ngOnInit() {\n\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".btn-app {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  box-sizing: border-box;\n  outline: none;\n  transition: 0.3s;\n  border-radius: 8px;\n  &--h36 {\n    height: 36px;\n    padding: 10px 18px 8px 18px;\n  }\n  &--asimetric {\n    border-radius: 20px 5px;\n    height: 52px;\n    padding: 18px 41px 18px 44px;\n  }\n\n  &--h46 {\n    height: 46px;\n    padding: 13px 19px 12px 17px;\n  }\n\n  &--h53 {\n    padding: 9px 50px;\n    height: 53px;\n  }\n}\n",
                    "styleUrl": "../button.component.scss"
                },
                {
                    "data": ".btn-light {\n    border: none;\n    padding: 16px;\n    background: var(--input-bg-color);\n\n    &:hover {\n        background: var(--light-btn-hover);\n    }\n\n    &:active {\n        background: var(--light-btn-hover);\n    }\n}",
                    "styleUrl": "lightButton.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<button \n  [ngClass]=\"classes\"\n  [ngStyle]=\"{ 'background': backgroundColor }\"\n>\n  <img src=\"../../../assets/images/back-icon.png\">\n</button>\n\n"
        },
        {
            "name": "navLinkComponent",
            "id": "component-navLinkComponent-30016bada6746b6d1b7450897d119b1e",
            "file": "src/app/atoms/navLink/navLink.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-nav-link",
            "styleUrls": [
                "navLink.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./navLink.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "classes",
                    "line": 13,
                    "type": "string"
                },
                {
                    "name": "isActive",
                    "line": 14,
                    "type": "boolean"
                },
                {
                    "name": "title",
                    "line": 12,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "appointedClasses",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnChanges, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-nav-link',\n    templateUrl: './navLink.component.html',\n    styleUrls: ['navLink.component.scss'],\n})\n\n\n\nexport class navLinkComponent implements OnInit, OnChanges {\n    @Input() title: string;\n    @Input() classes: string;\n    @Input() isActive: boolean;\n    appointedClasses = '';\n    ngOnChanges() {\n        this.appointedClasses = this.isActive ? `${this.classes} active` : this.classes;\n    }\n    ngOnInit() {\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".nav-link-secondary {\n  text-transform: uppercase;\n  background: rgba(var(--secondary-color-code), 0.5);\n  position: relative;\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  transition: 0.3;\n\n  &:hover {\n    background: var(--secondary-color); \n    -webkit-background-clip: text;\n  }\n\n  &:active {\n    background: var(--success-grad-light); \n    -webkit-background-clip: text;\n  }\n\n  &.active {\n    text-decoration: none;\n    -webkit-text-fill-color: transparent;\n    transition: 0.3;\n    background: var(--success-grad-light); \n    -webkit-background-clip: text;\n  }\n}\n\n.nav-link-highlited {\n  &.active {\n    &::after {\n      width: 100%;\n    }\n  }\n  &::after {\n    content: '';\n    transition: 0.3s;\n    position: absolute;\n    width: 0;\n    height: 2px;\n    background: var(--success-grad-light);\n    bottom: -3px;\n    left: 0;\n  }\n  &:active {\n    &::after {\n      width: 100%;\n    }\n  }\n}\n\n.nav-link-main {\n  background: rgba(var(--secondary-color-code), 0.75);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  position: relative;\n  text-transform: capitalize;\n\n  &::after {\n    content: '';\n    transition: 0.3s;\n    position: absolute;\n    width: 0;\n    height: 1px;\n    background-color: rgba(var(--secondary-color-code), 0.75);\n    bottom: 0;\n    left: 0;\n  }\n\n  &:hover {\n    &::after {\n      width: 100%;\n    }\n  }\n\n  &:active {\n    background: var(--success-grad-light); \n    -webkit-background-clip: text;\n\n    &::after {\n      width: 0;\n    }\n  }\n\n  &.active {\n    text-decoration: none;\n    -webkit-text-fill-color: transparent;\n    transition: 0.3;\n    background: var(--success-grad-light); \n    -webkit-background-clip: text;\n  }\n}\n",
                    "styleUrl": "navLink.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit",
                "OnChanges"
            ],
            "templateData": "<a \n  href=\"#\" \n  [ngClass]=\"appointedClasses\"\n>\n  {{ title }}\n</a>\n"
        },
        {
            "name": "primaryButtonComponent",
            "id": "component-primaryButtonComponent-aa52398da27cd36901a9d9922f7c1677",
            "file": "src/app/atoms/buttons/primaryButton/primaryButton.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-primary-button",
            "styleUrls": [
                "../button.component.scss",
                "primaryButton.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./primaryButton.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "line": 13,
                    "type": "string"
                },
                {
                    "name": "classes",
                    "line": 14,
                    "type": "string"
                },
                {
                    "name": "title",
                    "line": 12,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-primary-button',\n    templateUrl: './primaryButton.component.html',\n    styleUrls: ['../button.component.scss', 'primaryButton.component.scss'],\n})\n\n\n\nexport class primaryButtonComponent implements OnInit {\n    @Input() title: string;\n    @Input() backgroundColor: string;\n    @Input() classes: string;\n\n    ngOnInit() {\n\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".btn-app {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  box-sizing: border-box;\n  outline: none;\n  transition: 0.3s;\n  border-radius: 8px;\n  &--h36 {\n    height: 36px;\n    padding: 10px 18px 8px 18px;\n  }\n  &--asimetric {\n    border-radius: 20px 5px;\n    height: 52px;\n    padding: 18px 41px 18px 44px;\n  }\n\n  &--h46 {\n    height: 46px;\n    padding: 13px 19px 12px 17px;\n  }\n\n  &--h53 {\n    padding: 9px 50px;\n    height: 53px;\n  }\n}\n",
                    "styleUrl": "../button.component.scss"
                },
                {
                    "data": ".module-border-wrap {\n    height: 46px;\n    box-sizing: border-box;\n    background: var(--success-grad-light);\n    padding: 1px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: fit-content;\n    border-radius: 6px;\n}\n\n.module-opacity-wrap {\n    background: var(--text-color);\n    border-radius: 5px;\n}\n\n.btn-primary.btn-app {\n    height: 44px;\n    border-radius: 5px;  \n}\n\n.btn-primary {\n    margin: 0;\n    background: transparent;\n    border: none;\n    position: relative;\n\n    p {\n        margin: 0;\n    }\n   \n\n    &__name {\n        background: var(--success-grad-light);\n        -webkit-background-clip: text;\n        -webkit-text-fill-color: transparent;\n        transition: 0;\n    }\n\n    & > svg { \n        margin-right: 20px;\n        fill: url(#paint0_linear);\n        opacity: 0.8;\n        fill-opacity: 0.8;\n    }\n\n    &:active > svg { \n        opacity: 1;\n        fill-opacity: 1;\n        fill: var(--text-color); \n    }\n\n    &:hover {\n        background: linear-gradient(89.52deg, hsla(137, 66%, 42%, 0.2) -46.17%, rgba(2, 99, 188, 0.2) 186.99%);\n    }\n\n    &:active {\n        background: var(--success-grad-light);\n        color: var(--text-color);\n\n        & > .btn-primary__name {\n            background: var(--text-color);\n            -webkit-background-clip: text;\n            -webkit-text-fill-color: transparent;\n        }\n    }\n}\n",
                    "styleUrl": "primaryButton.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"module-border-wrap\">\n  <div class=\"module-opacity-wrap \">\n      <button \n        [ngStyle]=\"{ 'background': backgroundColor }\"\n        [ngClass]=\"classes\"\n      >\n          <svg width=\"20\" height=\"21\" viewBox=\"0 0 20 21\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path d=\"M6.71 5.96433L9 3.55979V13.5857C9 13.863 9.10536 14.1289 9.29289 14.3249C9.48043 14.521 \n              9.73478 14.6312 10 14.6312C10.2652 14.6312 10.5196 14.521 10.7071 14.3249C10.8946 14.1289 \n              11 13.863 11 13.5857V3.55979L13.29 5.96433C13.383 6.06232 13.4936 6.1401 13.6154 6.19317C13.7373 \n              6.24625 13.868 6.27358 14 6.27358C14.132 6.27358 14.2627 6.24625 14.3846 6.19317C14.5064 6.1401\n              14.617 6.06232 14.71 5.96433C14.8037 5.86714 14.8781 5.75152 14.9289 5.62412C14.9797 5.49672 \n              15.0058 5.36007 15.0058 5.22206C15.0058 5.08405 14.9797 4.9474 14.9289 4.82C14.8781 4.6926 14.8037 \n              4.57698 14.71 4.47979L10.71 0.297969C10.6149 0.20279 10.5028 0.128181 10.38 0.0784232C10.1365 \n              -0.0261411 9.86346 -0.0261411 9.62 0.0784232C9.49725 0.128181 9.3851 0.20279 9.29 0.297969L5.29 \n              4.47979C5.19676 4.57726 5.1228 4.69299 5.07234 4.82034C5.02188 4.9477 4.99591 5.08421 4.99591 \n              5.22206C4.99591 5.35991 5.02188 5.49642 5.07234 5.62378C5.1228 5.75113 5.19676 5.86686 5.29 \n              5.96433C5.38324 6.06181 5.49393 6.13913 5.61575 6.19189C5.73757 6.24464 5.86814 6.27179 6 \n              6.27179C6.13186 6.27179 6.26243 6.24464 6.38425 6.19189C6.50607 6.13913 6.61676 6.06181 6.71 \n              5.96433ZM19 10.4493C18.7348 10.4493 18.4804 10.5595 18.2929 10.7555C18.1054 10.9516 18 11.2175 \n              18 11.4948V17.7675C18 18.0448 17.8946 18.3107 17.7071 18.5068C17.5196 18.7028 17.2652 18.813 17 \n              18.813H3C2.73478 18.813 2.48043 18.7028 2.29289 18.5068C2.10536 18.3107 2 18.0448 2 \n              17.7675V11.4948C2 11.2175 1.89464 10.9516 1.70711 10.7555C1.51957 10.5595 1.26522 10.4493 \n              1 10.4493C0.734784 10.4493 0.48043 10.5595 0.292893 10.7555C0.105357 10.9516 0 11.2175 0 \n              11.4948V17.7675C0 18.5993 0.316071 19.3971 0.87868 19.9853C1.44129 20.5734 2.20435 20.9039 \n              3 20.9039H17C17.7956 20.9039 18.5587 20.5734 19.1213 19.9853C19.6839 19.3971 20 18.5993 20 \n              17.7675V11.4948C20 11.2175 19.8946 10.9516 19.7071 10.7555C19.5196 10.5595 19.2652 10.4493 \n              19 10.4493Z\"/>\n              <defs>\n              <linearGradient id=\"paint0_linear\" x1=\"-9.10937\" y1=\"46.0158\" x2=\"37.9111\" y2=\"45.6381\" \n              gradientUnits=\"userSpaceOnUse\">\n              <stop stop-color=\"#24B04B\"/>\n              <stop offset=\"1\" stop-color=\"#0263BC\"/>\n              </linearGradient>\n              </defs>\n          </svg>\n          <p class=\"btn-primary__name\">\n              {{ title }}\n          </p>\n      </button>\n  </div>\n</div>"
        },
        {
            "name": "searchItemComponent",
            "id": "component-searchItemComponent-8aed315c7cd249cd8116230c154a8a92",
            "file": "src/app/atoms/searchItem/searchItem.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-nav-link",
            "styleUrls": [
                "searchItem.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./searchItem.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "classes",
                    "line": 13,
                    "type": "string"
                },
                {
                    "name": "title",
                    "line": 12,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-nav-link',\n    templateUrl: './searchItem.component.html',\n    styleUrls: ['searchItem.component.scss'],\n})\n\n\n\nexport class searchItemComponent implements OnInit {\n    @Input() title: string;\n    @Input() classes: string;\n\n    ngOnInit() {\n\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".search-list__item {\n  box-sizing: border-box;\n  list-style: none;\n  width: 100%;\n  height: 46px;\n  padding: 15px 53px;\n  background: var(--input-bg-color);\n  transition: 0.3s;\n  color: var(--secondary-color);\n  opacity: 0.75;\n\n  &:hover {\n    cursor: pointer;\n    background-color: var(--light-btn-hover);\n  }\n}\n\n.list-item-icon {\n  padding: 19px 53px;\n  width: 100%;\n  height: 54px;\n  border: 1px solid rgba(var(--secondary-color-code), 0.1);\n  border-radius: 8px;\n  position: relative;\n  color: rgba(var(--secondary-color-code), 0.7);\n\n  &:after {\n    content: url('../../../assets/images/check.png');\n    position: absolute;\n    left: 17px;\n    top: 17px;\n  }\n}",
                    "styleUrl": "searchItem.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<li \n  [ngClass]=\"classes\"\n>\n  {{ title }}\n</li>\n\n"
        },
        {
            "name": "secondaryButtonComponent",
            "id": "component-secondaryButtonComponent-c21cc17b95a3d834a2e33b2457374047",
            "file": "src/app/atoms/buttons/secondaryButton/secondaryButton.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-secondary-button",
            "styleUrls": [
                "../button.component.scss",
                "secondaryButton.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./secondaryButton.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "line": 13,
                    "type": "string"
                },
                {
                    "name": "classes",
                    "line": 15,
                    "type": "string"
                },
                {
                    "name": "color",
                    "line": 14,
                    "type": "string"
                },
                {
                    "name": "title",
                    "line": 12,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-secondary-button',\n    templateUrl: './secondaryButton.component.html',\n    styleUrls: ['../button.component.scss', 'secondaryButton.component.scss'],\n})\n\n\n\nexport class secondaryButtonComponent implements OnInit {\n    @Input() title: string;\n    @Input() backgroundColor: string;\n    @Input() color: string;\n    @Input() classes: string;\n\n    ngOnInit() {\n\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".btn-app {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  box-sizing: border-box;\n  outline: none;\n  transition: 0.3s;\n  border-radius: 8px;\n  &--h36 {\n    height: 36px;\n    padding: 10px 18px 8px 18px;\n  }\n  &--asimetric {\n    border-radius: 20px 5px;\n    height: 52px;\n    padding: 18px 41px 18px 44px;\n  }\n\n  &--h46 {\n    height: 46px;\n    padding: 13px 19px 12px 17px;\n  }\n\n  &--h53 {\n    padding: 9px 50px;\n    height: 53px;\n  }\n}\n",
                    "styleUrl": "../button.component.scss"
                },
                {
                    "data": ".btn-secondary {\n    background: rgba(var(--secondary-color-code),0.05);\n    color: var(--secondary-color);\n    border: none;\n\n    &:hover {\n        background: rgba(var(--secondary-color-code),0.2);\n    }\n\n    &:active {\n        background: rgba(var(--secondary-color-code),0.7);\n        color: var(--text-color);\n    }\n\n    & > svg {\n        margin-right: 20px;\n        fill: var(--secondary-color); \n        opacity: 0.5;\n        fill-opacity: 1;\n        transition: 0.3s;\n    }\n\n    &:active > svg { \n        opacity: 1;\n        fill: var(--text-color);\n    }\n}",
                    "styleUrl": "secondaryButton.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<button \n  [ngStyle]=\"{'background': backgroundColor, 'color': color }\"\n  [ngClass]=\"classes\"\n>\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M17 0H3C2.20435 0 1.44129 0.316071 0.87868 0.87868C0.316071 1.44129 1.80878e-07 2.20435 \n      1.80878e-07 3V4.17C-0.000143207 4.58294 0.0849664 4.99147 0.25 5.37V5.43C0.39128 5.75097 \n      0.591392 6.04266 0.84 6.29L7 12.41V19C6.99966 19.1699 7.04264 19.3372 7.12487 19.4859C7.20711 \n      19.6346 7.32589 19.7599 7.47 19.85C7.62914 19.9486 7.81277 20.0006 8 20C8.15654 19.9991 8.31068 \n      19.9614 8.45 19.89L12.45 17.89C12.6149 17.8069 12.7536 17.6798 12.8507 17.5227C12.9478 17.3656 \n      12.9994 17.1847 13 17V12.41L19.12 6.29C19.3686 6.04266 19.5687 5.75097 19.71 5.43V5.37C19.8888 \n      4.99443 19.9876 4.58578 20 4.17V3C20 2.20435 19.6839 1.44129 19.1213 0.87868C18.5587 0.316071 \n      17.7956 0 17 0ZM11.29 11.29C11.1973 11.3834 11.124 11.4943 11.0742 11.6161C11.0245 11.7379 10.9992 \n      11.8684 11 12V16.38L9 17.38V12C9.00076 11.8684 8.97554 11.7379 8.92577 11.6161C8.87601 11.4943 8.80268\n      11.3834 8.71 11.29L3.41 6H16.59L11.29 11.29ZM18 4H2V3C2 2.73478 2.10536 2.48043 2.29289\n      2.29289C2.48043 2.10536 2.73478 2 3 2H17C17.2652 2 17.5196 2.10536 17.7071 2.29289C17.8946 2.48043 \n      18 2.73478 18 3V4Z\" />\n  </svg>\n      {{ title }}\n  </button>"
        },
        {
            "name": "SideMenuComponent",
            "id": "component-SideMenuComponent-1adef6d841c0e69c73857783c6abb9ed",
            "file": "src/app/molecules/menu/side-menu/side-menu.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-side-menu",
            "styleUrls": [
                "./side-menu.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./side-menu.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "items",
                    "line": 9,
                    "type": "string[]"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "active",
                    "defaultValue": "0",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [
                {
                    "name": "handlClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "any"
                        },
                        {
                            "name": "i",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "i",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-side-menu',\n  templateUrl: './side-menu.component.html',\n  styleUrls: ['./side-menu.component.scss']\n})\nexport class SideMenuComponent implements OnInit {\n  @Input() items: string[];\n\n  active = 0;\n  \n  handlClick(event: any, i: number) {\n    event.preventDefault();\n    this.active = i;\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-side-menu {\n    width: fit-content;\n    border-radius: 12px 30px;\n    background-color: var(--text-color);\n    padding: 32px 72px 12px 32px;\n    box-shadow: 0px 50px 70px rgba(44, 59, 82, 0.15);\n    \n    &__item {\n        width: fit-content;\n        margin-bottom: 20px;\n    }\n  }",
                    "styleUrl": "./side-menu.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<ul class=\"app-side-menu list\">\n    <li \n        class=\"app-side-menu__item\"\n        *ngFor=\"let item of items; let i = index\" \n    >   \n        <app-nav-link\n        [isActive]=\"active === i\"\n        [title]=\"item\" \n        classes=\"nav-link-secondary fs-12-gramm-400\"\n        (click)=\"handlClick($event, i)\"\n        >\n        </app-nav-link>\n    </li>\n</ul>\n\n  \n"
        },
        {
            "name": "simpleButtonComponent",
            "id": "component-simpleButtonComponent-c33720fa521dc42ac741076bf409bb24",
            "file": "src/app/atoms/buttons/simpleButton/simpleButton.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-simple-button",
            "styleUrls": [
                "../button.component.scss",
                "simpleButton.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./simpleButton.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "line": 14,
                    "type": "string"
                },
                {
                    "name": "classes",
                    "line": 13,
                    "type": "string"
                },
                {
                    "name": "color",
                    "line": 15,
                    "type": "string"
                },
                {
                    "name": "title",
                    "line": 12,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-simple-button',\n    templateUrl: './simpleButton.component.html',\n    styleUrls: ['../button.component.scss', 'simpleButton.component.scss'],\n})\n\n\n\nexport class simpleButtonComponent implements OnInit {\n    @Input() title: string;\n    @Input() classes: string;\n    @Input() backgroundColor: string;\n    @Input() color: string;\n\n    ngOnInit() {\n\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".btn-app {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  box-sizing: border-box;\n  outline: none;\n  transition: 0.3s;\n  border-radius: 8px;\n  &--h36 {\n    height: 36px;\n    padding: 10px 18px 8px 18px;\n  }\n  &--asimetric {\n    border-radius: 20px 5px;\n    height: 52px;\n    padding: 18px 41px 18px 44px;\n  }\n\n  &--h46 {\n    height: 46px;\n    padding: 13px 19px 12px 17px;\n  }\n\n  &--h53 {\n    padding: 9px 50px;\n    height: 53px;\n  }\n}\n",
                    "styleUrl": "../button.component.scss"
                },
                {
                    "data": ".btn-danger {\n  color: var(--danger-color);\n  background: inherit;\n  outline: none;\n  border: 1px solid rgba(var(--danger-color-code), 0.2);\n\n  &:hover {\n      cursor: pointer;\n      background: rgba(var(--danger-color-code), 0.3);\n  }\n\n  &:active {\n      background: rgba(var(--danger-color-code), 0.5);\n  }\n}\n\n.btn-transparent {\n  text-transform: uppercase;\n  color: rgba(var(--secondary-color-code), 0.75);\n  border: none;\n  background-color: transparent;\n  position: relative;\n  padding-left: 20px;\n  &:hover {\n      &:after {\n          content: url('../../../../assets/images/back.svg');\n          position: absolute;\n          top: 0;\n          left: 0;\n      }\n  }\n}\n\n.btn-success {\n  background: transparent;\n  border: none;\n  position: relative;\n  color: var(--text-color);\n  z-index: 2;\n  text-transform: uppercase;\n\n  &::before {\n      position: absolute;\n      width: 100%;\n      height: 100%;\n      content: '';\n      background: var(--success-grad-light);\n      z-index: -1;\n      top: 0;\n      left: 0;\n      border-radius: 8px;\n      transition: 0.3s;\n  }\n\n  &::after {\n      position: absolute;\n      width: 100%;\n      height: 100%;\n      content: '';\n      z-index: -1;\n      background: var(--success-grad-dark);\n      top: 0;\n      left: 0;\n      border-radius: 8px;\n      transition: 0.3s;\n      opacity: 0;\n  }\n\n  &:hover {\n      &::before {\n          opacity: 0;\n      }\n\n      &::after {\n          opacity: 1;\n      }\n  }\n\n  &:active {\n      &::before {\n          opacity: 1;\n      }\n\n      &::after {\n          opacity: 0;\n      }\n  }\n}\n",
                    "styleUrl": "simpleButton.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<button\n  [ngClass]=\"classes\"\n  [ngStyle]=\"{ 'background-color': backgroundColor, 'color': color }\"\n>\n  {{ title }}\n</button>\n"
        },
        {
            "name": "StepsComponent",
            "id": "component-StepsComponent-56761d0f122a6be120516be0868a3cf5",
            "file": "src/app/atoms/steps/steps.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-steps",
            "styleUrls": [
                "./steps.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./steps.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "activePoints",
                    "line": 10,
                    "type": "number"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "classes",
                    "defaultValue": "[]",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnChanges } from '@angular/core';\nimport { detectClasses } from './helpers';\n\n@Component({\n  selector: 'app-steps',\n  templateUrl: './steps.component.html',\n  styleUrls: ['./steps.component.scss']\n})\nexport class StepsComponent implements OnChanges {\n  @Input() activePoints: number;\n  classes=[];\n\n  constructor() { }\n\n  ngOnChanges(): void {\n    this.classes = detectClasses(this.activePoints);\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-steps {\n    display: flex;\n    width: 100%;\n    height: 47px;\n    justify-content: space-between;\n    align-items: flex-start;\n    &__label {\n        position: absolute;\n        top: 200%;\n    }\n\n    &__line {\n        height: 1px;\n        width: 49%;\n        z-index: 3;\n        margin-top: 3px;\n        background-color: var(--text-color);\n      \n        &.active {\n          background: var(--success-grad-light);\n        }\n      }\n\n    &__circle {\n        height: 8px;\n        width: 8px;\n        border-radius: 50%;\n        position: relative;\n        z-index: 2;\n        color: rgba(var(--secondary-color-code), 0.5);\n  \n        & > .app-steps__dot {\n            background: rgba(var(--secondary-color-code), 0.5);\n            height: 8px;\n            width: 8px;\n            border-radius: 50%;\n        }\n\n        &.active {\n            color: var(--secondary-color);\n        \n            & > .app-steps__dot {\n              background: var(--success-grad-light);\n            }\n          }\n        &::before {\n            content: \"\";\n            border-radius: 50%;\n            top: -3px;\n            left: -3px;\n            position: absolute;\n            height: 14px;\n            width: 14px;\n            z-index: -1;\n            background: var(--text-color)\n          }\n    }\n  \n  }\n\n.text-al-left {\n    text-align: left;\n}\n\n.text-al-center {\n    text-align: center;\n    left: -18px;\n}\n\n.text-al-right {\n    text-align: right;\n    left: -50px;\n}",
                    "styleUrl": "./steps.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 11
            },
            "implements": [
                "OnChanges"
            ],
            "templateData": "<div class=\"app-steps fs-12-sofia-400\">\n    <div [ngClass]=\"classes[0]\">\n        <div class=\"app-steps__dot\"></div>\n        <div class=\"app-steps__label text-al-left\">Add your information</div>\n    </div>\n    <div [ngClass]=\"classes[1]\"></div>\n    <div [ngClass]=\"classes[2]\">\n        <div class=\"app-steps__dot\"></div>\n        <div class=\"app-steps__label text-al-center\">Add domain</div>\n    </div>\n    <div [ngClass]=\"classes[3]\"></div>\n    <div [ngClass]=\"classes[4]\">\n        <div class=\"app-steps__dot\"></div>\n        <div class=\"app-steps__label text-al-right\">Select coverage</div>\n    </div>\n</div>\n"
        },
        {
            "name": "TextComponent",
            "id": "component-TextComponent-5240852f5f79154599e5039e84db7905",
            "file": "src/app/text/text.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-text",
            "styleUrls": [
                "./text.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./text.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-text',\n  templateUrl: './text.component.html',\n  styleUrls: ['./text.component.scss']\n})\nexport class TextComponent {\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./text.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<p>text works!</p>\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "CardComponent"
                        },
                        {
                            "name": "DateMenuComponent"
                        },
                        {
                            "name": "FormScreenFirstComponent"
                        },
                        {
                            "name": "FormScreenFourthComponent"
                        },
                        {
                            "name": "FormScreenSecondComponent"
                        },
                        {
                            "name": "FormScreenThirdComponent"
                        },
                        {
                            "name": "IconContainerComponent"
                        },
                        {
                            "name": "SideMenuComponent"
                        },
                        {
                            "name": "StepsComponent"
                        },
                        {
                            "name": "largeButtonComponent"
                        },
                        {
                            "name": "navLinkComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "Danger",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/simpleButton/simpleButton.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Date",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/menu/date-menu/date-menu.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "type": "object",
                "defaultValue": "{\n  production: false\n}"
            },
            {
                "name": "First",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/form-screens/form-screen-first/form-screen-first.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Fourth",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/form-screens/form-screen-fourth/form-screen-fourth.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Gradient",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/gradientButton/gradientButton.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Highlited",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/navLink/navLink.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Info",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/infoButton/infoButton.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/largeButton/largeButton.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Light",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/lightButton/lightButton.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Main",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/navLink/navLink.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/primaryButton/primaryButton.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/card/card.stories.ts",
                "type": "object",
                "defaultValue": "{\n  backgroundColor: { control: 'color' },\n  color: { control: 'color' },\n  src: { control: 'text'},\n  title: { control: 'text'},\n  text: { control: 'text' },\n  isActive: { control: 'boolean'}\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/iconContainer/iconContainer.stories.ts",
                "type": "object",
                "defaultValue": "{\n  backgroundColor: { control: 'color' },\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/navLink/navLink.stories.ts",
                "type": "object",
                "defaultValue": "{\n  title: { control: 'text' },\n  isActive: { control: 'boolean'}\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/steps/steps.stories.ts",
                "type": "object",
                "defaultValue": "{\n  activePoints: { control: 'number'}\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/searchItem/searchItem.stories.ts",
                "type": "object",
                "defaultValue": "{\n  title: { control: 'text' },\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/infoButton/infoButton.stories.ts",
                "type": "object",
                "defaultValue": "{\n  backgroundColor: { control: 'color' },\n  color: { control: 'color' },\n  title: { control: 'text'},\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/largeButton/largeButton.stories.ts",
                "type": "object",
                "defaultValue": "{\n  backgroundColor: { control: 'color' },\n  color: { control: 'color' },\n  title: { control: 'text'},\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/gradientButton/gradientButton.stories.ts",
                "type": "object",
                "defaultValue": "{\n  backgroundColor: { control: 'color' },\n  color: { control: 'color' },\n  title: { control: 'text'},\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/lightButton/lightButton.stories.ts",
                "type": "object",
                "defaultValue": "{\n  backgroundColor: { control: 'color' },\n  color: { control: 'color' },\n  title: { control: 'text'},\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/primaryButton/primaryButton.stories.ts",
                "type": "object",
                "defaultValue": "{\n  backgroundColor: { control: 'color' },\n  title: { control: 'text'},\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/secondaryButton/secondaryButton.stories.ts",
                "type": "object",
                "defaultValue": "{\n  backgroundColor: { control: 'color' },\n  color: { control: 'color' },\n  title: { control: 'text'},\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/simpleButton/simpleButton.stories.ts",
                "type": "object",
                "defaultValue": "{\n  backgroundColor: { control: 'color' },\n  color: { control: 'color' },\n  title: { control: 'text'},\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/inputs/formInput/formInput.stories.ts",
                "type": "object",
                "defaultValue": "{\n  backgroundColor: { control: 'color' },\n  color: { control: 'color' },\n  placeholder: { control: 'text'},\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/form-screens/form-screen-first/form-screen-first.stories.ts",
                "type": "object",
                "defaultValue": "{\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/form-screens/form-screen-fourth/form-screen-fourth.stories.ts",
                "type": "object",
                "defaultValue": "{\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/form-screens/form-screen-third/form-screen-third.stories.ts",
                "type": "object",
                "defaultValue": "{\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/form-screens/form-screen-second/form-screen-second.stories.ts",
                "type": "object",
                "defaultValue": "{\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/menu/side-menu/side-menu.stories.ts",
                "type": "object",
                "defaultValue": "{\n  backgroundColor: { control: 'color' },\n  items: { control: 'array'}\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/menu/date-menu/date-menu.stories.ts",
                "type": "object",
                "defaultValue": "{\n  backgroundColor: { control: 'color' },\n  items: { control: 'array'}\n}"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "type": "literal type"
            },
            {
                "name": "Second",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/form-screens/form-screen-second/form-screen-second.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/navLink/navLink.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/secondaryButton/secondaryButton.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Side",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/menu/side-menu/side-menu.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/card/card.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/iconContainer/iconContainer.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/steps/steps.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/searchItem/searchItem.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/inputs/formInput/formInput.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Success",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/simpleButton/simpleButton.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "type": "Story<Button>",
                "defaultValue": "(args: Button) => ({\n  component: Button,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/card/card.stories.ts",
                "type": "Story<CardComponent>",
                "defaultValue": "(args: CardComponent) => ({\n    component: CardComponent,\n    props: args,\n  })"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/iconContainer/iconContainer.stories.ts",
                "type": "Story<IconContainerComponent>",
                "defaultValue": "(args: IconContainerComponent) => ({\n    component: IconContainerComponent,\n    props: args,\n  })"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/navLink/navLink.stories.ts",
                "type": "Story<navLinkComponent>",
                "defaultValue": "(args: navLinkComponent) => ({\n    component: navLinkComponent,\n    props: args,\n  })"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/steps/steps.stories.ts",
                "type": "Story<StepsComponent>",
                "defaultValue": "(args: StepsComponent) => ({\n    component: StepsComponent,\n    props: args,\n  })"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/searchItem/searchItem.stories.ts",
                "type": "Story<searchItemComponent>",
                "defaultValue": "(args: searchItemComponent) => ({\n    component: searchItemComponent,\n    props: args,\n  })"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/infoButton/infoButton.stories.ts",
                "type": "Story<infoButtonComponent>",
                "defaultValue": "(args: infoButtonComponent) => ({\n    component: infoButtonComponent,\n    props: args,\n  })"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/largeButton/largeButton.stories.ts",
                "type": "Story<largeButtonComponent>",
                "defaultValue": "(args: largeButtonComponent) => ({\n    component: largeButtonComponent,\n    props: args,\n  })"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/gradientButton/gradientButton.stories.ts",
                "type": "Story<gradientButtonComponent>",
                "defaultValue": "(args: gradientButtonComponent) => ({\n    component: gradientButtonComponent,\n    props: args,\n  })"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/lightButton/lightButton.stories.ts",
                "type": "Story<lightButtonComponent>",
                "defaultValue": "(args: lightButtonComponent) => ({\n    component: lightButtonComponent,\n    props: args,\n  })"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/primaryButton/primaryButton.stories.ts",
                "type": "Story<primaryButtonComponent>",
                "defaultValue": "(args: primaryButtonComponent) => ({\n    component: primaryButtonComponent,\n    props: args,\n  })"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/secondaryButton/secondaryButton.stories.ts",
                "type": "Story<secondaryButtonComponent>",
                "defaultValue": "(args: secondaryButtonComponent) => ({\n    component: secondaryButtonComponent,\n    props: args,\n  })"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/simpleButton/simpleButton.stories.ts",
                "type": "Story<simpleButtonComponent>",
                "defaultValue": "(args: simpleButtonComponent) => ({\n    component: simpleButtonComponent,\n    props: args,\n  })"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/inputs/formInput/formInput.stories.ts",
                "type": "Story<formInputComponent>",
                "defaultValue": "(args: formInputComponent) => ({\n    component: formInputComponent,\n    props: args,\n  })"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/form-screens/form-screen-first/form-screen-first.stories.ts",
                "type": "Story<FormScreenFirstComponent>",
                "defaultValue": "(args: FormScreenFirstComponent) => ({\n    component: FormScreenFirstComponent,\n    props: args,\n  })"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/form-screens/form-screen-fourth/form-screen-fourth.stories.ts",
                "type": "Story<FormScreenFourthComponent>",
                "defaultValue": "(args: FormScreenFourthComponent) => ({\n    component: FormScreenFourthComponent,\n    props: args,\n  })"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/form-screens/form-screen-third/form-screen-third.stories.ts",
                "type": "Story<FormScreenThirdComponent>",
                "defaultValue": "(args: FormScreenThirdComponent) => ({\n    component: FormScreenThirdComponent,\n    props: args,\n  })"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/form-screens/form-screen-second/form-screen-second.stories.ts",
                "type": "Story<FormScreenSecondComponent>",
                "defaultValue": "(args: FormScreenSecondComponent) => ({\n    component: FormScreenSecondComponent,\n    props: args,\n  })"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/menu/side-menu/side-menu.stories.ts",
                "type": "Story<SideMenuComponent>",
                "defaultValue": "(args: SideMenuComponent) => ({\n    component: SideMenuComponent,\n    props: args,\n  })"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/menu/date-menu/date-menu.stories.ts",
                "type": "Story<DateMenuComponent>",
                "defaultValue": "(args: DateMenuComponent) => ({\n    component: DateMenuComponent,\n    props: args,\n  })"
            },
            {
                "name": "Third",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/form-screens/form-screen-third/form-screen-third.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Transparent",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/simpleButton/simpleButton.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "WithIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/searchItem/searchItem.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "WithIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/inputs/formInput/formInput.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            }
        ],
        "functions": [
            {
                "name": "detectClasses",
                "file": "src/app/atoms/steps/helpers.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "description": "",
                "args": [
                    {
                        "name": "num"
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "num",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        ],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "type": "literal type"
                }
            ],
            "src/app/atoms/buttons/simpleButton/simpleButton.stories.ts": [
                {
                    "name": "Danger",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/simpleButton/simpleButton.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/simpleButton/simpleButton.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  backgroundColor: { control: 'color' },\n  color: { control: 'color' },\n  title: { control: 'text'},\n}"
                },
                {
                    "name": "Success",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/simpleButton/simpleButton.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/simpleButton/simpleButton.stories.ts",
                    "type": "Story<simpleButtonComponent>",
                    "defaultValue": "(args: simpleButtonComponent) => ({\n    component: simpleButtonComponent,\n    props: args,\n  })"
                },
                {
                    "name": "Transparent",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/simpleButton/simpleButton.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/app/molecules/menu/date-menu/date-menu.stories.ts": [
                {
                    "name": "Date",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/menu/date-menu/date-menu.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/menu/date-menu/date-menu.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  backgroundColor: { control: 'color' },\n  items: { control: 'array'}\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/menu/date-menu/date-menu.stories.ts",
                    "type": "Story<DateMenuComponent>",
                    "defaultValue": "(args: DateMenuComponent) => ({\n    component: DateMenuComponent,\n    props: args,\n  })"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "type": "object",
                    "defaultValue": "{\n  production: false\n}"
                }
            ],
            "src/app/molecules/form-screens/form-screen-first/form-screen-first.stories.ts": [
                {
                    "name": "First",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/form-screens/form-screen-first/form-screen-first.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/form-screens/form-screen-first/form-screen-first.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/form-screens/form-screen-first/form-screen-first.stories.ts",
                    "type": "Story<FormScreenFirstComponent>",
                    "defaultValue": "(args: FormScreenFirstComponent) => ({\n    component: FormScreenFirstComponent,\n    props: args,\n  })"
                }
            ],
            "src/app/molecules/form-screens/form-screen-fourth/form-screen-fourth.stories.ts": [
                {
                    "name": "Fourth",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/form-screens/form-screen-fourth/form-screen-fourth.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/form-screens/form-screen-fourth/form-screen-fourth.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/form-screens/form-screen-fourth/form-screen-fourth.stories.ts",
                    "type": "Story<FormScreenFourthComponent>",
                    "defaultValue": "(args: FormScreenFourthComponent) => ({\n    component: FormScreenFourthComponent,\n    props: args,\n  })"
                }
            ],
            "src/app/atoms/buttons/gradientButton/gradientButton.stories.ts": [
                {
                    "name": "Gradient",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/gradientButton/gradientButton.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/gradientButton/gradientButton.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  backgroundColor: { control: 'color' },\n  color: { control: 'color' },\n  title: { control: 'text'},\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/gradientButton/gradientButton.stories.ts",
                    "type": "Story<gradientButtonComponent>",
                    "defaultValue": "(args: gradientButtonComponent) => ({\n    component: gradientButtonComponent,\n    props: args,\n  })"
                }
            ],
            "src/app/atoms/navLink/navLink.stories.ts": [
                {
                    "name": "Highlited",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/navLink/navLink.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Main",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/navLink/navLink.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/navLink/navLink.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  title: { control: 'text' },\n  isActive: { control: 'boolean'}\n}"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/navLink/navLink.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/navLink/navLink.stories.ts",
                    "type": "Story<navLinkComponent>",
                    "defaultValue": "(args: navLinkComponent) => ({\n    component: navLinkComponent,\n    props: args,\n  })"
                }
            ],
            "src/app/atoms/buttons/infoButton/infoButton.stories.ts": [
                {
                    "name": "Info",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/infoButton/infoButton.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/infoButton/infoButton.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  backgroundColor: { control: 'color' },\n  color: { control: 'color' },\n  title: { control: 'text'},\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/infoButton/infoButton.stories.ts",
                    "type": "Story<infoButtonComponent>",
                    "defaultValue": "(args: infoButtonComponent) => ({\n    component: infoButtonComponent,\n    props: args,\n  })"
                }
            ],
            "src/stories/Button.stories.ts": [
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "type": "Story<Button>",
                    "defaultValue": "(args: Button) => ({\n  component: Button,\n  props: args,\n})"
                }
            ],
            "src/app/atoms/buttons/largeButton/largeButton.stories.ts": [
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/largeButton/largeButton.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/largeButton/largeButton.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  backgroundColor: { control: 'color' },\n  color: { control: 'color' },\n  title: { control: 'text'},\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/largeButton/largeButton.stories.ts",
                    "type": "Story<largeButtonComponent>",
                    "defaultValue": "(args: largeButtonComponent) => ({\n    component: largeButtonComponent,\n    props: args,\n  })"
                }
            ],
            "src/app/atoms/buttons/lightButton/lightButton.stories.ts": [
                {
                    "name": "Light",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/lightButton/lightButton.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/lightButton/lightButton.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  backgroundColor: { control: 'color' },\n  color: { control: 'color' },\n  title: { control: 'text'},\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/lightButton/lightButton.stories.ts",
                    "type": "Story<lightButtonComponent>",
                    "defaultValue": "(args: lightButtonComponent) => ({\n    component: lightButtonComponent,\n    props: args,\n  })"
                }
            ],
            "src/app/atoms/buttons/primaryButton/primaryButton.stories.ts": [
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/primaryButton/primaryButton.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/primaryButton/primaryButton.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  backgroundColor: { control: 'color' },\n  title: { control: 'text'},\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/primaryButton/primaryButton.stories.ts",
                    "type": "Story<primaryButtonComponent>",
                    "defaultValue": "(args: primaryButtonComponent) => ({\n    component: primaryButtonComponent,\n    props: args,\n  })"
                }
            ],
            "src/app/atoms/card/card.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/card/card.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  backgroundColor: { control: 'color' },\n  color: { control: 'color' },\n  src: { control: 'text'},\n  title: { control: 'text'},\n  text: { control: 'text' },\n  isActive: { control: 'boolean'}\n}"
                },
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/card/card.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/card/card.stories.ts",
                    "type": "Story<CardComponent>",
                    "defaultValue": "(args: CardComponent) => ({\n    component: CardComponent,\n    props: args,\n  })"
                }
            ],
            "src/app/atoms/iconContainer/iconContainer.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/iconContainer/iconContainer.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  backgroundColor: { control: 'color' },\n}"
                },
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/iconContainer/iconContainer.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/iconContainer/iconContainer.stories.ts",
                    "type": "Story<IconContainerComponent>",
                    "defaultValue": "(args: IconContainerComponent) => ({\n    component: IconContainerComponent,\n    props: args,\n  })"
                }
            ],
            "src/app/atoms/steps/steps.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/steps/steps.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  activePoints: { control: 'number'}\n}"
                },
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/steps/steps.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/steps/steps.stories.ts",
                    "type": "Story<StepsComponent>",
                    "defaultValue": "(args: StepsComponent) => ({\n    component: StepsComponent,\n    props: args,\n  })"
                }
            ],
            "src/app/atoms/searchItem/searchItem.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/searchItem/searchItem.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  title: { control: 'text' },\n}"
                },
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/searchItem/searchItem.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/searchItem/searchItem.stories.ts",
                    "type": "Story<searchItemComponent>",
                    "defaultValue": "(args: searchItemComponent) => ({\n    component: searchItemComponent,\n    props: args,\n  })"
                },
                {
                    "name": "WithIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/searchItem/searchItem.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/app/atoms/buttons/secondaryButton/secondaryButton.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/secondaryButton/secondaryButton.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  backgroundColor: { control: 'color' },\n  color: { control: 'color' },\n  title: { control: 'text'},\n}"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/secondaryButton/secondaryButton.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/secondaryButton/secondaryButton.stories.ts",
                    "type": "Story<secondaryButtonComponent>",
                    "defaultValue": "(args: secondaryButtonComponent) => ({\n    component: secondaryButtonComponent,\n    props: args,\n  })"
                }
            ],
            "src/app/atoms/inputs/formInput/formInput.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/inputs/formInput/formInput.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  backgroundColor: { control: 'color' },\n  color: { control: 'color' },\n  placeholder: { control: 'text'},\n}"
                },
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/inputs/formInput/formInput.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/inputs/formInput/formInput.stories.ts",
                    "type": "Story<formInputComponent>",
                    "defaultValue": "(args: formInputComponent) => ({\n    component: formInputComponent,\n    props: args,\n  })"
                },
                {
                    "name": "WithIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/inputs/formInput/formInput.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/app/molecules/form-screens/form-screen-third/form-screen-third.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/form-screens/form-screen-third/form-screen-third.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/form-screens/form-screen-third/form-screen-third.stories.ts",
                    "type": "Story<FormScreenThirdComponent>",
                    "defaultValue": "(args: FormScreenThirdComponent) => ({\n    component: FormScreenThirdComponent,\n    props: args,\n  })"
                },
                {
                    "name": "Third",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/form-screens/form-screen-third/form-screen-third.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/app/molecules/form-screens/form-screen-second/form-screen-second.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/form-screens/form-screen-second/form-screen-second.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n}"
                },
                {
                    "name": "Second",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/form-screens/form-screen-second/form-screen-second.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/form-screens/form-screen-second/form-screen-second.stories.ts",
                    "type": "Story<FormScreenSecondComponent>",
                    "defaultValue": "(args: FormScreenSecondComponent) => ({\n    component: FormScreenSecondComponent,\n    props: args,\n  })"
                }
            ],
            "src/app/molecules/menu/side-menu/side-menu.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/menu/side-menu/side-menu.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  backgroundColor: { control: 'color' },\n  items: { control: 'array'}\n}"
                },
                {
                    "name": "Side",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/menu/side-menu/side-menu.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/menu/side-menu/side-menu.stories.ts",
                    "type": "Story<SideMenuComponent>",
                    "defaultValue": "(args: SideMenuComponent) => ({\n    component: SideMenuComponent,\n    props: args,\n  })"
                }
            ]
        },
        "groupedFunctions": {
            "src/app/atoms/steps/helpers.ts": [
                {
                    "name": "detectClasses",
                    "file": "src/app/atoms/steps/helpers.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "description": "",
                    "args": [
                        {
                            "name": "num"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "num",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "e2e/src/app.po.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AppPage",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/gradientButton/gradientButton.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "gradientButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/gradientButton/gradientButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Gradient",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/gradientButton/gradientButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/gradientButton/gradientButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/infoButton/infoButton.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "infoButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/infoButton/infoButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Info",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/infoButton/infoButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/infoButton/infoButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/largeButton/largeButton.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "largeButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/largeButton/largeButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/largeButton/largeButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/largeButton/largeButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/lightButton/lightButton.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "lightButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/lightButton/lightButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Light",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/lightButton/lightButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/lightButton/lightButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/primaryButton/primaryButton.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "primaryButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/primaryButton/primaryButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/primaryButton/primaryButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/primaryButton/primaryButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/secondaryButton/secondaryButton.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "secondaryButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/secondaryButton/secondaryButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/secondaryButton/secondaryButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/secondaryButton/secondaryButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/simpleButton/simpleButton.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "simpleButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/simpleButton/simpleButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Danger",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/simpleButton/simpleButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/simpleButton/simpleButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Success",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/simpleButton/simpleButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/simpleButton/simpleButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Transparent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/card/card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/card/card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/card/card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/card/card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/iconContainer/iconContainer.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IconContainerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/iconContainer/iconContainer.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/iconContainer/iconContainer.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/iconContainer/iconContainer.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/formInput/formInput.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "formInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/formInput/formInput.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/formInput/formInput.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/formInput/formInput.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/formInput/formInput.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/navLink/navLink.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "navLinkComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/navLink/navLink.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Highlited",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/navLink/navLink.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Main",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/navLink/navLink.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/navLink/navLink.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/navLink/navLink.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/searchItem/searchItem.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "searchItemComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/searchItem/searchItem.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/searchItem/searchItem.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/searchItem/searchItem.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/searchItem/searchItem.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/steps/helpers.ts",
                "type": "function",
                "linksubtype": "function",
                "name": "detectClasses",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/steps/steps.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StepsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/steps/steps.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/steps/steps.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/steps/steps.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/form-screens/form-screen-first/form-screen-first.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormScreenFirstComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/form-screens/form-screen-first/form-screen-first.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "First",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/form-screens/form-screen-first/form-screen-first.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/form-screens/form-screen-first/form-screen-first.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/form-screens/form-screen-fourth/form-screen-fourth.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormScreenFourthComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/form-screens/form-screen-fourth/form-screen-fourth.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Fourth",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/form-screens/form-screen-fourth/form-screen-fourth.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/form-screens/form-screen-fourth/form-screen-fourth.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/form-screens/form-screen-second/form-screen-second.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormScreenSecondComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/form-screens/form-screen-second/form-screen-second.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/form-screens/form-screen-second/form-screen-second.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Second",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/form-screens/form-screen-second/form-screen-second.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/form-screens/form-screen-third/form-screen-third.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormScreenThirdComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/form-screens/form-screen-third/form-screen-third.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/form-screens/form-screen-third/form-screen-third.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/form-screens/form-screen-third/form-screen-third.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Third",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/menu/date-menu/date-menu.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DateMenuComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/menu/date-menu/date-menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Date",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/menu/date-menu/date-menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/menu/date-menu/date-menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/menu/side-menu/side-menu.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SideMenuComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/menu/side-menu/side-menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/menu/side-menu/side-menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Side",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/menu/side-menu/side-menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/text/text.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TextComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 55,
                "coverageCount": "5/9",
                "status": "good"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}