{
    "pipes": [],
    "interfaces": [
        {
            "name": "AdComponent",
            "id": "interface-AdComponent-116e916645e0e627b3da7309f4a89cd9",
            "file": "src/app/molecules/customized-element/add-dynamic-component/add-dynamic.component.ts",
            "type": "interface",
            "sourceCode": "import { Component, Input, OnInit, ViewChild, ComponentFactoryResolver, OnDestroy, OnChanges, EventEmitter, Output } from '@angular/core';\n\nimport { AddDirective } from './add.directive';\nimport { AddItem } from './add-item';\n\nexport interface AdComponent {\n  data: any;\n  handler: any\n}\n\n@Component({\n  selector: 'app-add-dynamic',\n  template: `\n              <div class=\"add-dynamic-component\">\n                <ng-template adHost></ng-template>\n              </div>\n            `\n})\n\nexport class AddComponent implements OnInit {\n  @Input() component: AddItem;\n  @Output() handler: EventEmitter<any> = new EventEmitter();\n\n  currentAdIndex = -1;\n  @ViewChild(AddDirective, {static: true}) adHost: AddDirective;\n  interval: any;\n\n  constructor(private componentFactoryResolver: ComponentFactoryResolver) { }\n\n  loadComponent() {\n    const adItem = this.component;\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(adItem.component);\n    const viewContainerRef = this.adHost.viewContainerRef;\n    const componentRef = viewContainerRef.createComponent<AdComponent>(componentFactory);\n    componentRef.instance.data = adItem.dataFromParent;\n    componentRef.instance.handler.subscribe(val => {\n      this.handler.emit(val);\n    });\n    componentRef.changeDetectorRef.detectChanges();\n    return componentRef\n  }\n\n  ngOnInit() {\n    this.loadComponent();\n  }\n}",
            "properties": [
                {
                    "name": "data",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "handler",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "Countries",
            "id": "interface-Countries-021dc9d0989eaf94fc4b73697d1406ab",
            "file": "src/app/atoms/charts/map-chart/map-chart.component.ts",
            "type": "interface",
            "sourceCode": "import { AfterViewInit, Component, ElementRef, HostListener, Input, OnChanges, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\nimport * as am4core from '@amcharts/amcharts4/core';\nimport * as am4maps from \"@amcharts/amcharts4/maps\";\nimport am4geodata_worldLow from \"@amcharts/amcharts4-geodata/worldLow\";\nimport { \n  AfricaCodes, AustraliaCodes, NorthAmericaCodes, SouthAmericaCodes, EuropeCodes, AsiaCodes \n} from './countriesCodes';\n\ninterface Country {\n  id: string, \n  value: number, \n  name: string \n}\n\ninterface Countries {\n  europe: Country[],\n  northAmerica: Country[],\n  southAmerica: Country[],\n  asia: Country[],\n  australia: Country[],\n  africa: Country[]\n}\n\n@Component({\n  selector: 'app-map-chart',\n  templateUrl: './map-chart.component.html',\n  styleUrls: ['./map-chart.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\n\nexport class MapChartComponent implements OnInit, OnChanges, AfterViewInit {\n  @Input() countriesData: Countries;\n\n  chart;\n  polygonSeries;\n  polygonTemplate;\n  activeCountry: string = '';\n  allCountriesData: Country[] = [];\n  isTipVisible: boolean = false;\n  tipsTop: number = 0;\n  tipsLeft: number = 0;\n  tipsData: Country[] = [];\n  mapHeight: number;\n\n  @ViewChild('mapChart') map: ElementRef;\n  \n  @HostListener('window:resize', ['$event'])\n  onResize(event: any) {\n    const height = this.map.nativeElement.clientWidth * 0.7;\n    this.mapHeight = height > 500 ? 500 : height;\n  }\n\n  createChart(region: string) {  \n    this.chart = null\n    this.chart = am4core.create(\"chartdiv\", am4maps.MapChart)\n    this.chart.geodata = am4geodata_worldLow;\n    this.chart.projection = new am4maps.projections.Miller();\n    this.polygonSeries = this.chart.series.push(new am4maps.MapPolygonSeries());\n    this.polygonSeries.useGeodata = true;\n    this.polygonTemplate = this.polygonSeries.mapPolygons.template;\n    this.polygonTemplate.tooltipText = \"\";\n    this.polygonTemplate.fill = am4core.color(\"rgba(1, 25, 73, 0.2)\")\n    const hs = this.polygonTemplate.states.create(\"hover\");\n    hs.properties.fill = am4core.color(\"rgb(22, 97, 60)\");\n\n    switch(region) {\n      case 'World': \n        this.polygonSeries.exclude = [\"AQ\"]\n        this.polygonSeries.data = [...this.allCountriesData];\n        this.tipsData = [...this.allCountriesData];\n      break;\n      case 'Europe': \n        this.polygonSeries.include = [...EuropeCodes];\n        this.polygonSeries.data = [...this.countriesData.europe];\n        this.tipsData = [...this.countriesData.europe];\n        this.chart.deltaLongitude = -120;\n        this.chart.homeZoomLevel = 1.3;\n      break;\n      case 'Asia': \n        this.polygonSeries.include = [...AsiaCodes];\n        this.polygonSeries.data = [...this.countriesData.asia];\n        this.tipsData = [...this.countriesData.asia];\n        this.chart.deltaLongitude = -130;\n      break;\n      case 'North America': \n        this.polygonSeries.include = [...NorthAmericaCodes];\n        this.polygonSeries.data = [...this.countriesData.northAmerica];\n        this.tipsData = [...this.countriesData.northAmerica];\n      break;\n      case 'South America': \n        this.polygonSeries.include = [...SouthAmericaCodes];\n        this.polygonSeries.data = [...this.countriesData.southAmerica];\n        this.tipsData = [...this.countriesData.southAmerica];\n      break;\n      case 'Australia': \n        this.polygonSeries.include = [...AustraliaCodes];\n        this.polygonSeries.data = [...this.countriesData.australia];\n        this.tipsData = [...this.countriesData.australia];\n        this.chart.deltaLongitude = -160;\n        this.chart.homeZoomLevel = 2;\n      break;\n      case 'Africa': \n        this.polygonSeries.include = [...AfricaCodes];\n        this.polygonSeries.data = [...this.countriesData.africa];\n        this.tipsData = [...this.countriesData.africa];\n      break;\n    }\n\n    this.polygonSeries.data.forEach(element => element.fill = am4core.color(\"rgba(1, 25, 73, 0.75)\"));\n    this.polygonTemplate.propertyFields.fill = \"fill\";\n \n    const setActive = (value, top, left) => {\n      const isCountryIncludedToTheList = this.allCountriesData.findIndex(country => country.id === value);\n      if (isCountryIncludedToTheList !== -1) {\n        this.activeCountry = value;\n        this.isTipVisible = true;\n        this.tipsTop = top - 24 - (16 * this.tipsData.length + 8 * (this.tipsData.length + 1)) - 10;\n        if (left - 110 > 0) {\n          if (left + 110 > this.map.nativeElement.clientWidth) {\n            this.tipsLeft = this.map.nativeElement.clientWidth - 220;\n          } else {\n            this.tipsLeft = left - 110;\n          }\n        } else {\n          this.tipsLeft = 0;\n        }\n      }\n    }\n\n    const setIsTipsVisible = (value) => {\n      this.isTipVisible = value;\n    }\n\n    this.polygonTemplate.events.on(\"over\", function(ev) {\n      const active = ev.target.dataItem.dataContext;\n      setActive(active.id, ev.event.pageY,ev.event.pageX);\n    })\n\n    this.polygonTemplate.events.on(\"out\", function(ev) {\n      setIsTipsVisible(false);\n    })\n  }\n\n  ngAfterViewInit() {\n    const height = this.map.nativeElement.clientWidth * 0.7;\n    this.mapHeight = height > 500 ? 500 : height;\n  }\n\n  ngOnChanges() {\n    this.createChart('World');\n  }\n\n  ngOnInit() {\n    let formattedCountriesData = [];\n    Object.values(this.countriesData).forEach(region => { \n      formattedCountriesData = [...formattedCountriesData,...region]\n    })\n    this.allCountriesData = formattedCountriesData;\n    this.createChart('World');\n  }\n}\n",
            "properties": [
                {
                    "name": "africa",
                    "type": "Country[]",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "asia",
                    "type": "Country[]",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "australia",
                    "type": "Country[]",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "europe",
                    "type": "Country[]",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "northAmerica",
                    "type": "Country[]",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "southAmerica",
                    "type": "Country[]",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "Country",
            "id": "interface-Country-021dc9d0989eaf94fc4b73697d1406ab",
            "file": "src/app/atoms/charts/map-chart/map-chart.component.ts",
            "type": "interface",
            "sourceCode": "import { AfterViewInit, Component, ElementRef, HostListener, Input, OnChanges, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\nimport * as am4core from '@amcharts/amcharts4/core';\nimport * as am4maps from \"@amcharts/amcharts4/maps\";\nimport am4geodata_worldLow from \"@amcharts/amcharts4-geodata/worldLow\";\nimport { \n  AfricaCodes, AustraliaCodes, NorthAmericaCodes, SouthAmericaCodes, EuropeCodes, AsiaCodes \n} from './countriesCodes';\n\ninterface Country {\n  id: string, \n  value: number, \n  name: string \n}\n\ninterface Countries {\n  europe: Country[],\n  northAmerica: Country[],\n  southAmerica: Country[],\n  asia: Country[],\n  australia: Country[],\n  africa: Country[]\n}\n\n@Component({\n  selector: 'app-map-chart',\n  templateUrl: './map-chart.component.html',\n  styleUrls: ['./map-chart.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\n\nexport class MapChartComponent implements OnInit, OnChanges, AfterViewInit {\n  @Input() countriesData: Countries;\n\n  chart;\n  polygonSeries;\n  polygonTemplate;\n  activeCountry: string = '';\n  allCountriesData: Country[] = [];\n  isTipVisible: boolean = false;\n  tipsTop: number = 0;\n  tipsLeft: number = 0;\n  tipsData: Country[] = [];\n  mapHeight: number;\n\n  @ViewChild('mapChart') map: ElementRef;\n  \n  @HostListener('window:resize', ['$event'])\n  onResize(event: any) {\n    const height = this.map.nativeElement.clientWidth * 0.7;\n    this.mapHeight = height > 500 ? 500 : height;\n  }\n\n  createChart(region: string) {  \n    this.chart = null\n    this.chart = am4core.create(\"chartdiv\", am4maps.MapChart)\n    this.chart.geodata = am4geodata_worldLow;\n    this.chart.projection = new am4maps.projections.Miller();\n    this.polygonSeries = this.chart.series.push(new am4maps.MapPolygonSeries());\n    this.polygonSeries.useGeodata = true;\n    this.polygonTemplate = this.polygonSeries.mapPolygons.template;\n    this.polygonTemplate.tooltipText = \"\";\n    this.polygonTemplate.fill = am4core.color(\"rgba(1, 25, 73, 0.2)\")\n    const hs = this.polygonTemplate.states.create(\"hover\");\n    hs.properties.fill = am4core.color(\"rgb(22, 97, 60)\");\n\n    switch(region) {\n      case 'World': \n        this.polygonSeries.exclude = [\"AQ\"]\n        this.polygonSeries.data = [...this.allCountriesData];\n        this.tipsData = [...this.allCountriesData];\n      break;\n      case 'Europe': \n        this.polygonSeries.include = [...EuropeCodes];\n        this.polygonSeries.data = [...this.countriesData.europe];\n        this.tipsData = [...this.countriesData.europe];\n        this.chart.deltaLongitude = -120;\n        this.chart.homeZoomLevel = 1.3;\n      break;\n      case 'Asia': \n        this.polygonSeries.include = [...AsiaCodes];\n        this.polygonSeries.data = [...this.countriesData.asia];\n        this.tipsData = [...this.countriesData.asia];\n        this.chart.deltaLongitude = -130;\n      break;\n      case 'North America': \n        this.polygonSeries.include = [...NorthAmericaCodes];\n        this.polygonSeries.data = [...this.countriesData.northAmerica];\n        this.tipsData = [...this.countriesData.northAmerica];\n      break;\n      case 'South America': \n        this.polygonSeries.include = [...SouthAmericaCodes];\n        this.polygonSeries.data = [...this.countriesData.southAmerica];\n        this.tipsData = [...this.countriesData.southAmerica];\n      break;\n      case 'Australia': \n        this.polygonSeries.include = [...AustraliaCodes];\n        this.polygonSeries.data = [...this.countriesData.australia];\n        this.tipsData = [...this.countriesData.australia];\n        this.chart.deltaLongitude = -160;\n        this.chart.homeZoomLevel = 2;\n      break;\n      case 'Africa': \n        this.polygonSeries.include = [...AfricaCodes];\n        this.polygonSeries.data = [...this.countriesData.africa];\n        this.tipsData = [...this.countriesData.africa];\n      break;\n    }\n\n    this.polygonSeries.data.forEach(element => element.fill = am4core.color(\"rgba(1, 25, 73, 0.75)\"));\n    this.polygonTemplate.propertyFields.fill = \"fill\";\n \n    const setActive = (value, top, left) => {\n      const isCountryIncludedToTheList = this.allCountriesData.findIndex(country => country.id === value);\n      if (isCountryIncludedToTheList !== -1) {\n        this.activeCountry = value;\n        this.isTipVisible = true;\n        this.tipsTop = top - 24 - (16 * this.tipsData.length + 8 * (this.tipsData.length + 1)) - 10;\n        if (left - 110 > 0) {\n          if (left + 110 > this.map.nativeElement.clientWidth) {\n            this.tipsLeft = this.map.nativeElement.clientWidth - 220;\n          } else {\n            this.tipsLeft = left - 110;\n          }\n        } else {\n          this.tipsLeft = 0;\n        }\n      }\n    }\n\n    const setIsTipsVisible = (value) => {\n      this.isTipVisible = value;\n    }\n\n    this.polygonTemplate.events.on(\"over\", function(ev) {\n      const active = ev.target.dataItem.dataContext;\n      setActive(active.id, ev.event.pageY,ev.event.pageX);\n    })\n\n    this.polygonTemplate.events.on(\"out\", function(ev) {\n      setIsTipsVisible(false);\n    })\n  }\n\n  ngAfterViewInit() {\n    const height = this.map.nativeElement.clientWidth * 0.7;\n    this.mapHeight = height > 500 ? 500 : height;\n  }\n\n  ngOnChanges() {\n    this.createChart('World');\n  }\n\n  ngOnInit() {\n    let formattedCountriesData = [];\n    Object.values(this.countriesData).forEach(region => { \n      formattedCountriesData = [...formattedCountriesData,...region]\n    })\n    this.allCountriesData = formattedCountriesData;\n    this.createChart('World');\n  }\n}\n",
            "properties": [
                {
                    "name": "id",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "name",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "value",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "Data",
            "id": "interface-Data-4b0dbb67bf95802b4eb03947be5723e3",
            "file": "src/app/atoms/charts/round-chart/round-chart.component.ts",
            "type": "interface",
            "sourceCode": "import { Component, OnInit, Input, OnChanges, HostListener, ElementRef, ViewChild, AfterViewInit } from '@angular/core';\nimport Chart from 'chart.js';\nimport { getRandomColor } from './helpers';\n\n// created new chart type with rounded ends based on Chart js\nChart.defaults.RoundedDoughnut = Chart.helpers.clone(Chart.defaults.doughnut);\nChart.controllers.RoundedDoughnut = Chart.controllers.doughnut.extend({\n  draw: function(ease) {\n    const ctx = this.chart.ctx;\n    const easingDecimal = ease || 1;\n    const arcs = this.getMeta().data;\n    Chart.helpers.each(arcs, function(arc, i) {\n      arc.transition(easingDecimal).draw();\n      const pArc = arcs[i === 0 ? arcs.length - 1 : i - 1];\n      const pColor = pArc._view.backgroundColor;\n      const vm = arc._view;\n      const radius = (vm.outerRadius + vm.innerRadius) / 2;\n      const thickness = (vm.outerRadius - vm.innerRadius) / 2;\n      const startAngle = Math.PI - vm.startAngle - Math.PI / 2;\n      const angle = Math.PI - vm.endAngle - Math.PI / 2;\n\n      ctx.save();\n      ctx.translate(vm.x, vm.y);\n      ctx.fillStyle = i === 0 ? vm.backgroundColor : pColor;\n      ctx.beginPath();\n      ctx.arc(radius * Math.sin(startAngle), radius * Math.cos(startAngle), thickness, 0, 2 * Math.PI);\n      ctx.fill();\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.beginPath();\n      ctx.arc(radius * Math.sin(angle), radius * Math.cos(angle), thickness, 0, 2 * Math.PI);\n      ctx.fill();\n      ctx.restore();\n    });\n  }\n});\n\ninterface Data {\n  title: string,\n  value: number\n}\n\n@Component({\n  selector: 'app-round-chart',\n  templateUrl: './round-chart.component.html',\n  styleUrls: ['./round-chart.component.scss']\n})\n\nexport class RoundChartComponent implements OnInit, OnChanges, AfterViewInit {\n  @Input() data: Data[];\n  @Input() colors: string[];\n  @Input() addWord: string;\n\n  isTipVisible: boolean = false;\n  values: number[];\n  colorsList: string[] = ['#9ED0E0', '#612C83', '#509AAF', '#F8BD5A', '#FF9F68', '#645FC8'];\n  mainValue: number;\n  mainLabel: string;\n  tipsTop: number = 0;\n  tipsLeft : number = 0;\n  isMobile: boolean = false;\n\n  @ViewChild('legend') legend: ElementRef;\n  \n  @HostListener('window:resize', ['$event'])\n  onResize(event: any) {\n    this.isMobile = this.legend.nativeElement.clientWidth < 620;\n  }\n  \n  createChart() {\n    if(!this.colors && !(this.colorsList.length >= this.data.length) ) {\n      const updatedColorsList = [];\n      for (let i = 0; i < this.data.length; i++) {\n        updatedColorsList.push(getRandomColor());\n      }\n      this.colorsList = updatedColorsList;\n    }\n    this.values = this.data.map((item) => item.value);\n    this.mainValue = this.values[0];\n    this.mainLabel = this.data[0].title;\n\n    const ctx = <HTMLCanvasElement>document.querySelector('.donut-rounded-chart__canvas')\n    const passPropsToUpdateMainValue = (index) => {\n      this.isTipVisible = true;\n      this.updateMainValue(index);\n    };\n    const passPropsToHideTooltip = () => this.isTipVisible = false;\n    new Chart(ctx, {\n      type: 'RoundedDoughnut',\n      data: {\n        datasets: [\n          {\n            data: this.values,\n            backgroundColor: this.colorsList,\n            borderWidth: 0\n          }\n        ]\n      },\n      options: { \n        events: ['mousemove', 'mouseout'],\n        onHover: (event) => {\n          if (this.isTipVisible) {\n            this.setCoordinates(event.pageY, event.pageX)\n          }\n        },\n        cutoutPercentage: 81,\n        tooltips: {\n          enabled: false,\n          custom: function(tooltipModel) {\n            if (tooltipModel.dataPoints) {\n              passPropsToUpdateMainValue(tooltipModel.dataPoints[0].index);\n            } else {\n              passPropsToHideTooltip ();\n            }\n          }\n        }\n      }\n    });\n  }\n\n  updateMainValue (index: number) {\n    this.mainValue = this.values[index];\n    this.mainLabel = this.data[index].title;\n  }\n\n  setCoordinates(top:number, left: number) {\n    this.tipsTop = top - 24 - (16 * this.data.length + 8 * (this.data.length + 1)) - 10;\n    this.tipsLeft = left - 110;\n  }\n\n  ngAfterViewInit() {\n    this.isMobile = this.legend.nativeElement.clientWidth < 620;\n  }\n\n  ngOnChanges() {\n    this.createChart();\n  }\n\n  ngOnInit(): void {\n    this.createChart();\n  }\n}\n",
            "properties": [
                {
                    "name": "title",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "value",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 39
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "Domain",
            "id": "interface-Domain-31eb191976ce3ee47327acf5510d3b30",
            "file": "src/app/molecules/onboarding-list/onboarding-list.component.ts",
            "type": "interface",
            "sourceCode": "import { Component, ElementRef, Input, ViewChild } from '@angular/core';\n\ninterface Domain {\n  title: string,\n  text: string,\n  id: string\n}\n\n@Component({\n  selector: 'app-onboarding-list',\n  templateUrl: './onboarding-list.component.html',\n  styleUrls: ['./onboarding-list.component.scss']\n})\n\nexport class OnboardingListComponent {\n  @Input() domains: Domain[];\n  @Input() selected: string[];\n\n  @ViewChild('deleteModalContent')deleteModalContent: ElementRef;\n  @ViewChild('editModalContent')editModalContent: ElementRef;\n\n  isModalVisible=false;\n  activeTitle = '';\n  activeId='';\n  modalTitle='';\n  modalPrimaryButtonTitle='';\n  modalDangerButtonTitle='';\n  modalPrimaryButtonFunction=(args: any) => {};\n  modalDangerButtonFunction=(args: any) => {};\n  modalComponent;\n  ctx;\n\n  changeSelectedList = (id: string) => {\n    this.selected = (this.selected.includes(id)) ? this.selected.filter(domain => domain !== id) : [...this.selected, id];\n  }\n\n  checkIsSelected(id: string) {\n    return this.selected.includes(id);\n  }\n\n  handleDelete(id: string) {\n    this.activeTitle =this.domains.find(domain => domain.id === id).title;\n    this.ctx = { titleActiveDomain: this.activeTitle };\n    this.modalTitle = 'Delete domain';\n    this.modalPrimaryButtonTitle = 'exit';\n    this.modalDangerButtonTitle = 'delete';\n    this.modalPrimaryButtonFunction = this.closeModal;\n    this.modalDangerButtonFunction = this.deleteDomain;\n    this.activeId = id;\n    this.modalComponent = this.deleteModalContent;\n    this.isModalVisible = true;\n  }\n\n  handleEdit(id: string) {\n    this.activeTitle =this.domains.find(domain => domain.id === id).title;\n    this.ctx = { initialValue: this.activeTitle };\n    this.modalTitle = 'Rename domain';\n    this.modalPrimaryButtonTitle = 'rename';\n    this.modalDangerButtonTitle = '';\n    this.modalPrimaryButtonFunction = this.editDomain;\n    this.modalDangerButtonFunction = null;\n    this.activeId = id;\n    this.modalComponent = this.editModalContent;\n    this.isModalVisible = true;\n  }\n\n  closeModal() {\n    this.isModalVisible = false;\n  }\n\n  setValue(value: string) {\n    this.activeTitle = value;\n  }\n\n  editDomain() {\n    const activeIndex = this.domains.findIndex(domain => domain.id === this.activeId);\n    this.domains[activeIndex].title = this.activeTitle;\n    this.isModalVisible = false;\n  }\n\n  deleteDomain() {\n    this.domains = this.domains.filter(domain => domain.id !== this.activeId);\n    this.isModalVisible = false;\n    this.selected = this.selected.filter(domain => domain !== this.activeId);\n  }\n}\n",
            "properties": [
                {
                    "name": "id",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "text",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "title",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "Item",
            "id": "interface-Item-d387b2c598d65dac5f803a5094b54cdd",
            "file": "src/app/molecules/menu/composite-menu/composite-menu.component.ts",
            "type": "interface",
            "sourceCode": "import { Component, Input, ViewEncapsulation } from '@angular/core';\n\ninterface Item {\n  title: string;\n  sections: string[]\n}\n\n@Component({\n  selector: 'app-composite-menu',\n  templateUrl: './composite-menu.component.html',\n  styleUrls: ['./composite-menu.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\n\nexport class CompositeMenuComponent {\n  @Input() items: Item[];\n\n  active: string = '';\n\n  handlClick(event: any, i: string) {\n    event.preventDefault();\n    this.active = i;\n  }\n}\n",
            "properties": [
                {
                    "name": "sections",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "title",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "MobileItems",
            "id": "interface-MobileItems-0be84ba3302bfca6feae500bc9a9d3e4",
            "file": "src/app/organisms/scan-report/scan-report.component.ts",
            "type": "interface",
            "sourceCode": "import { Component, ElementRef, OnInit, HostListener, ViewEncapsulation, ViewChild } from '@angular/core';\n\ninterface SideItems {\n  title: string;\n  sections?: string[],\n}\n\ninterface MobileItems {\n  title: string;\n  svgPath: string,\n  isActive: boolean\n}\n\n@Component({\n  selector: 'app-scan-report',\n  templateUrl: './scan-report.component.html',\n  styleUrls: ['./scan-report.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\n\nexport class ScanReportComponent implements OnInit {\n  items: string[] = ['reports', 'domains', 'users', 'account', 'request portal'];\n  itemsToSearch: string[] = ['My current company', 'My clients company', 'secure privacy', 'secure privacy2', 'secure privacy3'];\n  leftSideMenuItems: SideItems[] = [\n    { title: 'scan'},\n    { title: 'style'},\n    { title: 'cookie banner'},\n    { title: 'IAB 2.0 settings'},\n    { title: 'Preference Center', sections: ['GDPR/ePrivacy', 'CCPA', 'LGPD']},\n    { title: 'data request form'},\n    { title: 'Preference Center', sections: ['Privacy Policy', 'Cookie Declaration', 'Embed On Website']},\n    { title: 'cookie classification'},\n    { title: 'languages'},\n    { title: 'coverage'},\n    { title: 'installation'},\n  ]\n  mobileMenuItems: MobileItems[] = [\n    { title: 'Reports', svgPath: 'assets/images/menu/Reports.svg',   isActive: false,},\n    { title: 'Domains', svgPath: 'assets/images/menu/Domains.svg',   isActive: false,},\n    { title: 'Account', svgPath: 'assets/images/menu/Account.svg',   isActive: false,},\n    { title: 'Options', svgPath: 'assets/images/menu/Options.svg',   isActive: false,},\n  ]\n  isMobile: boolean = false;\n  isSideMenuVisible: boolean = false;\n\n  toggleSideMenu() {\n    this.isSideMenuVisible = !this.isSideMenuVisible;\n  }\n  \n  @ViewChild('nav') element: ElementRef;\n\n  @HostListener('window:resize', ['$event'])\n  onResize(event: any) {\n    this.isMobile = (event.target.innerWidth < 800) ? true : false;\n  }\n\n  @HostListener('document:click', ['$event'])\n\tonClick(event: Event) {\n    if (!this.element.nativeElement.contains(event.target)) {\n      this.isSideMenuVisible = false;\n    }\n  }\n  \n  ngOnInit(): void {\n    this.isMobile = (window.innerWidth < 800) ? true : false;\n  }\n}\n",
            "properties": [
                {
                    "name": "isActive",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "svgPath",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "title",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "Module",
            "id": "interface-Module-b986dea163c7700978cb484a339248e7",
            "file": "src/app/molecules/form-screens/form-screen-fifth/form-screen-fifth.component.ts",
            "type": "interface",
            "sourceCode": "import { Component } from '@angular/core';\n\ninterface Module {\n  title: string,\n  text: string\n}\n\n@Component({\n  selector: 'app-form-screen-fifth',\n  templateUrl: './form-screen-fifth.component.html',\n  styleUrls: ['./form-screen-fifth.component.scss']\n})\n\nexport class FormScreenFifthComponent {\n  selectedModules: string[] = [];\n  modules: Module[] = [\n    {\n      title: \"GDPR, eprivacy\",\n      text: \"Europe\",\n    },\n    {\n      title: \"Thailand\",\n      text: \"Bangkok\",\n    },\n    {\n      title: \"Calofornia\",\n      text: \"Europe \",\n    },\n    {\n      title: \"CCPA\",\n      text: \"Europe\",\n    },\n    {\n      title: \"Canada\",\n      text: \"Ottawa\",\n    },\n    {\n      title: \"Dubai\",\n      text: \"Dubai \",\n    },\n    {\n      title: \"GDPR, eprivacy2\",\n      text: \"Europe\",\n    },\n    {\n      title: \"Thailand2\",\n      text: \"Bangkok\",\n    },\n    {\n      title: \"Calofornia2\",\n      text: \"Europe \",\n    },\n  ]\n\n  selectModule(title: string) {\n    if (this.selectedModules.includes(title)) {\n      this.selectedModules = this.selectedModules.filter(module => module !== title);\n    } else {\n      this.selectedModules = [...this.selectedModules, title];\n    }\n  }\n}\n",
            "properties": [
                {
                    "name": "text",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "title",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "Module",
            "id": "interface-Module-aca7099c3a068b1af5bdf9dc534fb0c5-1",
            "file": "src/app/molecules/form-screens/form-screen-fourth/form-screen-fourth.component.ts",
            "type": "interface",
            "sourceCode": "import { Component } from '@angular/core';\n\ninterface Module {\n  title: string,\n  text: string\n}\n\n@Component({\n  selector: 'app-form-screen-fourth',\n  templateUrl: './form-screen-fourth.component.html',\n  styleUrls: ['./form-screen-fourth.component.scss']\n})\nexport class FormScreenFourthComponent {\n\n  selectedModules: string[] = [];\n  modules: Module[] = [\n    {\n      title: \"GDPR, eprivacy\",\n      text: \"Europe\",\n    },\n    {\n      title: \"Thailand\",\n      text: \"Bangkok\",\n    },\n    {\n      title: \"Calofornia\",\n      text: \"Europe \",\n    },\n    {\n      title: \"CCPA\",\n      text: \"Europe\",\n    },\n    {\n      title: \"Canada\",\n      text: \"Ottawa\",\n    },\n    {\n      title: \"Dubai\",\n      text: \"Dubai \",\n    },\n  ]\n\n  selectModule(title: string) {\n    if (this.selectedModules.includes(title)) {\n      this.selectedModules = this.selectedModules.filter(module => module !== title);\n    } else {\n      this.selectedModules = [...this.selectedModules, title];\n    }\n  }\n}\n",
            "properties": [
                {
                    "name": "text",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "title",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "Module-1"
        },
        {
            "name": "Module",
            "id": "interface-Module-ae34384e6e13eceb75d03fb11c334547-2",
            "file": "src/app/molecules/form-screens/form-screen-third/form-screen-third.component.ts",
            "type": "interface",
            "sourceCode": "import { Component, ViewEncapsulation } from '@angular/core';\n\ninterface Module {\n  title: string,\n  text: string,\n  src: string\n}\n\n@Component({\n  selector: 'app-form-screen-third',\n  templateUrl: './form-screen-third.component.html',\n  styleUrls: ['./form-screen-third.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class FormScreenThirdComponent {\n  selectedModules: string[] = [];\n  modules: Module[] = [\n    {\n      title: \"GDPR, eprivacy\",\n      text: \"Europe\",\n      src: \"assets/images/flags/euro.png\"\n    },\n    {\n      title: \"CCPA\",\n      text: \"California\",\n      src: \"assets/images/flags/ccpa.png\"\n    },\n    {\n      title: \"LGPD\",\n      text: \"Brasil \",\n      src: \"assets/images/flags/lgpd.png\"\n    }\n  ]\n\n  selectModule(title: string) {\n    if (this.selectedModules.includes(title)) {\n      this.selectedModules = this.selectedModules.filter(module => module !== title);\n    } else {\n      this.selectedModules = [...this.selectedModules, title];\n    }\n  }\n}\n",
            "properties": [
                {
                    "name": "src",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "text",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "title",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 2,
            "duplicateName": "Module-2"
        },
        {
            "name": "SideItems",
            "id": "interface-SideItems-0be84ba3302bfca6feae500bc9a9d3e4",
            "file": "src/app/organisms/scan-report/scan-report.component.ts",
            "type": "interface",
            "sourceCode": "import { Component, ElementRef, OnInit, HostListener, ViewEncapsulation, ViewChild } from '@angular/core';\n\ninterface SideItems {\n  title: string;\n  sections?: string[],\n}\n\ninterface MobileItems {\n  title: string;\n  svgPath: string,\n  isActive: boolean\n}\n\n@Component({\n  selector: 'app-scan-report',\n  templateUrl: './scan-report.component.html',\n  styleUrls: ['./scan-report.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\n\nexport class ScanReportComponent implements OnInit {\n  items: string[] = ['reports', 'domains', 'users', 'account', 'request portal'];\n  itemsToSearch: string[] = ['My current company', 'My clients company', 'secure privacy', 'secure privacy2', 'secure privacy3'];\n  leftSideMenuItems: SideItems[] = [\n    { title: 'scan'},\n    { title: 'style'},\n    { title: 'cookie banner'},\n    { title: 'IAB 2.0 settings'},\n    { title: 'Preference Center', sections: ['GDPR/ePrivacy', 'CCPA', 'LGPD']},\n    { title: 'data request form'},\n    { title: 'Preference Center', sections: ['Privacy Policy', 'Cookie Declaration', 'Embed On Website']},\n    { title: 'cookie classification'},\n    { title: 'languages'},\n    { title: 'coverage'},\n    { title: 'installation'},\n  ]\n  mobileMenuItems: MobileItems[] = [\n    { title: 'Reports', svgPath: 'assets/images/menu/Reports.svg',   isActive: false,},\n    { title: 'Domains', svgPath: 'assets/images/menu/Domains.svg',   isActive: false,},\n    { title: 'Account', svgPath: 'assets/images/menu/Account.svg',   isActive: false,},\n    { title: 'Options', svgPath: 'assets/images/menu/Options.svg',   isActive: false,},\n  ]\n  isMobile: boolean = false;\n  isSideMenuVisible: boolean = false;\n\n  toggleSideMenu() {\n    this.isSideMenuVisible = !this.isSideMenuVisible;\n  }\n  \n  @ViewChild('nav') element: ElementRef;\n\n  @HostListener('window:resize', ['$event'])\n  onResize(event: any) {\n    this.isMobile = (event.target.innerWidth < 800) ? true : false;\n  }\n\n  @HostListener('document:click', ['$event'])\n\tonClick(event: Event) {\n    if (!this.element.nativeElement.contains(event.target)) {\n      this.isSideMenuVisible = false;\n    }\n  }\n  \n  ngOnInit(): void {\n    this.isMobile = (window.innerWidth < 800) ? true : false;\n  }\n}\n",
            "properties": [
                {
                    "name": "sections",
                    "type": "string[]",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "title",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "Text",
            "id": "interface-Text-510fcb724c0b317493089d36d1d49a4b",
            "file": "src/app/atoms/card/card-report-status/card-report-status.component.ts",
            "type": "interface",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\ninterface Text {\n  text: string,\n  value: string\n}\n\n@Component({\n  selector: 'app-card-report-status',\n  templateUrl: './card-report-status.component.html',\n  styleUrls: ['./card-report-status.component.scss']\n})\n\nexport class CardReportStatusComponent {\n  @Input() title: string;\n  @Input() texts: Text[];\n}\n",
            "properties": [
                {
                    "name": "text",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "value",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "AddService",
            "id": "injectable-AddService-02cd4e84393b89ec19dcbca6cf71ff9f",
            "file": "src/app/molecules/customized-element/add-dynamic-component/add.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "getAds",
                    "args": [
                        {
                            "name": "type",
                            "type": "string"
                        },
                        {
                            "name": "data",
                            "type": "any",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 9,
                    "jsdoctags": [
                        {
                            "name": "type",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "data",
                            "type": "any",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { DynamicTableComponent } from '../../../atoms/tables/dynamic-table/dynamic-table.component';\nimport { DynamicListComponent } from '../../../atoms/tables/dynamic-list/dynamic-list.component';\nimport { DynamicTextComponent } from '../../../atoms/text/dynamic-text/dynamic-text.component';\nimport { AddItem } from './add-item';\n\n@Injectable()\nexport class AddService {\n  getAds(type: string, data?: any) {\n    if (type === 'table' && data) {\n      return new AddItem(DynamicTableComponent, data)\n    } else if (type ==='list' && data) {\n       return new AddItem(DynamicListComponent, data)\n    } else if (type === 'text' && data) {\n      return new AddItem(DynamicTextComponent, data)\n    }\n  }\n}",
            "type": "injectable"
        }
    ],
    "classes": [
        {
            "name": "AddItem",
            "id": "class-AddItem-2c3c07e596d6a1843ae0405275c36294",
            "file": "src/app/molecules/customized-element/add-dynamic-component/add-item.ts",
            "type": "class",
            "sourceCode": "import { Type } from '@angular/core';\n\nexport class AddItem {\n  constructor(public component: Type<any>, public dataFromParent: any, ) {}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "component",
                        "type": "Type<any>"
                    },
                    {
                        "name": "dataFromParent",
                        "type": "any"
                    }
                ],
                "line": 3,
                "jsdoctags": [
                    {
                        "name": "component",
                        "type": "Type<any>",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "dataFromParent",
                        "type": "any",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "component",
                    "type": "Type<any>",
                    "optional": false,
                    "description": "",
                    "line": 4,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "dataFromParent",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 4,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "AppPage",
            "id": "class-AppPage-a0db91bfa3b9914e9048612074084ee6",
            "file": "e2e/src/app.po.ts",
            "type": "class",
            "sourceCode": "import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo(): Promise<unknown> {\n    return browser.get(browser.baseUrl) as Promise<unknown>;\n  }\n\n  getTitleText(): Promise<string> {\n    return element(by.css('app-root .content span')).getText() as Promise<string>;\n  }\n}\n",
            "properties": [],
            "methods": [
                {
                    "name": "getTitleText",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<string>",
                    "typeParameters": [],
                    "line": 8
                },
                {
                    "name": "navigateTo",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<unknown>",
                    "typeParameters": [],
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [
        {
            "name": "AddDirective",
            "id": "directive-AddDirective-611723920efcd1e770f65ac2f7afd6dd",
            "file": "src/app/molecules/customized-element/add-dynamic-component/add.directive.ts",
            "type": "directive",
            "description": "",
            "sourceCode": "import { Directive, ViewContainerRef } from '@angular/core';\n\n@Directive({\n  selector: '[adHost]',\n})\n\nexport class AddDirective {\n  constructor(public viewContainerRef: ViewContainerRef) { }\n}",
            "selector": "[adHost]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "viewContainerRef",
                    "type": "ViewContainerRef",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "viewContainerRef",
                        "type": "ViewContainerRef"
                    }
                ],
                "line": 7,
                "jsdoctags": [
                    {
                        "name": "viewContainerRef",
                        "type": "ViewContainerRef",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        }
    ],
    "components": [
        {
            "name": "AddComponent",
            "id": "component-AddComponent-116e916645e0e627b3da7309f4a89cd9",
            "file": "src/app/molecules/customized-element/add-dynamic-component/add-dynamic.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-add-dynamic",
            "styleUrls": [],
            "styles": [],
            "template": "<div class=\"add-dynamic-component\">\n  <ng-template adHost></ng-template>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "component",
                    "line": 21,
                    "type": "AddItem"
                }
            ],
            "outputsClass": [
                {
                    "name": "handler",
                    "defaultValue": "new EventEmitter()",
                    "line": 22,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "adHost",
                    "type": "AddDirective",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "AddDirective, {static: true}"
                        }
                    ]
                },
                {
                    "name": "currentAdIndex",
                    "defaultValue": "-1",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "interval",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 26
                }
            ],
            "methodsClass": [
                {
                    "name": "loadComponent",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 30
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit, ViewChild, ComponentFactoryResolver, OnDestroy, OnChanges, EventEmitter, Output } from '@angular/core';\n\nimport { AddDirective } from './add.directive';\nimport { AddItem } from './add-item';\n\nexport interface AdComponent {\n  data: any;\n  handler: any\n}\n\n@Component({\n  selector: 'app-add-dynamic',\n  template: `\n              <div class=\"add-dynamic-component\">\n                <ng-template adHost></ng-template>\n              </div>\n            `\n})\n\nexport class AddComponent implements OnInit {\n  @Input() component: AddItem;\n  @Output() handler: EventEmitter<any> = new EventEmitter();\n\n  currentAdIndex = -1;\n  @ViewChild(AddDirective, {static: true}) adHost: AddDirective;\n  interval: any;\n\n  constructor(private componentFactoryResolver: ComponentFactoryResolver) { }\n\n  loadComponent() {\n    const adItem = this.component;\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(adItem.component);\n    const viewContainerRef = this.adHost.viewContainerRef;\n    const componentRef = viewContainerRef.createComponent<AdComponent>(componentFactory);\n    componentRef.instance.data = adItem.dataFromParent;\n    componentRef.instance.handler.subscribe(val => {\n      this.handler.emit(val);\n    });\n    componentRef.changeDetectorRef.detectChanges();\n    return componentRef\n  }\n\n  ngOnInit() {\n    this.loadComponent();\n  }\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "componentFactoryResolver",
                        "type": "ComponentFactoryResolver"
                    }
                ],
                "line": 26,
                "jsdoctags": [
                    {
                        "name": "componentFactoryResolver",
                        "type": "ComponentFactoryResolver",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-eb2f1df38f57939aa14584eb209e6fab",
            "file": "src/app/app.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "isVisibleButtonsBlock",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "myChart",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "title",
                    "defaultValue": "\"\"",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "createChart",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 63
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, ComponentFactoryResolver, Input, OnInit, ViewChild, ViewContainerRef, ViewEncapsulation } from '@angular/core';\nimport { DynamicTableComponent } from './atoms/tables/dynamic-table/dynamic-table.component';\nimport { DynamicListComponent } from './atoms/tables/dynamic-list/dynamic-list.component';\nimport Chart from 'chart.js';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\n\n\nexport class AppComponent  {\n  isVisibleButtonsBlock = false;\ntitle=\"\"\nmyChart\ncreateChart() {\n  const canvas = document.getElementById('myChart') as HTMLCanvasElement;\n  const ctx = canvas.getContext('2d');\n\nthis.myChart = new Chart(ctx, {\n  type: 'bar',\n  data: {\n      labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\n      datasets: [{\n          label: '# of Votes',\n          data: [12, 19, 3, 5, 2, 3],\n          backgroundColor: [\n              'rgba(255, 99, 132, 0.2)',\n              'rgba(54, 162, 235, 0.2)',\n              'rgba(255, 206, 86, 0.2)',\n              'rgba(75, 192, 192, 0.2)',\n              'rgba(153, 102, 255, 0.2)',\n              'rgba(255, 159, 64, 0.2)'\n          ],\n          borderColor: [\n              'rgba(255, 99, 132, 1)',\n              'rgba(54, 162, 235, 1)',\n              'rgba(255, 206, 86, 1)',\n              'rgba(75, 192, 192, 1)',\n              'rgba(153, 102, 255, 1)',\n              'rgba(255, 159, 64, 1)'\n          ],\n          borderWidth: 1\n      }]\n  },\n  options: {\n      scales: {\n          yAxes: [{\n              ticks: {\n                  beginAtZero: true\n              }\n          }]\n      }\n  }\n});\n\nconsole.log(this.myChart)\n\n}\nconstructor() { }\n\nngOnInit(): void {\n  this.createChart()\n}\n\n\n\n\n \n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 60
            },
            "templateData": "Secure Privacy Components Angular"
        },
        {
            "name": "ApproveModalComponent",
            "id": "component-ApproveModalComponent-ff4a1a25c19b48cbaa0d35b764079a15",
            "file": "src/app/atoms/modals/approve-modal/approve-modal.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-approve-modal",
            "styleUrls": [
                "./approve-modal.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./approve-modal.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "dangerButtonTitle",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "primaryButtonTitle",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "title",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [
                {
                    "name": "closeModal",
                    "defaultValue": "new EventEmitter()",
                    "line": 16,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "dangerButtonFunction",
                    "defaultValue": "new EventEmitter()",
                    "line": 15,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "primaryButtonFunction",
                    "defaultValue": "new EventEmitter()",
                    "line": 14,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "handleClick",
                    "args": [
                        {
                            "name": "event",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Output, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-approve-modal',\n  templateUrl: './approve-modal.component.html',\n  styleUrls: ['./approve-modal.component.scss']\n})\n\nexport class ApproveModalComponent {\n  @Input() title: string;\n  @Input() primaryButtonTitle: string;\n  @Input() dangerButtonTitle: string;\n\n  @Output() primaryButtonFunction: EventEmitter<any> = new EventEmitter();\n  @Output() dangerButtonFunction: EventEmitter<any> = new EventEmitter();\n  @Output() closeModal: EventEmitter<any> = new EventEmitter();\n\n  handleClick(event) {\n    if (!event.target.closest('.approve-modal__form')) {\n      this.closeModal.emit()\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".approve-modal {\n  width: 100vw;\n  height: 100vh;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 3;\n\n  background-color: rgba(var(--secondary-color-code), 0.5);\n  text-align: center;\n\n  &__title {\n    margin-bottom: 32px;\n  }\n\n  &__form {\n    position: relative;\n    top: -10%;\n    min-width: 588px;\n    padding: 32px 64px;\n    background: var(--card-bg-color);\n    border-radius: 12px 30px;\n  }\n\n  &__buttons {\n    display: flex;\n    justify-content: center;\n    margin-top: 24px;\n\n    & * {\n      margin-right: 30px;;\n    }\n  \n    & :last-child {\n      margin-right: 0;\n    }\n  }\n}\n\n@media screen and (max-width: 600px) {\n  .approve-modal {\n    &__form {\n      min-width: 90%;\n      max-width: 90%;\n      padding: 20px;\n    }\n  }\n}",
                    "styleUrl": "./approve-modal.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"approve-modal\" (click)=\"handleClick($event)\">\n  <div class=\"approve-modal__form\">\n    <p class=\"approve-modal__title fs-h3\">{{ title }}</p>\n    <ng-content></ng-content>\n    <div class=\"approve-modal__buttons\">\n      <app-simple-button \n        [classes]=\"'btn-app--h46--wide btn-app btn-success fs-12-sofia-800'\"\n        [title]=\"primaryButtonTitle\"\n        (click)=\"primaryButtonFunction.emit()\"\n      >\n      </app-simple-button>\n      <app-simple-button\n        *ngIf=\"dangerButtonTitle!==''\" \n        [classes]=\"'btn-danger fs-12-sofia-800 btn-app btn-app--h46--wide'\"\n        [title]=\"dangerButtonTitle\"\n        (click)=\"dangerButtonFunction.emit()\"\n      >\n      </app-simple-button>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "CardComponent",
            "id": "component-CardComponent-6d15749d9e30bca96093e8262a56e615",
            "file": "src/app/atoms/card/card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-card",
            "styleUrls": [
                "./card.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./card.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "isActive",
                    "line": 13,
                    "type": "string"
                },
                {
                    "name": "src",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "text",
                    "line": 10,
                    "type": "string"
                },
                {
                    "name": "title",
                    "line": 11,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "classes",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnChanges } from '@angular/core';\n\n@Component({\n  selector: 'app-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.scss']\n})\n\nexport class CardComponent implements OnChanges {\n  @Input() text: string;\n  @Input() title: string;\n  @Input() src: string;\n  @Input() isActive: string;\n\n  classes: string;\n\n  ngOnChanges() {\n    this.classes = this.isActive ? \"app-card active\" : \"app-card\";\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-card {\n  width: fit-content;\n  padding: 1px;\n\n  background: rgba(var(--secondary-color-code), 0.5);\n  border-radius: 12px;\n  text-align: center;\n\n  &.active {\n    position: relative;\n    background: var(--success-grad-light);\n      \n    &::after {\n      content: \"\";\n      position: absolute;\n      top: 8px;\n      right: 8px;\n\n      width: 19px;\n      height: 19px;\n\n      background: var(--success-grad-light);\n      border-radius: 50%;\n    }\n\n    &:before {\n      content: '';\n      position: absolute;\n      top: 8px;\n      right: 8px;\n      z-index: 2;\n\n      box-sizing: border-box;\n      width: 19px;\n      height: 19px;\n      border-radius: 50%;\n\n      background: no-repeat center url('../../../assets/images/checkbox.svg');\n    }\n  }\n\n  &:hover {\n    cursor: pointer;\n    background: var(--success-grad-light);\n    box-shadow: 0px 30px 70px rgba(46, 45, 79, 0.15);\n  }\n\n  &__title {\n    margin-bottom: 6px;\n  }\n\n  &__wrapper {\n    border-radius: 12px;\n    background-color: var(--text-color);\n  }\n\n  &__text-wrapper {\n    width: 100%;\n    word-wrap: break-word;\n  }\n\n  &__container {\n    width: 130px;\n    padding: 22px 15px 28px;\n\n    border-radius: 12px;\n    background-color: rgba(var(--text-color-code), 0.15);\n    color: var(--secondary-color);\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n      & > img {\n        margin-bottom: 20px;\n        width: 44px;\n        height: 50px;\n      }\n    }\n  }\n\n@media screen and (max-width: 600px) {\n  .app-card {\n    width: 100%;\n\n    &.active {\n\n      &::after {\n        top: 12px;\n        left: 58px;\n      }\n    }\n\n    &__wrapper  {\n      width: 100%;\n    } \n\n    &__container {\n      flex-direction: row;\n      padding: 13px 15px;\n      width: 100%;\n\n      & > img {\n        margin-right: 50px;\n        margin-bottom: 0;\n        width: 55px;\n        height: 62px;\n      }\n    }\n\n    &__text-wrapper {\n      text-align: center;\n      width: 50%;\n    }\n  }\n}",
                    "styleUrl": "./card.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnChanges"
            ],
            "templateData": "<div [ngClass]=\"classes\">\n  <div class=\"app-card__wrapper\">\n    <div class=\"app-card__container\">\n      <img [src]='src' alt=\"text + 'flag'\" />\n      <div class=\"app-card__text-wrapper\">\n        <p class=\"fs-12-gramm-400 app-card__title\">{{ title }}</p>\n        <p class=\"fs-10-sofia-300\">{{ text }}</p>\n      </div>\n    </div>\n  </div>\n</div>"
        },
        {
            "name": "CardReportsComponent",
            "id": "component-CardReportsComponent-d0bafcf0ab89249cb9b4d4a576bd8cc2",
            "file": "src/app/atoms/card/card-reports/card-reports.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-card-reports",
            "styleUrls": [
                "./card-reports.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./card-reports.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "iconSrc",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "text",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "title",
                    "line": 10,
                    "type": "string"
                },
                {
                    "name": "value",
                    "line": 13,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-card-reports',\n  templateUrl: './card-reports.component.html',\n  styleUrls: ['./card-reports.component.scss']\n})\n\nexport class CardReportsComponent {\n  @Input() title: string;\n  @Input() text: string;\n  @Input() iconSrc: string;\n  @Input() value: string;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".card-reports {\n  width: 188px;\n  padding: 16px 16px 11px;\n  border-radius: 12px;\n  color: var(--secondary-color);\n\n  &__title {\n    margin-bottom: 2px;\n    letter-spacing: 0.05em;\n    text-transform: uppercase;\n    line-height: 130%;\n  }\n\n  &__text {\n    line-height: 110%;\n    margin-bottom: 7px;\n  }\n\n  &__container {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding-top: 14px;\n    border-top: 0.580318px solid rgba(var(--secondary-color-code), 0.1);\n  }\n\n  &__img {\n    width: 20px;\n    height: 20px;\n  }\n\n  &__value {\n    opacity: 0.75;\n  }\n}",
                    "styleUrl": "./card-reports.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"card-reports\">\n  <p class=\"card-reports__title fs-12-gramm-400\">{{ title }}</p>\n  <p class=\"card-reports__text fs-12-sofia-300\">{{ text }}</p>\n  <div class=\"card-reports__container\">\n    <img class=\"card-reports__img\" [src]=\"iconSrc\" [alt]=\"title\">\n    <span class=\"card-reports__value fs-h3-b\">{{ value }}</span>\n  </div>\n</div>\n"
        },
        {
            "name": "CardReportStatusComponent",
            "id": "component-CardReportStatusComponent-510fcb724c0b317493089d36d1d49a4b",
            "file": "src/app/atoms/card/card-report-status/card-report-status.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-card-report-status",
            "styleUrls": [
                "./card-report-status.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./card-report-status.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "texts",
                    "line": 16,
                    "type": "Text[]"
                },
                {
                    "name": "title",
                    "line": 15,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\ninterface Text {\n  text: string,\n  value: string\n}\n\n@Component({\n  selector: 'app-card-report-status',\n  templateUrl: './card-report-status.component.html',\n  styleUrls: ['./card-report-status.component.scss']\n})\n\nexport class CardReportStatusComponent {\n  @Input() title: string;\n  @Input() texts: Text[];\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".card-report-status {\n  width: 214px;\n  padding: 16px 16px 6px;\n  border-radius: 12px 12px 12px 0px;\n  background-color: rgba(var(--secondary-color-code), 0.8);\n  color: var(--text-color);\n  box-shadow: 0px 40px 70px rgba(1, 25, 73, 0.3);\n\n  &__title {\n    margin-bottom: 14px;\n    text-transform: uppercase;\n    color: rgba(var(--text-color-code), 0.5);\n  }\n\n  &__list {\n    width: 100%;\n    display: flex;\n    justify-content: space-between;\n    flex-wrap: wrap;\n  }\n\n  &__item {\n    width: 49%;\n    text-align: start;\n    margin-bottom: 13px;\n\n    &:nth-child(even) {\n      text-align: end;\n    }\n  }\n}",
                    "styleUrl": "./card-report-status.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"card-report-status\">\n  <p class=\"card-report-status__title fs-18-gramm-light\">\n    {{ title }}\n  </p>\n  <ul class=\"card-report-status__list\">\n    <li\n      class=\"card-report-status__item fs-14-sofia-normal\"\n      *ngFor=\"let text of texts\"\n    >\n      <span class=\"card-report-status__value fs-14-sofia-800\">{{ text.value }}</span>\n      {{ text.text }}\n    </li>\n  </ul>\n</div>\n"
        },
        {
            "name": "CardRowComponent",
            "id": "component-CardRowComponent-b618b6be8b4bc7357770e21762b2f7d7",
            "file": "src/app/molecules/card-row/card-row.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-card-row",
            "styleUrls": [
                "./card-row.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./card-row.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-card-row',\n  templateUrl: './card-row.component.html',\n  styleUrls: ['./card-row.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\n\nexport class CardRowComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-card-row {\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: wrap;\n  width: 100%;\n\n  & * {\n    margin-bottom: 10px;\n    margin-right: 10px;\n  }\n\n  & :last-child {\n    margin-bottom: 0;\n    margin-right: 0;\n  }\n\n  & .card {\n    height: 100%!important;\n  }\n}\n",
                    "styleUrl": "./card-row.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"app-card-row\">\n  <app-card-with-donut-chart\n    [title]=\"'Cookies by category'\"\n    [labels]=\"['in advertisement storage some objects ', 'local storage objects local storage objects', 'in social media', 'in analytics', 'in preferences', 'in presferences', 'iframe' ]\"\n    [values]=\"[13, 6, 8, 4, 6, 7, 9]\"\n  >\n  </app-card-with-donut-chart>\n  <app-card-with-donut-chart\n    [title]=\"'Cookies by category'\"\n    [labels]=\"['in advertisement objects ', 'local storage objects local storage objects', 'in social media', 'in analytics', 'in preferences', 'in preferesnces' ]\"\n    [values]=\"[1, 3, 1, 4, 2, 4]\"\n  >\n  </app-card-with-donut-chart>\n  <app-semicircle-chart-card\n    [title]=\"'Overall score'\"\n    [percent]='80'\n    [text]=\"'Remaining recommendations'\"\n    [value]=\"5\"\n  >\n  </app-semicircle-chart-card>\n  <app-card-with-center-text\n    [text]=\"'Pages scanned'\"\n    [value]=\"313\"\n    [title]=\"'Pages'\"\n  >\n  </app-card-with-center-text>\n</div>\n"
        },
        {
            "name": "CardWithCenterTextComponent",
            "id": "component-CardWithCenterTextComponent-3ca42f00a3d60dbaffc912a77ef5aaf8",
            "file": "src/app/atoms/card/card-with-center-text/card-with-center-text.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-card-with-center-text",
            "styleUrls": [
                "./card-with-center-text.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./card-with-center-text.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "text",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "title",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "value",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-card-with-center-text',\n  templateUrl: './card-with-center-text.component.html',\n  styleUrls: ['./card-with-center-text.component.scss']\n})\n\nexport class CardWithCenterTextComponent {\n  @Input() value: string;\n  @Input() text: string;\n  @Input() title: string;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".card-with-center-text  {\n  width: 256px;\n  height: 152px;\n  min-height: 152px;\n  padding: 8px 16px;\n  overflow: hidden;\n\n  border-radius: 12px 30px;\n  color: var(--secondary-color);\n  text-align: center;\n  background-color: var(--card-bg-color);\n\n  &:hover {\n    box-shadow: 0px 40px 70px rgba(var(--secondary-color-code), 0.3);\n  }\n\n  &__value {\n    margin-bottom: 6px;\n  }\n\n  &__title {\n    margin-bottom: 20px;\n  }\n}",
                    "styleUrl": "./card-with-center-text.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"card-with-center-text card\">\n  <p class=\"card-with-center-text__title\">{{ title }}</p>\n  <span class=\"card-with-center-text__value fs-h2-b\">{{ value }}</span>\n  <p class=\"card-with-center-text__text fs-12-sofia-300\">{{ text }}</p>\n</div>\n"
        },
        {
            "name": "CardWithColumnsTextComponent",
            "id": "component-CardWithColumnsTextComponent-54eba1b740c33a4b30fbfb5b895fd4c4",
            "file": "src/app/atoms/card/card-with-columns-text/card-with-columns-text.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-card-with-columns-text",
            "styleUrls": [
                "./card-with-columns-text.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./card-with-columns-text.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "texts",
                    "line": 11,
                    "type": "string[]"
                },
                {
                    "name": "title",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "values",
                    "line": 10,
                    "type": "string[]"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-card-with-columns-text',\n  templateUrl: './card-with-columns-text.component.html',\n  styleUrls: ['./card-with-columns-text.component.scss']\n})\n\nexport class CardWithColumnsTextComponent {\n  @Input() values: string[];\n  @Input() texts: string[];\n  @Input() title: string;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".card-with-columns-text  {\n  width: 256px;\n  min-height: 152px;\n  height: 100%;\n  padding: 8px 16px;\n  overflow: hidden;\n\n  border-radius: 12px 30px;\n  color: var(--secondary-color);\n  background-color: var(--card-bg-color);\n\n  &:hover {\n    box-shadow: 0px 40px 70px rgba(var(--secondary-color-code), 0.3);\n  }\n\n  &__container {\n    display: flex;\n    align-items: flex-start;\n  }\n\n  &__left {\n    width: 47%;\n    margin-right: 16px;\n  }\n\n  &__right {\n    width: 50%;\n  }\n\n  &__value {\n    margin-bottom: 6px;\n  }\n\n  &__title {\n    margin-bottom: 20px;\n  }\n}",
                    "styleUrl": "./card-with-columns-text.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"card-with-columns-text card\">\n  <p class=\"card-with-columns-text__title fs-14-gramm-400\">{{ title }}</p>\n  <div class=\"card-with-columns-text__container\">\n    <div class=\"card-with-columns-text__left\">\n      <span class=\"card-with-columns-text__value fs-h2-b\">{{ values[0] }}</span>\n      <p class=\"card-with-columns-text__text fs-12-sofia-300\">{{ texts[0] }}</p>\n    </div>\n    <div class=\"card-with-columns-text__right\">\n      <span class=\"card-with-columns-text__value fs-h2-b\">{{ values[1] }}</span>\n      <p class=\"card-with-columns-text__text fs-12-sofia-300\">{{ texts[1] }}</p>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "CardWithDonutChartComponent",
            "id": "component-CardWithDonutChartComponent-7a73aed52b10c4e109f2bfe428718b7b",
            "file": "src/app/atoms/card/card-with-donut-chart/card-with-donut-chart.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-card-with-donut-chart",
            "styleUrls": [
                "./card-with-donut-chart.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./card-with-donut-chart.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "colors",
                    "line": 12,
                    "type": "string[]"
                },
                {
                    "name": "labels",
                    "line": 13,
                    "type": "string[]"
                },
                {
                    "name": "title",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "values",
                    "line": 14,
                    "type": "string[]"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "activeValue",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "data",
                    "defaultValue": "[{\n    type: 'pie',\n    values: [],\n    labels: [],\n    domain: {column: 1},\n    hoverinfo: 'none',\n    hole: .55,\n    automargin: false,\n    marker: {\n      colors: this.defaultColors,\n    }\n  }]",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "defaultColors",
                    "defaultValue": "['#509AAF', '#7DD8C7', '#645FCE', '#9ED0E0', '#F9BE5A', '#645FCD', \"#9ED0E0\", \"#0263BC\", \"#24B04B;\"]",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "layout",
                    "defaultValue": "{\n    margin: {\"t\": 0, \"b\": 0, \"l\": 0, \"r\": 0},\n    annotations: [\n      {\n        showarrow: false,\n        text: '',\n      },\n    ],\n    position: 'absolute',\n    height: 150,\n    width: 600,\n    showlegend: false,\n    grid: {rows: 1, columns: 2}\n  }",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 32
                }
            ],
            "methodsClass": [
                {
                    "name": "changeNumberOnChartsClick",
                    "args": [
                        {
                            "name": "data",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "changeNumberOnLegendClick",
                    "args": [
                        {
                            "name": "index",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-card-with-donut-chart',\n  templateUrl: './card-with-donut-chart.component.html',\n  styleUrls: ['./card-with-donut-chart.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\n\nexport class CardWithDonutChartComponent implements OnInit {\n  @Input() title: string;\n  @Input() colors?: string[];\n  @Input() labels: string[];\n  @Input() values: string[];\n\n  activeValue: number;\n  defaultColors=['#509AAF', '#7DD8C7', '#645FCE', '#9ED0E0', '#F9BE5A', '#645FCD', \"#9ED0E0\", \"#0263BC\", \"#24B04B;\"];\n\n  data = [{\n    type: 'pie',\n    values: [],\n    labels: [],\n    domain: {column: 1},\n    hoverinfo: 'none',\n    hole: .55,\n    automargin: false,\n    marker: {\n      colors: this.defaultColors,\n    }\n  }];\n  \n  layout = {\n    margin: {\"t\": 0, \"b\": 0, \"l\": 0, \"r\": 0},\n    annotations: [\n      {\n        showarrow: false,\n        text: '',\n      },\n    ],\n    position: 'absolute',\n    height: 150,\n    width: 600,\n    showlegend: false,\n    grid: {rows: 1, columns: 2}\n  };\n\n  changeNumberOnChartsClick(data) {\n    this.activeValue = data.points[0].value;\n  }\n\n  changeNumberOnLegendClick(index: number) {\n    this.activeValue=this.data[0].values[index];\n  }\n\n  ngOnInit(): void {\n    this.data[0].values = this.values;\n    this.data[0].labels = this.labels;\n    this.activeValue = this.data[0].values[0];\n    \n    if (this.colors) {\n      this.data[0].marker.colors = this.colors;\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".chart {\n  position: relative;\n  width: 256px;\n  min-height: 152px;\n  overflow-x: hidden;\n  display: flex;\n\n  border-radius: 12px 30px;\n  color: var(--secondary-color);\n  background-color: var(--card-bg-color);\n\n  &:hover {\n    box-shadow: 0px 40px 70px rgba(var(--secondary-color-code), 0.3);\n  }\n\n  .user-select-none .svg-container {\n    position: absolute!important;\n  }\n\n  &__title {\n    position: absolute;\n    top: 10px;\n    left: 16px;\n    width: 88px;\n  }\n\n  &__value {\n    position: absolute;\n    top: 79px;\n    left: 47px;\n    width: 30px;\n    text-align: center;\n    line-height: 24px;\n\n    &.fs-h3 {\n      font-weight: 800;\n    }\n  }\n\n  &__legend {\n    position: relative;\n    top: 0;\n    left: -485px;\n    z-index: 3;\n\n    min-width: 154px;\n    width: 154px;\n    height: 100%;\n    min-height: 152px;\n    \n    padding: 10px 26px 8px 16px;\n    background-color: rgba(var(--secondary-color-code), 0.05);\n    \n    &-item {\n      display: flex;\n      margin-bottom: 6px;\n\n      &:hover {\n        cursor: pointer;\n      }\n    }\n  }\n\n  &__marker {\n    width: 10px;\n    height: 10px;\n    min-width: 10px;\n    margin-right: 8px;\n    border-radius: 50%;\n  }\n}\n\n/* ####### override css rules for plotify module ###### */\n\n.pielayer {\n  transform: scale(0.6) translateX(-355px) translateY(80px)!important;\n}\n\n.js-plotly-plot .plotly .modebar--hover > :not(.watermark) {\n  display: none;\n}\n\n.surface {\n  stroke-width: 8!important;\n  stroke: var(--card-bg-color)!important;\n  \n  &:hover {\n    cursor: pointer;\n    stroke-width: 12px!important;\n    stroke-dasharray: 550 0!important;\n    opacity: 0.8!important;\n    background:linear-gradient(to right, #e5405e 0%, #e5405e 15%, rgba(46,2014,113,0.8) 30%, rgba(39,174,96,0.3)45%,#3fffa2 60%, #1a9be0 73%, #ba68ed 100%)!important;\n  }\n}\n\n.slicetext {\n  display: none!important;\n}\n\n.main-svg {\n  background-color: transparent!important;\n}\n\n",
                    "styleUrl": "./card-with-donut-chart.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"chart card\">\n  <div class=\"chart__title fs-14-gramm-400\">\n    {{ title }}\n  </div>\n  <plotly-plot \n    (plotlyClick)=\"changeNumberOnChartsClick($event)\"\n    [data]=\"data\" \n    [layout]=\"layout\"\n  ></plotly-plot>\n  <div class=\"chart__value fs-h3-b\"><p>{{ activeValue }}</p></div>\n  <ul class=\"chart__legend\" #legend>\n    <li \n      class=\"chart__legend-item fs-12-sofia-300\" \n      *ngFor=\"let item of data[0].labels; let i = index\"\n      (click)=\"changeNumberOnLegendClick(i)\"\n    >\n      <div \n        class=\"chart__marker\" \n        [ngStyle]=\"{ 'background-color': data[0].marker.colors[i] }\"\n      >\n      </div>\n      {{ data[0].values[i ]}} {{ item }} \n    </li>\n  </ul>\n</div>\n"
        },
        {
            "name": "CheckboxCircleInputComponent",
            "id": "component-CheckboxCircleInputComponent-91db83aa8ee5b5e0b6ee531f2934a667",
            "file": "src/app/atoms/inputs/checkbox/checkbox-circle-input/checkbox-circle-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-checkbox-circle-input",
            "styleUrls": [
                "./checkbox-circle-input.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./checkbox-circle-input.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "id",
                    "defaultValue": "Date.now()",
                    "line": 12,
                    "type": "number"
                },
                {
                    "name": "isChecked",
                    "line": 10,
                    "type": "boolean"
                },
                {
                    "name": "title",
                    "line": 11,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-checkbox-circle-input',\n  templateUrl: './checkbox-circle-input.component.html',\n  styleUrls: ['./checkbox-circle-input.component.scss']\n})\n\nexport class CheckboxCircleInputComponent {\n  @Input() isChecked: boolean;\n  @Input() title: string;\n  @Input() id?: number = Date.now();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-checkbox-circle-input {\n  display: none;\n\n  &__title {\n    margin-left: 40px;\n    color: var(--secondary-color);\n    line-height: 24px;\n  }\n\n  &__label {\n    display: block;\n    position: relative;\n\n    &:after {\n        content: \"\";\n        position: absolute;\n        top: 0;\n\n        display: flex;\n        justify-content: center;\n        align-items: center;\n\n        box-sizing: border-box;\n        width: 24px;\n        height: 24px;\n        padding-bottom: 10px;\n        padding-top: 7px;\n\n        border-radius: 50%;\n        border: 1px solid rgba(var(--secondary-color-code), 0.3);\n    }\n  }\n}\n\n.app-checkbox-circle-input:checked + .app-checkbox-circle-input__label {\n  &:after {\n    border: 1px solid rgba(var(--secondary-color-code), 1);\n  }\n\n  &:before {\n    content: \"\";\n    position: absolute;\n    top: 6px;\n    left: 6px;\n    z-index: 2;\n    \n    width: 12px;\n    height: 12px;\n    border-radius: 50%;\n    background-color: var(--secondary-color);\n  }\n}\n",
                    "styleUrl": "./checkbox-circle-input.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div  class=\"app-checkbox-circle-input__container\">\n  <input\n    type=\"checkbox\" \n    [id]=\"id\"\n    name=\"checkbox-input-simple\" \n    class=\"app-checkbox-circle-input\"\n    [checked]=\"isChecked\"\n  >\n  <label [for]=\"id\" class=\"app-checkbox-circle-input__label\">\n    <p class=\"app-checkbox-circle-input__title fs-16-sofia-300\" *ngIf=\"title!==''\">\n      {{ title }}\n    </p>\n  </label>\n</div>\n"
        },
        {
            "name": "CheckboxInputDarkComponent",
            "id": "component-CheckboxInputDarkComponent-5634d167f50be07456a07d95d98105ee",
            "file": "src/app/atoms/inputs/checkbox/checkbox-input-dark/checkbox-input-dark.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-checkbox-input-dark",
            "styleUrls": [
                "./checkbox-input-dark.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./checkbox-input-dark.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "id",
                    "defaultValue": "Math.random()",
                    "line": 12,
                    "type": "number"
                },
                {
                    "name": "isChecked",
                    "line": 10,
                    "type": "boolean"
                },
                {
                    "name": "title",
                    "line": 11,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-checkbox-input-dark',\n  templateUrl: './checkbox-input-dark.component.html',\n  styleUrls: ['./checkbox-input-dark.component.scss']\n})\n\nexport class CheckboxInputDarkComponent {\n  @Input() isChecked: boolean;\n  @Input() title?: string;\n  @Input() id?: number = Math.random();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-checkbox-input-dark {\n  display: none;\n\n  &__title {\n    margin-left: 40px;\n    color: var(--secondary-color);\n    line-height: 24px;\n  }\n\n  &__label {\n    display: block;\n    position: relative;\n\n    &:after {\n      content: \"\";\n      position: absolute;\n      top: 0;\n\n      box-sizing: border-box;\n      width: 24px;\n      height: 24px;\n      border-radius: 4px;\n      border: 1px solid rgba(var(--secondary-color-code), 0.3);\n    }\n  }\n}\n\n.app-checkbox-input-dark:checked + .app-checkbox-input-dark__label {\n  &:after {\n    background-color: var(--secondary-color);\n  }\n\n  &:before {\n    content: \"\";\n    position: absolute;\n    top: 4px;\n    left: 4px;\n    z-index: 2;\n\n    box-sizing: border-box;\n    width: 16px;\n    height: 16px;\n    background: center no-repeat url('../../../../../assets/images/checkbox.svg');\n    background-size: contain;\n  }\n}\n\n",
                    "styleUrl": "./checkbox-input-dark.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div  class=\"app-checkbox-input-dark__container\">\n  <input\n    type=\"checkbox\" \n    [id]=\"id\"\n    name=\"checkbox-input-simple\" \n    class=\"app-checkbox-input-dark\"\n    [checked]=\"isChecked\"\n  >\n  <label [for]=\"id\" class=\"app-checkbox-input-dark__label\">\n    <p class=\"app-checkbox-input-dark__title fs-16-sofia-300\" *ngIf=\"title!==''\">\n      {{ title }}\n    </p>\n  </label>\n</div>\n\n"
        },
        {
            "name": "CheckboxInputSimpleComponent",
            "id": "component-CheckboxInputSimpleComponent-00a81a5282c60a0f9a74fddb58846ccb",
            "file": "src/app/atoms/inputs/checkbox/checkbox-input-simple/checkbox-input-simple.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-checkbox-input-simple",
            "styleUrls": [
                "./checkbox-input-simple.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./checkbox-input-simple.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "id",
                    "defaultValue": "Math.random()",
                    "line": 12,
                    "type": "number"
                },
                {
                    "name": "isChecked",
                    "line": 10,
                    "type": "boolean"
                },
                {
                    "name": "title",
                    "line": 11,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-checkbox-input-simple',\n  templateUrl: './checkbox-input-simple.component.html',\n  styleUrls: ['./checkbox-input-simple.component.scss']\n})\n\nexport class CheckboxInputSimpleComponent {\n  @Input() isChecked: boolean;\n  @Input() title: string;\n  @Input() id?: number = Math.random();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-checkbox-input-simple {\n  display: none;\n\n  &__title {\n    margin-left: 40px;\n    color: var(--secondary-color);\n    line-height: 24px;\n  }\n\n  &__label {\n    display: block;\n    position: relative;\n\n    &:after {\n      content: \"\";\n      position: absolute;\n      top: 0;\n\n      box-sizing: border-box;\n      width: 24px;\n      height: 24px;\n      border-radius: 4px;\n      border: 1px solid rgba(var(--secondary-color-code), 0.3);\n    }\n  }\n}\n\n.app-checkbox-input-simple:checked + .app-checkbox-input-simple__label {\n  &:after {\n    background: center no-repeat url('../../../../../assets/images/checkboxDark.svg');\n    border: 1px solid rgba(var(--secondary-color-code), 1);\n  }\n}\n",
                    "styleUrl": "./checkbox-input-simple.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div  class=\"app-checkbox-input-simple__container\">\n  <input\n    type=\"checkbox\" \n    [id]=\"id\"\n    name=\"checkbox-input-simple\" \n    class=\"app-checkbox-input-simple\"\n    [checked]=\"isChecked\"\n  >\n  <label [for]=\"id\" class=\"app-checkbox-input-simple__label\">\n    <p class=\"app-checkbox-input-simple__title fs-16-sofia-300\" *ngIf=\"title!==''\">\n      {{ title }}\n    </p>\n  </label>\n</div>\n"
        },
        {
            "name": "CheckboxInputSwitchComponent",
            "id": "component-CheckboxInputSwitchComponent-be20ecaed8aa91aa2fd7b9d1cc71769a",
            "file": "src/app/atoms/inputs/checkbox/checkbox-input-switch/checkbox-input-switch.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-checkbox-input-switch",
            "styleUrls": [
                "./checkbox-input-switch.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./checkbox-input-switch.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "id",
                    "defaultValue": "Math.random()",
                    "line": 11,
                    "type": "number"
                },
                {
                    "name": "isChecked",
                    "line": 10,
                    "type": "boolean"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-checkbox-input-switch',\n  templateUrl: './checkbox-input-switch.component.html',\n  styleUrls: ['./checkbox-input-switch.component.scss']\n})\n\nexport class CheckboxInputSwitchComponent {\n  @Input() isChecked: boolean;\n  @Input() id?: number = Math.random();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-checkbox-input-switch {\n  display: none;\n\n  &__label {\n    position: relative;\n    display: block;\n    width: 35px;\n    height: 12px;\n\n    border-radius: 18px;\n    transition: 0.3s;\n    background: rgba(var(--secondary-color-code), 0.2);\n\n    &:after {\n      content: \"\";\n      position: absolute;\n      top: -3px;\n      left: 0;\n\n      display: flex;\n      justify-content: center;\n      align-items: center;\n\n      box-sizing: border-box;\n      width: 19px;\n      height: 19px;\n      border-radius: 50%;\n      \n      background: var(--input-bg-color);\n      box-shadow: 0px 5px 8px rgba(50, 60, 111, 0.25);\n    }\n  }\n}\n\n.app-checkbox-input-switch:checked + .app-checkbox-input-switch__label {\n  background: linear-gradient(89.52deg, hsla(137, 66%, 42%, 0.2) -46.17%, rgba(2, 99, 188, 0.2) 186.99%);\n\n  &:after {\n    transform: translateX(17px);\n    background: var(--success-grad-light);\n  }\n\n  &:before {\n    content: '';\n    position: absolute;\n    top: -3px;\n    left: 17px;\n    z-index: 2;\n\n    box-sizing: border-box;\n    width: 19px;\n    height: 19px;\n    border-radius: 50%;\n\n    background: no-repeat center url('../../../../../assets/images/checkbox.svg');\n  }\n}",
                    "styleUrl": "./checkbox-input-switch.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<input\n  type=\"checkbox\" \n  [id]=\"id\"\n  name=\"checkbox-input-switch\" \n  class=\"app-checkbox-input-switch\"\n  [checked]=\"isChecked\"\n>\n<label [for]=\"id\" class=\"app-checkbox-input-switch__label\"></label>\n"
        },
        {
            "name": "CheckboxMutableGradientComponent",
            "id": "component-CheckboxMutableGradientComponent-f615c419d860bc16da067c067db3d18f",
            "file": "src/app/atoms/inputs/checkbox/checkbox-mutable-gradient/checkbox-mutable-gradient.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-checkbox-mutable-gradient",
            "styleUrls": [
                "./checkbox-mutable-gradient.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./checkbox-mutable-gradient.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "id",
                    "line": 13,
                    "type": "string"
                },
                {
                    "name": "isChecked",
                    "line": 12,
                    "type": "boolean"
                },
                {
                    "name": "onActive",
                    "line": 11,
                    "type": "boolean"
                }
            ],
            "outputsClass": [
                {
                    "name": "handleChange",
                    "defaultValue": "new EventEmitter()",
                    "line": 15,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "classes",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "onToggle",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, ViewEncapsulation, Input, OnChanges, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-checkbox-mutable-gradient',\n  templateUrl: './checkbox-mutable-gradient.component.html',\n  styleUrls: ['./checkbox-mutable-gradient.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\n\nexport class CheckboxMutableGradientComponent implements OnChanges {\n  @Input() onActive: boolean;\n  @Input() isChecked: boolean;\n  @Input() id: string;\n\n  @Output() handleChange: EventEmitter<any> = new EventEmitter();\n  \n  classes='';\n\n  onToggle = () => {\n    this.handleChange.emit(this.id)\n  }\n\n  ngOnChanges(): void {\n    this.classes = this.onActive ? 'app-checkbox-input-gradient__container active' : 'app-checkbox-input-gradient__container';\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-checkbox-input-gradient__container {\n  width: 24px;\n  height: 24px;\n\n  & > .app-checkbox-input-gradient {\n    display: none;\n  \n    &__label {\n      display: block;\n      position: relative;\n  \n      &:after {\n        content: \"\";\n        position: absolute;\n        top: 0;\n  \n        box-sizing: border-box;\n        width: 24px;\n        height: 24px;\n        border-radius: 4px;\n        border: 1px solid rgba(var(--secondary-color-code), 0.3);\n      }\n    }\n  }\n  \n  & > .app-checkbox-input-gradient:checked + .app-checkbox-input-gradient__label {\n    &:after {\n      background: var(--success-grad-light);\n      border: none;\n    }\n  \n    &:before {\n      content: \"\";\n      position: absolute;\n      top: 4px;\n      left: 4px;\n      z-index: 2;\n  \n      box-sizing: border-box;\n      width: 16px;\n      height: 16px;\n      background: center no-repeat url('../../../../../assets/images/checkbox.svg');\n      background-size: contain;\n    }\n  }\n}\n\n.app-checkbox-input-gradient__container.active {\n  & > .app-checkbox-input-gradient {\n\n    &__label {\n      &:after {\n        border: 1px solid rgba(var(--text-color-code), 0.5);\n      }\n  \n      &:hover {\n        &:after {\n          border: 1px solid rgba(var(--text-color-code), 1);\n        }\n      }\n    }\n  }\n\n  & > .app-checkbox-input-gradient:checked + .app-checkbox-input-gradient__label {\n    &:after {\n      background: var(--text-color);\n    }\n\n    &:before {\n      background: center no-repeat url('../../../../../assets/images/checkboxGradient.svg');\n    }\n  }\n}\n",
                    "styleUrl": "./checkbox-mutable-gradient.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnChanges"
            ],
            "templateData": "<div [ngClass]=\"classes\">\n  <input\n    type=\"checkbox\" \n    [id]=\"id\"\n    name=\"app-checkbox-input-gradient\" \n    class=\"app-checkbox-input-gradient\"\n    [checked]=\"isChecked\"\n    (change)=\"onToggle()\"\n  >\n  <label [for]=\"id\" class=\"app-checkbox-input-gradient__label\"></label>\n</div>\n\n"
        },
        {
            "name": "ColorPickerComponent",
            "id": "component-ColorPickerComponent-a8e8ebc8da745b92e66b1d33628d1701",
            "file": "src/app/atoms/color-picker/color-picker.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-color-picker",
            "styleUrls": [
                "./color-picker.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./color-picker.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "consoleColor",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-color-picker',\n  templateUrl: './color-picker.component.html',\n  styleUrls: ['./color-picker.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\n\nexport class ColorPickerComponent {\n  consoleColor = (event) => {\n    // your logic on color change\n    console.log(event);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".color-picker-container {\n  width: 200px;\n  height: 200px;\n}\n\n.sketch-swatches  {\n  display: none!important;\n}\n\n.color-hue.color-hue-horizontal, .alpha-checkboard, .alpha-gradient  {\n  border-radius: 30px!important;\n}\n\n.sketch-active, .grid {\n  border-radius: 50%!important;\n}\n\n.saturation-black, .saturation-white, .color-saturation {\n  border-radius: 5px!important;\n}\n\n.wrap > input {\n  border-radius: 5px!important;\n}\n\n.color-saturation {\n  margin-bottom: 15px;\n}\n\n.sketch-picker {\n  box-shadow: 0px 40px 48px -1px rgba(var(--secondary-color-code), 0.3)!important;\n}",
                    "styleUrl": "./color-picker.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"color-picker-container\">\n  <color-sketch (onChange)=\"consoleColor($event)\"></color-sketch>\n</div>\n"
        },
        {
            "name": "ColumnChartComponent",
            "id": "component-ColumnChartComponent-679a97af5c47fbcfb456ff840d01d377",
            "file": "src/app/atoms/charts/column-chart/column-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-column-chart",
            "styleUrls": [
                "./column-chart.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./column-chart.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "categories",
                    "line": 11,
                    "type": "string[]"
                },
                {
                    "name": "chartHeight",
                    "line": 15,
                    "type": "number"
                },
                {
                    "name": "colorsFromUser",
                    "line": 12,
                    "type": "string[]"
                },
                {
                    "name": "columnWidth",
                    "line": 16,
                    "type": "number"
                },
                {
                    "name": "data",
                    "line": 13,
                    "type": "number[]"
                },
                {
                    "name": "maxValue",
                    "line": 14,
                    "type": "number"
                },
                {
                    "name": "step",
                    "line": 17,
                    "type": "number"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "colors",
                    "defaultValue": "[\n    \"#c98392\", \"#9ED0E0\", \"#F6BC59\", \"#645FCE\", \"#9ED0E0\", \"#612C83\", \"#FF9F68\", \"#adc9b2\", \"#c98392\", \"#9ED0E0\", \"#F6BC59\",\n    \"#c98392\", \"#9ED0E0\", \"#F6BC59\", \"#645FCE\", \"#9ED0E0\", \"#612C83\", \"#FF9F68\", \"#adc9b2\", \"#c98392\", \"#9ED0E0\", \"#F6BC59\"\n  ]",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "columns",
                    "defaultValue": "0",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "container",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'container'"
                        }
                    ]
                },
                {
                    "name": "gridValues",
                    "defaultValue": "[]",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "isTipVisible",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "list",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'list'"
                        }
                    ]
                },
                {
                    "name": "rows",
                    "defaultValue": "0",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "rowValues",
                    "defaultValue": "[]",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "setStartValues",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 67
                },
                {
                    "name": "showTips",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "tips",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'tips'"
                        }
                    ]
                },
                {
                    "name": "tipsBottom",
                    "defaultValue": "0",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "tipsLeft",
                    "defaultValue": "0",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "width",
                    "defaultValue": "0",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 20
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 95
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 91
                }
            ],
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "mouseover",
                    "args": [
                        {
                            "name": "event",
                            "type": "any"
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "line": 44
                },
                {
                    "name": "window:resize",
                    "args": [
                        {
                            "name": "event",
                            "type": "any"
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "line": 54
                }
            ],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, ElementRef, HostListener, Input, OnChanges, OnInit, ViewChild } from '@angular/core';\nimport { getRandomColor } from './helpers';\n\n@Component({\n  selector: 'app-column-chart',\n  templateUrl: './column-chart.component.html',\n  styleUrls: ['./column-chart.component.scss']\n})\n\nexport class ColumnChartComponent implements OnInit, OnChanges {\n  @Input() categories: string[];\n  @Input() colorsFromUser: string[];\n  @Input() data: number[];\n  @Input() maxValue: number;\n  @Input() chartHeight: number;\n  @Input() columnWidth: number;\n  @Input() step: number;\n\n  isTipVisible = false;\n  width = 0;\n  rows = 0;\n  columns = 0;\n  rowValues = [];\n  gridValues = [];\n  tipsBottom = 0;\n  tipsLeft = 0;\n  colors = [\n    \"#c98392\", \"#9ED0E0\", \"#F6BC59\", \"#645FCE\", \"#9ED0E0\", \"#612C83\", \"#FF9F68\", \"#adc9b2\", \"#c98392\", \"#9ED0E0\", \"#F6BC59\",\n    \"#c98392\", \"#9ED0E0\", \"#F6BC59\", \"#645FCE\", \"#9ED0E0\", \"#612C83\", \"#FF9F68\", \"#adc9b2\", \"#c98392\", \"#9ED0E0\", \"#F6BC59\"\n  ];\n\n  @ViewChild('list') list: ElementRef;\n  @ViewChild('tips') tips: ElementRef;\n  @ViewChild('container') container: ElementRef;\n\n  showTips = (event, index) => {\n    this.tipsLeft = index * this.columnWidth + 47 - this.list.nativeElement.scrollLeft;\n    const height = +event.target.style.height.slice(0, -2);\n    this.tipsBottom = height / 2 + 32;\n    this.isTipVisible = true;\n  }\n\n  @HostListener('mouseover', ['$event'])\n  onMouseOver(event: any) {\n    const element: HTMLElement = event.target;\n    if (this.tips) {\n      if (!(element.classList.contains('chart-column__value') || this.tips.nativeElement.contains(event.target))) {\n        this.isTipVisible = false;\n      }\n    }\n  }\n\n  @HostListener('window:resize', ['$event'])\n  onResize(event: any) {\n    const minColumnsNumber = Math.floor((this.container.nativeElement.clientWidth - 66) / this.columnWidth);\n    if (minColumnsNumber >= this.data.length) {\n      this.columns = minColumnsNumber;\n      const grid = [];\n      for (let i = 0; i < this.rows * this.columns; i++) {\n        grid.push(i);\n      }\n      this.gridValues = grid;\n      this.width = this.columns * this.columnWidth;\n    }\n  }\n\n  setStartValues = () => {\n    if (!this.colorsFromUser && this.data.length > this.colors.length) {\n      const updatedColorsList = [];\n      for (let i = 0; i < this.data.length; i++) {\n        updatedColorsList.push(getRandomColor());\n      }\n      this.colors = updatedColorsList;\n    }\n    const minColumnsNumber = Math.floor((document.querySelector('.chart-column').clientWidth - 66) / this.columnWidth);\n    this.rows = this.maxValue / this.step;\n    this.columns = this.data.length > minColumnsNumber ? this.data.length : minColumnsNumber;\n    this.width = this.columns * this.columnWidth;\n    const values = [];\n    for (let i = 0; i <= this.rows; i++) {\n      values.push(i * this.step);\n    }\n    this.rowValues = values.reverse();\n    const grid = [];\n    for (let i = 0; i < this.rows * this.columns; i++) {\n      grid.push(i);\n    }\n    this.gridValues = grid;\n  }\n\n  ngOnInit(): void {\n    this.setStartValues();\n  }\n\n  ngOnChanges() {\n    this.setStartValues();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".chart-column {\n  display: flex;\n  height: 420px;\n\n  &__container {\n    width: 100%;\n    height: 100%;\n    padding: 32px;\n    margin-top: 100px;\n    position: relative;\n  }\n\n  &__list {\n    display: flex;\n    align-items: flex-end;\n    position: relative;\n    width: fit-content;\n  }\n\n  &__list-wrapper {\n    max-width: 100%;\n    overflow-x: scroll;\n    overflow-y: hidden;\n    height: auto;\n\n    display: flex;\n    padding-bottom: 50px;\n    scrollbar-width: thin;\n\n    &::-webkit-scrollbar {\n      height: 5px;\n    }\n    \n    &::-webkit-scrollbar-track {\n      -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.3); \n      box-shadow: inset 0 0 6px rgba(0,0,0,0.3);\n      -webkit-border-radius: 20px;\n      border-radius: 20px;\n    }\n    \n    &::-webkit-scrollbar-thumb {\n      -webkit-border-radius: 20px;\n      border-radius: 20px;\n      background: var(--success-grad-light); \n      -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.5); \n      box-shadow: inset 0 0 6px rgba(0,0,0,0.5); \n    }\n  }\n\n  &__item {\n    padding: 0 8px;\n    position: relative;\n  }\n\n  &__value {\n    border-radius: 10px;\n    transition: 0.3s;\n\n    &:hover {\n      cursor: pointer;\n      opacity: 0.9;\n    }\n  }\n\n  &__grid {\n    display: grid;\n    width: 100%;\n    position: absolute;\n    left: 0;\n\n    &-ceil {\n      width: 100%;\n      height: 100%;\n      border: 0.1px solid rgba(var(--secondary-color-code), 0.05);\n    }\n  }\n\n  &__yaxis {\n    position: relative;\n    margin-right: 30px;\n  }\n\n  &__yaxis-value {\n    height: 100%;\n    display: flex;\n    align-items: flex-start;\n    color: rgba(var(--secondary-color-code), 0.3);\n  }\n\n  &__xaxis-name {\n    height: 40px;\n    position: absolute;\n    bottom: -55px;\n    right: 0px;\n\n    text-align: center;\n    text-transform: uppercase;\n    color: rgba(var(--secondary-color-code), 0.3);\n  }\n\n  &__tips {\n    width: 228px;\n    padding: 12px;\n    position: absolute;\n    z-index: 4;\n    \n    background-color: rgba(var(--secondary-color-code), 1);\n    border-radius: 12px;\n    color: var(--asimetric-bg-color);\n\n    &:after {\n      content: '';\n      position: absolute;\n      bottom: -6px;\n      left: calc(50% - 4px);\n      z-index: 4;\n\n      height: 7px;\n      width: 16px;\n\n      background: url('../../../../assets/images/triangle.png') center no-repeat;\n      background-size: cover;\n    }\n\n    &-item {\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      width: 100%;\n      margin: 8px 0;\n    }\n\n    &-text {\n      display: flex;\n      align-items: center;\n    }\n\n    &-color {\n      display: block;\n      width: 6px;\n      height: 6px;\n      border-radius: 50%;\n      margin-right: 8px;\n    }\n  }\n}\n\n\n",
                    "styleUrl": "./column-chart.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit",
                "OnChanges"
            ],
            "templateData": "<div class=\"chart-column__container\"  [ngStyle]=\"{ 'height': chartHeight+70+'px' }\">\n  <div id=\"chart-column\" class=\"chart-column\" #container>\n    <div class=\"chart-column__yaxis\">\n    <div \n      class=\"chart-column__yaxis-value fs-14-gramm-400\"\n      [ngStyle]=\"{ 'height': chartHeight/(rows)+'px' }\"\n      *ngFor=\"let rowValue of rowValues\"\n    >\n      <span>{{ rowValue }}</span>\n    </div>\n  </div>\n    <div class=\"chart-column__list-wrapper\" #list [ngStyle]=\"{ 'height': chartHeight+60+'px' }\">\n      <ul class=\"chart-column__list\" [ngStyle]=\"{ 'width': width+'px' }\">\n        <div\n          class=\"chart-column__grid\"\n          [ngStyle]=\"\n            { 'grid-template-columns': 'repeat(' + columns + ', ' + columnWidth+'px)',  \n            'grid-auto-rows': chartHeight/rows+'px', 'height': chartHeight+'px' }\"\n        >\n          <div class=\"chart-column__grid-ceil\" *ngFor=\"let gridValue of gridValues\">\n          </div>\n        </div>\n        <li class=\"chart-column__item\" *ngFor=\"let value of data; let i = index;\">\n          <div \n            (mouseenter)=\"showTips($event, i)\"\n            class=\"chart-column__value\"\n            [ngStyle]=\"{ 'background-color': colors[i], 'height': chartHeight*value/maxValue+'px', 'width': columnWidth-16+'px' }\"\n          >\n          </div>\n          <div class=\"fs-12-gramm-400 chart-column__xaxis-name\" [ngStyle]=\"{ 'width': columnWidth+'px' }\">\n            {{ categories[i] }}\n          </div>\n        </li>\n      </ul>\n    </div>\n  </div>\n  <div \n    *ngIf=\"isTipVisible\" \n    class=\"chart-column__tips\" \n    #tips\n    [ngStyle]=\"{ 'bottom': tipsBottom+'px', 'left': tipsLeft+'px' }\"\n  >\n    <ul class=\"chart-column__tips-list\">\n      <li class=\"chart-column__tips-item\" *ngFor=\"let item of data; let i=index\">\n        <div class=\"chart-column__tips-text fs-12-sofia-300\">\n          <div class=\"chart-column__tips-color\" [ngStyle]=\"{ 'background-color': colors[i] }\"></div>\n          {{ categories[i] }}\n        </div>\n        <div class=\"chart-column__tips-value fs-16-sofia-600\">{{ data[i] }}</div>\n      </li>\n    </ul>\n  </div>\n</div>\n"
        },
        {
            "name": "CompositeMenuComponent",
            "id": "component-CompositeMenuComponent-d387b2c598d65dac5f803a5094b54cdd",
            "file": "src/app/molecules/menu/composite-menu/composite-menu.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-composite-menu",
            "styleUrls": [
                "./composite-menu.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./composite-menu.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "items",
                    "line": 16,
                    "type": "Item[]"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "active",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methodsClass": [
                {
                    "name": "handlClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "any"
                        },
                        {
                            "name": "i",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "i",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, ViewEncapsulation } from '@angular/core';\n\ninterface Item {\n  title: string;\n  sections: string[]\n}\n\n@Component({\n  selector: 'app-composite-menu',\n  templateUrl: './composite-menu.component.html',\n  styleUrls: ['./composite-menu.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\n\nexport class CompositeMenuComponent {\n  @Input() items: Item[];\n\n  active: string = '';\n\n  handlClick(event: any, i: string) {\n    event.preventDefault();\n    this.active = i;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-composite-menu {\n  width: fit-content;\n  padding: 22px 72px 22px 32px;\n  min-width: 260px;\n  \n  border-radius: 12px 30px;\n  background-color: var(--text-color);\n  box-shadow: 0px 50px 70px rgba(44, 59, 82, 0.15);\n  \n  &__item {\n    width: fit-content;\n    margin-top: 10px;\n  }\n\n  &__section {\n    padding-left: 16px;\n  }\n}\n\n.nav-link-secondary {\n  text-transform: capitalize!important;\n}",
                    "styleUrl": "./composite-menu.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<ul class=\"app-composite-menu\">\n  <li \n    class=\"app-composite-menu__item\"\n    *ngFor=\"let item of items; let i = index\" \n  >   \n    <app-nav-link\n      [isActive]=\"active === i + item.title\"\n      [title]=\"item.title\" \n      classes=\"nav-link-secondary fs-12-gramm-400\"\n      (click)=\"handlClick($event, i + item.title)\"\n    >\n    </app-nav-link>\n    <ul class=\"app-composite-menu__section\">\n      <li \n        class=\"app-composite-menu__item\"\n        *ngFor=\"let section of item.sections; let i = index\" \n      >\n        <app-nav-link\n          [isActive]=\"active === i + section\"\n          [title]=\"section\" \n          classes=\"nav-link-secondary fs-12-gramm-400\"\n          (click)=\"handlClick($event, i + section)\"\n        >\n        </app-nav-link>\n      </li>\n    </ul>\n  </li>\n</ul>"
        },
        {
            "name": "CustomizedElementComponent",
            "id": "component-CustomizedElementComponent-5e9d04ecde1144241ec0602984dc48e5",
            "file": "src/app/molecules/customized-element/customized-element.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-customized-element",
            "styleUrls": [
                "./customized-element.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./customized-element.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "initialState",
                    "line": 17,
                    "type": "any[]"
                },
                {
                    "name": "sectionId",
                    "line": 18,
                    "type": "number"
                }
            ],
            "outputsClass": [
                {
                    "name": "addComponentToSection",
                    "defaultValue": "new EventEmitter()",
                    "line": 22,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "deleteComponentFromSection",
                    "defaultValue": "new EventEmitter()",
                    "line": 23,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "editSection",
                    "defaultValue": "new EventEmitter()",
                    "line": 21,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "setHoverElement",
                    "defaultValue": "new EventEmitter()",
                    "line": 19,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "setNoHoverElement",
                    "defaultValue": "new EventEmitter()",
                    "line": 20,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "activeBlockNumber",
                    "defaultValue": "-1",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "componentsList",
                    "defaultValue": "[]",
                    "type": "AddItem[]",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "customizedElement",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'customizedElement'"
                        }
                    ]
                },
                {
                    "name": "isMobile",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "isVisibleButtonsBlock",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "setActiveBlockNumber",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "setIsVisibleButtonsBlock",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 40
                }
            ],
            "methodsClass": [
                {
                    "name": "addItem",
                    "args": [
                        {
                            "name": "index",
                            "type": "number"
                        },
                        {
                            "name": "type",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "type",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "callAddComponentToSection",
                    "args": [
                        {
                            "name": "index",
                            "type": ""
                        },
                        {
                            "name": "type",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 84,
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "type",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "callEditSection",
                    "args": [
                        {
                            "name": "elementId",
                            "type": ""
                        },
                        {
                            "name": "data",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 92,
                    "jsdoctags": [
                        {
                            "name": "elementId",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "data",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "deleteComponent",
                    "args": [
                        {
                            "name": "index",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 65,
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "editSectionElement",
                    "args": [
                        {
                            "name": "props",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "jsdoctags": [
                        {
                            "name": "props",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "indexTracker",
                    "args": [
                        {
                            "name": "index",
                            "type": ""
                        },
                        {
                            "name": "id",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 122,
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "id",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 114
                },
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 126
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 118
                },
                {
                    "name": "setInitialStateOfComponent",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 101
                }
            ],
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "window:resize",
                    "args": [
                        {
                            "name": "event",
                            "type": "any"
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "line": 35
                }
            ],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { \n  Component, EventEmitter, Input, ViewEncapsulation, OnInit, OnChanges, \n  Output, ElementRef, ViewChild, HostListener, AfterViewInit \n} from '@angular/core';\nimport { AddItem } from './add-dynamic-component/add-item';\nimport { AddService } from './add-dynamic-component/add.service';\nimport { getInitialDataByType, getEditedDataByType } from './helpers';\n\n@Component({\n  selector: 'app-customized-element',\n  templateUrl: './customized-element.component.html',\n  styleUrls: ['./customized-element.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\n\nexport class CustomizedElementComponent implements OnInit, OnChanges, AfterViewInit {\n  @Input() initialState: any[];\n  @Input() sectionId: number;\n  @Output() setHoverElement?: EventEmitter<any> = new EventEmitter();\n  @Output() setNoHoverElement?: EventEmitter<any> = new EventEmitter();\n  @Output() editSection?: EventEmitter<any> = new EventEmitter();\n  @Output() addComponentToSection?: EventEmitter<any> = new EventEmitter();\n  @Output() deleteComponentFromSection?: EventEmitter<any> = new EventEmitter();\n\n  componentsList: AddItem[] = [];\n  isVisibleButtonsBlock = false;\n  activeBlockNumber = -1;\n  isMobile: boolean;\n  \n  constructor(private addService: AddService) {}\n\n  @ViewChild('customizedElement') customizedElement: ElementRef;\n  \n  @HostListener('window:resize', ['$event'])\n  onResize(event: any) {\n    this.isMobile = this.customizedElement.nativeElement.clientWidth < 500;\n  }\n\n  /// adding buttons during hover\n  setIsVisibleButtonsBlock = (value: boolean) => {\n    this.isVisibleButtonsBlock = value;\n  }\n\n  setActiveBlockNumber = (index: number) => {\n    this.activeBlockNumber = index;\n    if (index !== -1) {\n      this.setHoverElement.emit();\n    } else {\n      this.setNoHoverElement.emit();\n    }\n  }\n\n  /// managing items(tables. lists, texts) from current component\n  addItem(index: number, type: string) {\n    let initialData = { ...getInitialDataByType(type) };\n    const newAdItem = this.addService.getAds(type, {\n      ...initialData,\n      sectionId: this.sectionId,\n      sectionElementId: index + 1\n    });\n    this.componentsList.splice(index + 1, 0, newAdItem);\n    this.callAddComponentToSection(index, type)\n  }\n\n  deleteComponent(index: number) {\n    this.componentsList.splice(index, 1);\n    this.deleteComponentFromSection.emit({ index: index, sectionId: this.sectionId })\n  }\n\n  editSectionElement(props) {\n    if (props.sectionId === this.sectionId) {\n      const editedData = getEditedDataByType(props.type, props)\n      const newAdItem = this.addService.getAds(props.type, {\n        ...editedData,\n        sectionId: this.sectionId,\n        sectionElementId: props.elementId\n      });\n      this.callEditSection(props.elementId, { ...editedData }) \n      this.componentsList[props.elementId] = newAdItem;\n    }\n  }\n\n  /// if you want to pass props to sections List. managing items(tables. lists, texts) from parent component\n  callAddComponentToSection(index, type) {\n    this.addComponentToSection.emit({\n      sectionId: this.sectionId,\n      index,\n      type,\n    })\n  }\n\n  callEditSection (elementId, data) {\n    this.editSection.emit({\n      sectionId: this.sectionId,\n      sectionElementId: elementId,\n      data\n    })\n  }\n\n  /// setting initial state of component\n  setInitialStateOfComponent() {\n    const initialComponentsList = this.initialState.map(\n      (component, index) => {\n        return this.addService.getAds(component.type, {\n            ...component.dataFromParent, \n            sectionId: this.sectionId,\n            sectionElementId: index\n          })\n      });\n    this.componentsList = [...initialComponentsList];\n  }\n\n\n  ngAfterViewInit() {\n    this.isMobile = this.customizedElement.nativeElement.clientWidth < 500;\n  }\n\n  ngOnInit(): void {\n    this.setInitialStateOfComponent();\n  }\n\n  indexTracker(index, id) {\n    return id;\n  }\n\n  ngOnChanges(): void {\n    console.log('changes')\n    this.setInitialStateOfComponent();\n  }\n}",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-customized-element {\n  color: var(--secondary-color);\n  border: 1px dashed transparent;\n  border-radius: 8px;\n  transition: 0.3s;\n\n  &:hover {\n    cursor: pointer;\n  }\n\n  &__container {\n    border: 1px dashed transparent;\n    border-radius: 8px;\n    transition: 0.3s;\n    position: relative;\n    width: 100%;\n    padding-right: 3%;\n    padding: 10px 11px 8px 18px;\n\n\n    &:hover {\n      cursor: pointer;\n      border: 1px dashed rgba(var(--secondary-color-code), 0.5);\n      border-radius: 8px;\n    }\n  }\n\n  &__button-delete {\n    width: 6px;\n    height: 6px;\n    background-color: transparent;\n    border: none;\n    position: absolute;\n    top: calc(50% - 21px);\n    right: 2%;\n\n    z-index: 20;\n    &.delete-table {\n      top: 22px;\n      right: 25px;\n    }\n  }\n\n  &__title {\n    margin-bottom: 18px;\n  }\n\n  &__text{\n    margin-bottom: 18px;\n  }\n\n  &__buttons-container {\n    display: flex;\n    flex-wrap: wrap;\n    margin-bottom: 10px;\n    \n    & * {\n      margin-right: 16px;\n    }\n  \n    & :last-child {\n      margin-right: 0;\n    }\n  }\n}\n\n.app-dynamic-table, .app-dynamic-list__container {\n  margin-bottom: 16px!important;\n}\n\napp-small-light-add-button {\n  margin-bottom: 5px;\n}\n\n@media screen and (max-width: 550px) {\n  // .app-customized-element {\n\n  //   &__buttons-container {\n  //     flex-direction: column;\n  //   }\n  // }\n}",
                    "styleUrl": "./customized-element.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "addService",
                        "type": "AddService"
                    }
                ],
                "line": 28,
                "jsdoctags": [
                    {
                        "name": "addService",
                        "type": "AddService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnChanges",
                "AfterViewInit"
            ],
            "templateData": "<div class=\"app-customized-element\" #customizedElement>\n  <div *ngIf=\"componentsList.length\">\n    <div *ngFor=\"let component of componentsList; let i = index; trackBy: indexTracker\">\n      <div \n        (mouseenter)=\"setActiveBlockNumber(i)\"\n        (mouseleave)=\"setActiveBlockNumber(-1)\"\n      >\n        <div class=\"app-customized-element__container\">\n          <app-add-dynamic (handler)=\"editSectionElement($event)\" [component]=\"component\"></app-add-dynamic>\n          <button \n            type=\"button\"\n            [ngClass]=\"component.component.name === 'DynamicTableComponent'?'app-customized-element__button-delete delete-table': 'app-customized-element__button-delete'\"\n            (click)=\"deleteComponent(i)\"\n            *ngIf=\"activeBlockNumber === i\"\n          >\n            <img src=\"assets/images/deleteX.png\" alt=\"delete\">\n          </button>\n          <div\n            class=\"app-customized-element__buttons-container\"\n            [ngStyle]=\"isMobile && {'justify-content': 'space-around'}\"\n            *ngIf=\"activeBlockNumber === i\"\n          >\n            <app-small-light-add-button\n              [title]=\"'Add table'\"\n              [classes]=\"'app-small-light-add-button fs-14-gramm-400-light'\"\n              (click)=\"addItem(i, 'table')\"\n            >\n            </app-small-light-add-button>\n            <app-small-light-add-button\n              [title]=\"'Add paragraph'\"\n              [classes]=\"'app-small-light-add-button fs-14-gramm-400-light'\"\n              (click)=\"addItem(i, 'text')\"\n            >\n            </app-small-light-add-button>\n            <app-small-light-add-button\n              [title]=\"'Add list'\"\n              [classes]=\"'app-small-light-add-button fs-14-gramm-400-light'\"\n              (click)=\"addItem(i, 'list')\"\n            >\n            </app-small-light-add-button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n\n"
        },
        {
            "name": "DarkAddButtonComponent",
            "id": "component-DarkAddButtonComponent-566bb988094a61106f7555625eb909bf",
            "file": "src/app/atoms/buttons/add-buttons/dark-add-button/dark-add-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-dark-add-button",
            "styleUrls": [
                "./dark-add-button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./dark-add-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dark-add-button',\n  templateUrl: './dark-add-button.component.html',\n  styleUrls: ['./dark-add-button.component.scss']\n})\nexport class DarkAddButtonComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-dark-add-button {\n  padding: 6px 11px;\n  height: 24px;\n  background-color: var(--secondary-color);\n  border: none;\n  border-radius: 4px;\n\n  &__image {\n    width: 12px;\n    height: 12px;\n  }\n}",
                    "styleUrl": "./dark-add-button.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<button type=\"button\" class=\"app-dark-add-button\">\n  <img src=\"assets/images/plus-white.png\" alt=\"plus\">\n</button>\n"
        },
        {
            "name": "DateMenuComponent",
            "id": "component-DateMenuComponent-a05d540f234a6c93bca5154b3dc73947",
            "file": "src/app/molecules/menu/date-menu/date-menu.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-date-menu",
            "styleUrls": [
                "./date-menu.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./date-menu.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "items",
                    "line": 10,
                    "type": "string[]"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "active",
                    "defaultValue": "0",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "handlClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "any"
                        },
                        {
                            "name": "i",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "i",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-date-menu',\n  templateUrl: './date-menu.component.html',\n  styleUrls: ['./date-menu.component.scss']\n})\n\nexport class DateMenuComponent {\n  @Input() items: string[];\n\n  active: number = 0;\n\n  handlClick(event: any, i: number) {\n    event.preventDefault();\n    this.active = i;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-date-menu {\n  display: flex;\n  align-items: center;\n\n  &__list {\n    display: flex;\n    align-items: center;\n  }\n\n  &__item {\n    padding: 0 10px 5px;\n  }\n\n  &__container {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    height: 46px;\n    padding: 0 13px;\n    margin-left: 20px;\n\n    border: 1px solid rgba(var(--secondary-color-code), 0.3);\n    border-radius: 12px;\n\n    & > img {\n      height: 18px;\n      width: 18px;\n    }\n  }\n}",
                    "styleUrl": "./date-menu.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"app-date-menu\">\n  <ul class=\"app-date-menu__list\">\n    <li \n      class=\"app-date-menu__item\"\n      *ngFor=\"let item of items; let i = index\" \n    >\n      <app-nav-link\n        [isActive]=\"active === i\"\n        [title]=\"item\" \n        classes=\"nav-link-secondary nav-link-highlited fs-12-gramm-400\"\n        (click)=\"handlClick($event, i)\"\n      >\n      </app-nav-link>\n    </li>\n  </ul>\n  <div class=\"app-date-menu__container\">\n    <img src='assets/images/calendar.png' alt=\"calendar\" />\n  </div>\n</div>\n"
        },
        {
            "name": "DynamicListComponent",
            "id": "component-DynamicListComponent-376bd43b0489c6e20418029d3d19a406",
            "file": "src/app/atoms/tables/dynamic-list/dynamic-list.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-dynamic-list",
            "styleUrls": [
                "./dynamic-list.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./dynamic-list.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "line": 10,
                    "type": "any"
                }
            ],
            "outputsClass": [
                {
                    "name": "handler",
                    "defaultValue": "new EventEmitter()",
                    "line": 11,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "dynamicContainer",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'dynamicContainer'"
                        }
                    ]
                },
                {
                    "name": "dynamicList",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'dynamicList'"
                        }
                    ]
                },
                {
                    "name": "handlePressKey",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "isActive",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "listTitle",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "setData",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 54
                },
                {
                    "name": "titles",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "indexTracker",
                    "args": [
                        {
                            "name": "index",
                            "type": ""
                        },
                        {
                            "name": "id",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 50,
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "id",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 63
                },
                {
                    "name": "setActive",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16
                }
            ],
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "document:click",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event"
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "line": 24
                }
            ],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, ViewChild, OnChanges, ElementRef, Input, OnInit, EventEmitter, Output, HostListener } from '@angular/core';\n\n@Component({\n  selector: 'app-dynamic-list',\n  templateUrl: './dynamic-list.component.html',\n  styleUrls: ['./dynamic-list.component.scss'],\n})\n\nexport class DynamicListComponent implements OnInit, OnChanges {\n  @Input() data: any;\n  @Output() handler: EventEmitter<any> = new EventEmitter()\n  titles: string[];\n  listTitle: string;\n  isActive: boolean;\n\n  setActive() {\n    this.isActive = true;\n  }\n\n  @ViewChild('dynamicList') dynamicList: ElementRef; \n  @ViewChild('dynamicContainer') dynamicContainer: ElementRef; \n\n  @HostListener('document:click', ['$event'])\n  onClick(event: Event) {\n    if (!this.dynamicContainer.nativeElement.contains(event.target) && this.isActive) {\n      this.handler.emit(\n        {\n          sectionId: this.data.sectionId,\n          elementId: this.data.sectionElementId,\n          type: 'list',\n          titles: this.titles,\n          listTitle: this.listTitle\n        }\n      )\n      this.isActive = false;\n    }\n  }\n\n  handlePressKey = (event, i) => {\n    if (event.key === 'Enter') {\n      event.preventDefault();\n      this.titles.splice(i + 1, 0, 'Type text here');\n      setTimeout(() => {\n        const inputs = this.dynamicList.nativeElement.querySelectorAll('.app-dynamic-list__input');\n        (inputs[i + 1]as HTMLElement).focus();\n      }, 100)\n    }\n  }\n\n  indexTracker(index, id) {\n    return index;\n  }\n\n  setData = () => {\n    this.listTitle = this.data.listTitle || 'Put title';\n    this.titles = this.data.titles || ['Text'];\n  }\n\n  ngOnChanges() {\n    this.setData();\n  }\n\n  ngOnInit() {\n    this.setData();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-dynamic-list {\n  width: 95%;\n  overflow-x: hidden;\n\n  &__input {\n    border: none;\n    background-color: transparent;\n    color: var(--secondary-color);\n    font-style: italic;\n    width: 100%;\n    padding-right: 15px;\n  }\n\n  &__title {\n    width: calc(100% + 35px);\n    padding-right: 35px;\n    margin-bottom: 18px;\n    color: var(--secondary-color);\n    border: none;\n    background-color: transparent;\n    text-transform: capitalize;\n  }\n\n  &_title-wrapper {\n    width: 100%;\n    overflow: hidden;\n  }\n\n  &__item {\n    display: flex;\n    align-items: center;\n    margin: 12px 0;\n    margin-right: -15px;\n  }\n\n  &__dot {\n    width: 6px;\n    height: 6px;\n    border-radius: 50%;\n    background-color: var(--secondary-color);\n    margin-right: 18px;\n  }\n}",
                    "styleUrl": "./dynamic-list.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit",
                "OnChanges"
            ],
            "templateData": "<div [id]=\"data.sectionElementId+data.sectionId\" class=\"app-dynamic-list__container\" (click)=\"setActive()\" #dynamicContainer>\n  <!-- <input \n    class=\"app-dynamic-list__title fs-16-sofia-600\"\n    type=\"text\"\n    [(ngModel)]=\"listTitle\"  \n  /> -->\n  <div class=\"app-dynamic-list__title-wrapper\">\n    <textarea\n      autosize\n      class=\"app-dynamic-list__title fs-16-sofia-600\"\n      [(ngModel)]=\"listTitle\"  \n      spellcheck=\"false\"\n    >\n    </textarea>\n  </div>\n  <ul class=\"app-dynamic-list\" #dynamicList>\n    <li \n      class=\"app-dynamic-list__item\" \n      *ngFor=\"let title of titles; let i = index; trackBy:indexTracker\"\n      [title]=\"title\"\n      [id]=\"data.sectionElementId+data.sectionId + i\"\n    >\n      <div class=\"app-dynamic-list__dot\"></div>\n      <textarea\n        autosize\n        class=\"app-dynamic-list__input fs-16-sofia-300\" \n        [(ngModel)]=\"titles[i]\" \n        (keypress)=\"handlePressKey($event, i)\"\n        spellcheck=\"false\"\n      >\n      </textarea>\n    </li>\n  </ul>\n</div>\n"
        },
        {
            "name": "DynamicSectionsListComponent",
            "id": "component-DynamicSectionsListComponent-c5d5b2de44be8dc8d25f72b081c1b014",
            "file": "src/app/organisms/dynamic-sections-list/dynamic-sections-list.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-dynamic-sections-list",
            "styleUrls": [
                "./dynamic-sections-list.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./dynamic-sections-list.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "initialSectionsList",
                    "line": 11
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "activeSection",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "addComponentToSection",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "deleteComponentFromSection",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 49
                },
                {
                    "name": "editSection",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "handleHover",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 66
                },
                {
                    "name": "isElementActive",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "isSectionActive",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "sections",
                    "defaultValue": "[]",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "setHoverElement",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 56
                },
                {
                    "name": "setNoHoverElement",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 61
                }
            ],
            "methodsClass": [
                {
                    "name": "addSection",
                    "args": [
                        {
                            "name": "index",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "indexTracker",
                    "args": [
                        {
                            "name": "index",
                            "type": "number"
                        },
                        {
                            "name": "value",
                            "type": "any"
                        }
                    ],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 87,
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "value",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 91
                },
                {
                    "name": "scrollToActive",
                    "args": [
                        {
                            "name": "index",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\n \n@Component({\n  selector: 'app-dynamic-sections-list',\n  templateUrl: './dynamic-sections-list.component.html',\n  styleUrls: ['./dynamic-sections-list.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\n\nexport class DynamicSectionsListComponent implements OnInit {\n  @Input() initialSectionsList;\n  sections = [];\n  activeSection: number;\n  isSectionActive: boolean = false;\n  isElementActive: boolean = false;\n  constructor() { }\n\n  scrollToActive(index) {\n    const id = this.sections[index].sectionId;\n    const element: HTMLElement = document.querySelector('#id'+id);\n    element.scrollIntoView();\n  }\n\n  editSection = (props) => {\n    const indexOfSectionToEdit = this.sections.findIndex(section => section.sectionId === props.sectionId);\n    this.sections[indexOfSectionToEdit].initialState[props.sectionElementId].dataFromParent = props.data;\n  }\n\n  addComponentToSection = ({ sectionId, index, type }) => {\n    let initialData;\n    switch(type) {\n      case 'text': \n        initialData = { title: 'Your new paragraph' };\n        break;\n      case 'list': \n        initialData = { listTitle: 'Put list title', titles: ['Type text here'] };\n        break;\n      case 'table': \n        initialData = { heads: ['text 1'], tableData: [{ 'text 1' : '1.1. Text', }, { 'text 1' : '1.1. Text', }] };\n        break;\n    }\n    const dataOfNewComponent = { type, dataFromParent: initialData };\n    const indexOfSectionToEdit = this.sections.findIndex(section => section.sectionId === sectionId);\n    const newState = [...this.sections[indexOfSectionToEdit].initialState];\n    newState.splice(index + 1, 0, dataOfNewComponent);\n    this.sections[indexOfSectionToEdit].initialState  = [...newState];\n  }\n\n  deleteComponentFromSection = ({ index, sectionId }) => {\n    const indexOfSectionToEdit = this.sections.findIndex(section => section.sectionId === sectionId);\n    const newState = [...this.sections[indexOfSectionToEdit].initialState];\n    newState.splice(index, 1);\n    this.sections[indexOfSectionToEdit].initialState  = [...newState];\n  }\n\n  setHoverElement = () => {\n    this.isElementActive = true;\n    this.isSectionActive = false;\n  }\n\n  setNoHoverElement = () => {\n    this.isElementActive = false;\n    this.isSectionActive = true;\n  }\n\n  handleHover = (event: any, index: number) => {\n    this.isSectionActive = index !== -1;\n    this.activeSection = index;\n  }\n\n  addSection(index: number) {\n    const initialSectionState =  [{\n      type: 'text',\n      dataFromParent: {\n        title: `For the purpose of this Privacy Policy, we are a Data Controller of your personal information. Our legal basis for collecting and using your personal information, as described in this Privacy Policy, depends on the information we collect and the specific context in which we collect it. We may process your personal information because:`\n      }\n    },]\n    this.sections.push(\n      {\n        initialState: [...initialSectionState],\n        title: `New section ${index + 1}`,\n        sectionId: Date.now(),\n      }\n    );\n  }\n\n  indexTracker(index: number, value: any) {\n    return index;\n  }\n\n  ngOnInit(): void {\n    if (this.sections.length === 0 && !this.initialSectionsList) {\n      this.addSection(0);\n    }\n    if (this.initialSectionsList) {\n      this.sections = this.initialSectionsList\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-dynamic-sections-list {\n  width: 100%;\n  height: 100%;\n  margin-top: 10px;\n\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n\n  border: 1px solid var(--status-bar-bg-color);\n\n  &__main-title-input {\n    width: 100%;\n    padding-right: 15px;\n\n    border: none;\n    background-color: transparent;\n    color: var(--secondary-color);\n  }\n\n  &__navigation {\n    position: fixed;\n\n    width: 24%;\n    overflow-y: scroll;\n    height: 90%;\n    padding: 16px;\n\n    color: rgba(var(--secondary-color-code), 0.7);\n    border: 1px solid var(--status-bar-bg-color);\n\n    &::-webkit-scrollbar {\n      width: 3px;\n    }\n    \n    &::-webkit-scrollbar-track {\n      background: transparent;\n    }\n    \n    &::-webkit-scrollbar-thumb {\n      width: 5px;\n      background: var(--secondary-color);\n      -webkit-border-radius: 20px;\n      border-radius: 20px;\n    }\n  }\n\n  &__line {\n    width: 100%;\n    margin-top: 15px;\n    border-bottom: 1px solid rgba(var(--secondary-color-code), 0.1);\n  }\n\n  &__section {\n    width: 100%;\n    overflow: hidden;\n    margin-right: -14px;\n    margin-bottom: 16px;\n    border: 1px dashed transparent;\n    border-radius: 8px;\n    padding-top: 10px;\n  }\n\n  &__sections {\n    padding: 0 14px;\n  }\n\n  &__buttons-container {\n    display: flex;\n    margin-bottom: 10px;\n    margin-left: 18px;\n    \n    & * {\n      margin-right: 16px;\n    }\n  \n    & :last-child {\n      margin-right: 0;\n    }\n  }\n\n  &__content {\n    width: 74%;\n    height: 95%;\n    padding-top: 20px;\n    margin-left: 26%;\n    overflow-y: scroll;\n\n    &::-webkit-scrollbar {\n      width: 3px;\n    }\n    \n    &::-webkit-scrollbar-track {\n      background: transparent;\n    }\n    \n    &::-webkit-scrollbar-thumb {\n      width: 5px;\n      background: var(--secondary-color);\n      -webkit-border-radius: 20px;\n      border-radius: 20px;\n    }\n  }\n\n  &__titles {\n    margin-top: 19px;\n  }\n\n  &__title {\n    color: rgba(var(--secondary-color-code), 0.7);\n\n    &:hover {\n      cursor: pointer;\n    }\n\n    &.active {\n      color: rgba(var(--secondary-color-code), 1);\n      font-weight: bold;\n    }\n  }\n\n  &__main-title {\n    line-height: 180%;\n    margin-left: 18px;\n    width: calc(100% + 15px);\n  }\n}\n\n.btn-dark {\n  margin: 32px 0 32px 32px;\n}\n",
                    "styleUrl": "./dynamic-sections-list.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 15
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"app-dynamic-sections-list\">\n  <div class=\"app-dynamic-sections-list__navigation fs-14-gramm-400-light\">\n    <app-small-light-add-button\n      [title]=\"'Add section'\"\n      [classes]=\"'app-small-light-add-button fs-14-gramm-400-light'\"\n      (click)=\"addSection(sections.length)\"\n    >\n    </app-small-light-add-button>\n    <ul *ngFor=\"let section of sections; let i = index;trackBy:indexTracker\" class=\"app-dynamic-sections-list__titles\">\n      <li \n        [ngClass]=\"i===activeSection ? 'app-dynamic-sections-list__title active' : 'app-dynamic-sections-list__title'\"\n        (click)=\"scrollToActive(i)\"\n      >\n        {{ section.title }}\n      </li>\n    </ul>\n  </div>\n  <div class=\"app-dynamic-sections-list__content\">\n    <ul \n      *ngFor=\"let section of sections; let i = index;\"\n      class=\"app-dynamic-sections-list__sections\"\n    >\n      <li \n        [id]=\"'id'+section.sectionId\"\n        (mouseenter)=\"handleHover($event, i)\"\n        (mouseleave)=\"handleHover($event, -1)\"\n        class=\"app-dynamic-sections-list__section\"\n        [ngStyle]=\"(!isElementActive || section.initialState.length === 0) && isSectionActive && activeSection === i && {'border': '1px dashed rgba(var(--secondary-color-code), 0.5)'}\"\n      >\n        <p class=\"app-dynamic-sections-list__main-title fs-h3\">\n          <textarea\n            autosize\n            [(ngModel)]=\"sections[i].title\" \n            spellcheck=\"false\"\n            class=\"app-dynamic-sections-list__main-title-input fs-h3\"\n          >\n          </textarea>\n        </p>\n        <app-customized-element \n          (addComponentToSection)=\"addComponentToSection($event)\"\n          (deleteComponentFromSection)=\"deleteComponentFromSection($event)\"\n          (editSection)=\"editSection($event)\"\n          (setHoverElement)=\"setHoverElement()\"\n          (setNoHoverElement)=\"setNoHoverElement()\"\n          [initialState]=\"section.initialState\"\n          [sectionId]=\"section.sectionId\"\n        >\n        </app-customized-element>\n        <div\n          class=\"app-dynamic-sections-list__buttons-container\"\n          *ngIf=\"((!isElementActive || section.initialState.length === 0) && isSectionActive && activeSection === i && i===sections.length - 1)\"\n        >\n          <app-small-light-add-button\n            [title]=\"'Add table'\"\n            [classes]=\"'app-small-light-add-button fs-14-gramm-400-light'\"\n            (click)=\"addComponentToSection({ sectionId:section.sectionId, index:section.initialState.length-1, type:'table' })\"\n          >\n          </app-small-light-add-button>\n          <app-small-light-add-button\n            [title]=\"'Add a paragraph'\"\n            [classes]=\"'app-small-light-add-button fs-14-gramm-400-light'\"\n            (click)=\"addComponentToSection({ sectionId:section.sectionId, index:section.initialState.length-1, type:'text' })\"\n          >\n          </app-small-light-add-button>\n          <app-small-light-add-button\n            [title]=\"'Add list'\"\n            [classes]=\"'app-small-light-add-button fs-14-gramm-400-light'\"\n            (click)=\"addComponentToSection({ sectionId:section.sectionId, index:section.initialState.length-1, type:'list' })\"\n          >\n          </app-small-light-add-button>\n        </div>\n        <div class=\"app-dynamic-sections-list__line\"></div>\n      </li>\n    </ul>\n    <app-simple-button\n      [title]=\"'confirm'\"\n      [classes]=\"'btn-dark fs-16-sofia-800 btn-app--h52'\"\n    >\n    </app-simple-button>\n  </div>\n</div>\n"
        },
        {
            "name": "DynamicTableComponent",
            "id": "component-DynamicTableComponent-7990d5e4550c7a456ea706a6f8aaf5fd",
            "file": "src/app/atoms/tables/dynamic-table/dynamic-table.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-dynamic-table",
            "styleUrls": [
                "./dynamic-table.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./dynamic-table.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "line": 9,
                    "type": "any"
                }
            ],
            "outputsClass": [
                {
                    "name": "handler",
                    "defaultValue": "new EventEmitter()",
                    "line": 10,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "activeColumn",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "addColumn",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "addRow",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "columns",
                    "defaultValue": "1",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "editCeil",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 77
                },
                {
                    "name": "editHead",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 56
                },
                {
                    "name": "editSectionElement",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "heads",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "isActive",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "isMobile",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "mainColumn",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "rows",
                    "defaultValue": "1",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "setData",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 109
                },
                {
                    "name": "table",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 84,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'table'"
                        }
                    ]
                },
                {
                    "name": "tableData",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 124
                },
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 129
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 120
                },
                {
                    "name": "setIsActive",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 105
                },
                {
                    "name": "showNext",
                    "args": [
                        {
                            "name": "direction",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "jsdoctags": [
                        {
                            "name": "direction",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "document:click",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event"
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "line": 92
                },
                {
                    "name": "window:resize",
                    "args": [
                        {
                            "name": "event",
                            "type": "any"
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "line": 86
                }
            ],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, HostListener, ElementRef, ViewChild, OnChanges, Input, OnInit, Output, EventEmitter, AfterViewInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dynamic-table',\n  templateUrl: './dynamic-table.component.html',\n  styleUrls: ['./dynamic-table.component.scss']\n})\nexport class DynamicTableComponent implements OnChanges, OnInit, AfterViewInit {\n  @Input() data: any;\n  @Output() handler: EventEmitter<any> = new EventEmitter()\n\n  heads: string[];\n  tableData: any[];\n  isMobile: boolean;\n  mainColumn: string;\n  editSectionElement;\n  isActive: boolean = false;\n\n  rows = 1;\n  columns = 1;\n  activeColumn = '';\n\n  showNext(direction: string) {\n    const headsListWithoutMain = this.heads.filter(head => head !== this.mainColumn);\n    const currentIndex = headsListWithoutMain.findIndex(head => head === this.activeColumn);\n    let nextIndex;\n    \n    if (direction =='forward') {\n      nextIndex = (currentIndex + 1 > headsListWithoutMain.length - 1) ? 0 : currentIndex + 1; \n    } else if (direction =='back') {\n      nextIndex = (currentIndex - 1 < 0) ? headsListWithoutMain.length - 1 : currentIndex - 1; \n    }\n    this.activeColumn = headsListWithoutMain[nextIndex];\n  }\n\n  addRow = () => {\n    this.rows = this.rows + 1;\n    let newDataItem = {};\n    const newRow = this.heads.forEach((head, i) => {\n      newDataItem[head]=`${this.rows}.${i + 1}. Text`\n    });\n    this.tableData = [...this.tableData, newDataItem];\n  }\n\n  addColumn = () => {\n    this.columns = this.columns + 1;\n    this.heads = [...this.heads, `Text ${this.columns}`];\n    this.tableData.forEach((item, i )=> {\n      item[`Text ${this.columns}`] = `${i + 1}.${this.columns}. Text`;\n    })\n    this.activeColumn = this.heads[1];\n    const width = document.querySelector('.app-dynamic-table').clientWidth;\n    this.isMobile = (width / this.columns) < 250;\n  }\n\n  editHead = (event, headTitle) => {\n    const index = this.heads.findIndex(head => head === headTitle);\n    const activeIndex = this.heads.findIndex(head => head === this.activeColumn);\n    const value = event.target.value;\n    if (index === activeIndex) {\n      this.activeColumn = value;\n    }\n    if (index === 0) {\n      this.mainColumn = value;\n    }\n    if (event.target.value.length) {\n      this.heads[index] = value;\n      this.tableData.forEach(item => {\n        item[`${value}`] = item[headTitle];\n        delete item[headTitle];\n      })\n    } else {\n      this.heads[index] = headTitle;\n    }\n  }\n\n  editCeil = (event, index, head) => {\n    if (event.target.value.length) {\n      this.tableData[index][head] = event.target.value;\n    }\n  }\n\n\n  @ViewChild('table') table: ElementRef;\n  @HostListener('window:resize', ['$event'])\n  onResize(event: any) {\n    const width = this.table.nativeElement.clientWidth;\n    this.isMobile = (width / this.columns) < 250;\n  }\n\n  @HostListener('document:click', ['$event'])\n  onClick(event: Event) {\n    if (!this.table.nativeElement.contains(event.target) && this.isActive) {\n      this.handler.emit({\n        sectionId: this.data.sectionId,\n        elementId: this.data.sectionElementId,\n        heads: this.heads,\n        tableData: this.tableData,\n        type: 'table'\n      })\n      this.isActive = false;\n    }\n  }\n\n  setIsActive() {\n    this.isActive = true;\n  }\n\n  setData = () => {\n    this.heads = this.data.heads || ['text 1'];\n    this.mainColumn = this.heads[0];\n    if (this.data.heads.length > 1) {\n      this.activeColumn = this.heads[1];\n    }\n    this.tableData = this.data.tableData || [{ 'text 1' : '1.1. Text' }];\n    this.rows = this.tableData.length;\n    this.columns = Object.keys(this.tableData[0]).length;\n  }\n\n  ngOnInit() {\n    this.setData();\n  }\n\n  ngAfterViewInit() {\n    const width = document.querySelector('.app-dynamic-table').clientWidth;\n    this.isMobile = (width / this.columns) < 250;\n  }\n\n  ngOnChanges() {\n    this.setData();\n  }\n}",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-dynamic-table {\n  position: relative;\n  width: 100%;\n  padding-bottom: 70px;\n  overflow: hidden;\n  \n  border-radius: 12px;\n  color: var(--secondary-color);\n  border: 1px solid rgba(var(--secondary-color-code), 0.3);\n  border-spacing: 0;\n  transition: margin 3s;\n\n  &__head-input {\n    width: calc(100% + 84px);\n    padding-right: 84px;\n\n    background: transparent;\n    border: none;\n\n    color: rgba(var(--secondary-color-code), 0.75);\n    font-weight: 400;\n    text-transform: capitalize;\n  }\n\n  &__ceil-input {\n    width: calc(100% + 84px);\n    padding-right: 84px;\n\n    background: transparent;\n    border: none;\n\n    text-transform: capitalize;\n    color: rgba(var(--secondary-color-code), 1);\n    font-weight: 300;\n  }\n\n  &__add-row-button {\n    width: calc(100% - 32px);\n    height: 38px;\n    position: absolute;\n    margin: 16px 16px 16px;\n  }\n\n  &__add-column-button {\n    position: absolute;\n    right: 22px;\n    top: 7px;\n  }\n\n  &__head {\n    height: auto;\n    padding: 13px 106px 13px 16px;\n    box-sizing: border-box;\n    position: relative;\n    text-transform: capitalize;\n    color: rgba(var(--secondary-color-code), 0.75);\n    background-color: rgba(var(--secondary-color-code), 0.2);\n  }\n\n  &__head-item {\n    margin-left: 80px;\n    overflow: hidden;\n  }\n\n  &__row-item {\n    margin-left: 80px;\n    overflow: hidden;\n  }\n\n  &__row {\n    margin-bottom: 20px;\n    padding: 13px 16px;\n  }\n\n  &__button {\n    width: 24px;\n    height: 24px;\n    position: absolute;\n    top: 7px;\n    z-index: 2;\n\n    border-radius: 50%;\n    background-color: rgba(var(--secondary-color-code), 1);\n    border: none;\n  }\n}\n\n.prev {\n  left: 42%;\n  transform: rotate(180deg);\n  \n  &:after {\n    content: '';\n    position: absolute;\n    top: 0px;\n    left: 1px;\n    width: 24px;\n    height: 24px;\n    border-radius: 50%;\n    background: center no-repeat url('../../../../assets/images/next.svg');\n  }\n}\n\n.next {\n  right: 65px;\n\n  &:after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 1px;\n    width: 24px;\n    height: 24px;\n    border-radius: 50%;\n    background: center no-repeat url('../../../../assets/images/next.svg');\n  }\n}\n\ntd {\n  padding: 16px 16px 0;\n  text-align: left;\n}\n\nth {\n  padding: 12px 16px 13px 16px;\n  text-align: left;\n}\n\nth:last-child {\n  padding: 12px 76px 13px 16px;\n}",
                    "styleUrl": "./dynamic-table.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnChanges",
                "OnInit",
                "AfterViewInit"
            ],
            "templateData": "<div class=\"app-dynamic-table__container\" (click)=\"setIsActive()\">\n  <!-- !!!!!!!!!mobile version of table!!!!!!!!!!!!  -->\n  <table \n    #table\n    id=\"table\" \n    *ngIf=\"isMobile\" \n    class=\"app-dynamic-table fs-12-sofia-400\"\n  >\n    <div class=\"app-dynamic-table__add-column-button\">\n      <app-dark-add-button (click)=\"addColumn()\"></app-dark-add-button>\n    </div>\n    <tr class=\"app-dynamic-table__head\">\n     <th class=\"app-dynamic-table__head-item app-transparent-table__main-column\">\n      <textarea\n        autosize\n        class=\"app-dynamic-table__head-input fs-12-sofia-400\" \n        [value]=\"mainColumn\"\n        (change)=\"editHead($event, mainColumn)\"\n        spellcheck=\"false\"\n      >\n      </textarea>\n     </th>\n     <th  class=\"app-dynamic-table__head-item\">\n      <textarea\n        autosize\n        class=\"app-dynamic-table__head-input fs-12-sofia-400\" \n        [value]=\"activeColumn\"\n        (change)=\"editHead($event, activeColumn)\"\n        spellcheck=\"false\"\n      >\n      </textarea>\n     </th>\n    </tr>\n    <tr \n      class=\"app-dynamic-table__row fs-12-sofia-300\"\n      *ngFor=\"let item of tableData; let i = index\"\n    >\n      <td class=\"app-dynamic-table__row-item\">\n        <textarea\n          autosize\n          class=\"app-dynamic-table__ceil-input fs-12-sofia-400\" \n          [value]=\"item[mainColumn]\"\n          (change)=\"editCeil($event, i, mainColumn)\"\n          spellcheck=\"false\"\n        >\n        </textarea>\n      </td>\n      <td class=\"app-dynamic-table__row-item\">\n        <textarea\n          autosize\n          class=\"app-dynamic-table__ceil-input fs-12-sofia-400\" \n          [value]=\"item[activeColumn]\"\n          (change)=\"editCeil($event, i, activeColumn)\"\n          spellcheck=\"false\"\n        >\n        </textarea>\n      </td>\n    </tr>\n    <button class=\"prev app-dynamic-table__button\" type=\"button\" (click)=\"showNext('back')\"></button>\n    <button class=\"next app-dynamic-table__button\"type=\"button\" (click)=\"showNext('forward')\"></button>\n    <div class=\"app-dynamic-table__add-row-button\">\n      <app-small-light-add-button\n        (click)=\"addRow()\"\n        [title]=\"'Add row'\"\n        [classes]=\"'app-big-light-add-button fs-14-gramm-400-light'\"\n      ></app-small-light-add-button>\n    </div>\n  </table> \n  \n  \n  <!-- !!!!!!!!!desktop version of table!!!!!!!!!!!!  -->\n  <table #table class=\"app-dynamic-table fs-12-sofia-400\" *ngIf=\"!isMobile\" >\n    <div class=\"app-dynamic-table__add-column-button\">\n      <app-dark-add-button (click)=\"addColumn()\"></app-dark-add-button>\n    </div>\n    <tr class=\"app-dynamic-table__head\">\n      <th class=\"app-dynamic-table__head-item\" *ngFor=\"let head of heads; let i = index\">\n        <textarea\n          autosize\n          class=\"app-dynamic-table__head-input fs-12-sofia-400\" \n          [value]=\"head\"\n          (change)=\"editHead($event, head)\"\n          spellcheck=\"false\"\n        >\n        </textarea>\n      </th>\n    </tr>\n    <tr class=\"app-dynamic-table__row fs-12-sofia-300\" *ngFor=\"let item of tableData; let i = index\">\n      <td *ngFor=\"let head of heads; let j = index\" class=\"app-dynamic-table__row-item\">\n        <textarea\n          autosize\n          class=\"app-dynamic-table__ceil-input fs-12-sofia-400\" \n          [value]=\"item[head]\"\n          (change)=\"editCeil($event, i, head)\"\n          spellcheck=\"false\"\n        >\n        </textarea>\n      </td>\n    </tr>\n    <div class=\"app-dynamic-table__add-row-button\">\n      <app-small-light-add-button\n        (click)=\"addRow()\"\n        [title]=\"'Add row'\"\n        [classes]=\"'app-big-light-add-button fs-14-gramm-400-light'\"\n      ></app-small-light-add-button>\n    </div>\n  </table>\n</div>\n\n"
        },
        {
            "name": "DynamicTextComponent",
            "id": "component-DynamicTextComponent-e34604d7d029b54866422800cf6401d8",
            "file": "src/app/atoms/text/dynamic-text/dynamic-text.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-dynamic-text",
            "styleUrls": [
                "./dynamic-text.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./dynamic-text.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "line": 9,
                    "type": "any"
                }
            ],
            "outputsClass": [
                {
                    "name": "handler",
                    "defaultValue": "new EventEmitter()",
                    "line": 10,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "isActive",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "text",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'text'"
                        }
                    ]
                },
                {
                    "name": "title",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37
                },
                {
                    "name": "setIsActive",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15
                }
            ],
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "document:click",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event"
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "line": 21
                }
            ],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, ElementRef, EventEmitter, HostListener, Input, OnChanges, OnInit, Output, ViewChild } from '@angular/core';\n\n@Component({\n  selector: 'app-dynamic-text',\n  templateUrl: './dynamic-text.component.html',\n  styleUrls: ['./dynamic-text.component.scss']\n})\nexport class DynamicTextComponent implements OnInit, OnChanges {\n  @Input() data: any;\n  @Output() handler: EventEmitter<any> = new EventEmitter()\n\n  isActive: boolean;\n  title: string;\n\n  setIsActive() {\n    this.isActive = true;\n  }\n\n  @ViewChild('text') text: ElementRef;\n  @HostListener('document:click', ['$event'])\n  onClick(event: Event) {\n    if (!this.text.nativeElement.contains(event.target) && this.isActive) {\n      this.handler.emit(\n        {\n          sectionId: this.data.sectionId,\n          elementId: this.data.sectionElementId,\n          title: this.title,\n          type: 'text'\n        }\n      )\n      this.isActive = false;\n    }\n  }\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.title = this.data.title;\n  }\n\n  ngOnChanges(): void {\n    this.title = this.data.title;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-dynamic-text {\n  width: 100%;\n  overflow-x: hidden;\n  margin-bottom: 16px;\n\n  &__input {\n    width: 100%;\n    padding-right: 15px;\n    border: none;\n    background-color: transparent;\n    color: var(--secondary-color);\n  }\n\n  &__wrapper {\n    margin-right: -15px;\n  }\n}",
                    "styleUrl": "./dynamic-text.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 33
            },
            "implements": [
                "OnInit",
                "OnChanges"
            ],
            "templateData": "<div class=\"app-dynamic-text\" #text (click)=\"setIsActive()\">\n  <div class=\"app-dynamic-text__wrapper\">\n    <textarea\n      autosize\n      class=\"app-dynamic-text__input fs-16-sofia-300\" \n      [(ngModel)]=\"title\" \n      spellcheck=\"false\"\n    >\n    </textarea>\n  </div>\n</div>\n"
        },
        {
            "name": "formInputComponent",
            "id": "component-formInputComponent-f9f6993d7366544ebc3d0fbfacf15c28",
            "file": "src/app/atoms/inputs/formInput/formInput.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-form-input",
            "styleUrls": [
                "formInput.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./formInput.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "id",
                    "defaultValue": "Math.random()",
                    "line": 14,
                    "type": "number"
                },
                {
                    "name": "initialValue",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "isBold",
                    "line": 13,
                    "type": "string"
                },
                {
                    "name": "name",
                    "defaultValue": "''",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "placeholderText",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [
                {
                    "name": "changeValueParentFunction",
                    "defaultValue": "new EventEmitter()",
                    "line": 16,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "classes",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "value",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "methodsClass": [
                {
                    "name": "handleChangeValue",
                    "args": [
                        {
                            "name": "event",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-form-input',\n  templateUrl: './formInput.component.html',\n  styleUrls: ['formInput.component.scss'],\n})\n\nexport class formInputComponent implements OnInit {\n  @Input() placeholderText: string;\n  @Input() name?: string = '';\n  @Input() initialValue?: string;\n  @Input() isBold?: string;\n  @Input() id?: number = Math.random();\n\n  @Output() changeValueParentFunction?: EventEmitter<any> = new EventEmitter();\n\n  classes='';\n  value='';\n\n  handleChangeValue(event) {\n   this.changeValueParentFunction.emit(event.target.value)\n  }\n\n  ngOnInit() {\n    if (this.initialValue) {\n      this.value = this.initialValue;\n    }\n    this.classes = this.isBold ? \"app-form-input-field fs-16-sofia-600\" : \"app-form-input-field fs-16-sofia-300\";\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-form-input-field {\n  width: 100%;\n  padding: 15px 16px 11px 16px;\n  height: 48px;\n\n  border: none;\n  border-radius: 8px;\n  background: rgba(var(--secondary-color-code), 0.05);\n  color: var(--secondary-color);\n\n  &::placeholder {\n    color: rgba(var(--secondary-color-code), 0.5);\n  }\n\n  &:hover {\n    background: rgba(var(--secondary-color-code), 0.2);\n  }\n}",
                    "styleUrl": "formInput.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<input \n  [ngClass]=\"classes\"\n  [placeholder]=\"placeholderText\"\n  type=\"text\"\n  [name]=\"name\"\n  [value]=\"value\"\n  (input)=\"handleChangeValue($event)\"\n  [id]=\"id\"\n>\n"
        },
        {
            "name": "FormScreenFifthComponent",
            "id": "component-FormScreenFifthComponent-b986dea163c7700978cb484a339248e7",
            "file": "src/app/molecules/form-screens/form-screen-fifth/form-screen-fifth.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-form-screen-fifth",
            "styleUrls": [
                "./form-screen-fifth.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./form-screen-fifth.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "modules",
                    "defaultValue": "[\n    {\n      title: \"GDPR, eprivacy\",\n      text: \"Europe\",\n    },\n    {\n      title: \"Thailand\",\n      text: \"Bangkok\",\n    },\n    {\n      title: \"Calofornia\",\n      text: \"Europe \",\n    },\n    {\n      title: \"CCPA\",\n      text: \"Europe\",\n    },\n    {\n      title: \"Canada\",\n      text: \"Ottawa\",\n    },\n    {\n      title: \"Dubai\",\n      text: \"Dubai \",\n    },\n    {\n      title: \"GDPR, eprivacy2\",\n      text: \"Europe\",\n    },\n    {\n      title: \"Thailand2\",\n      text: \"Bangkok\",\n    },\n    {\n      title: \"Calofornia2\",\n      text: \"Europe \",\n    },\n  ]",
                    "type": "Module[]",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "selectedModules",
                    "defaultValue": "[]",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "selectModule",
                    "args": [
                        {
                            "name": "title",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55,
                    "jsdoctags": [
                        {
                            "name": "title",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\ninterface Module {\n  title: string,\n  text: string\n}\n\n@Component({\n  selector: 'app-form-screen-fifth',\n  templateUrl: './form-screen-fifth.component.html',\n  styleUrls: ['./form-screen-fifth.component.scss']\n})\n\nexport class FormScreenFifthComponent {\n  selectedModules: string[] = [];\n  modules: Module[] = [\n    {\n      title: \"GDPR, eprivacy\",\n      text: \"Europe\",\n    },\n    {\n      title: \"Thailand\",\n      text: \"Bangkok\",\n    },\n    {\n      title: \"Calofornia\",\n      text: \"Europe \",\n    },\n    {\n      title: \"CCPA\",\n      text: \"Europe\",\n    },\n    {\n      title: \"Canada\",\n      text: \"Ottawa\",\n    },\n    {\n      title: \"Dubai\",\n      text: \"Dubai \",\n    },\n    {\n      title: \"GDPR, eprivacy2\",\n      text: \"Europe\",\n    },\n    {\n      title: \"Thailand2\",\n      text: \"Bangkok\",\n    },\n    {\n      title: \"Calofornia2\",\n      text: \"Europe \",\n    },\n  ]\n\n  selectModule(title: string) {\n    if (this.selectedModules.includes(title)) {\n      this.selectedModules = this.selectedModules.filter(module => module !== title);\n    } else {\n      this.selectedModules = [...this.selectedModules, title];\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-form-screen-fifth {\n  display: flex;\n  justify-content: space-between;\n  align-items: center; \n  width: 100%;\n\n  &__list {\n    width: 32%;\n  }\n\n  &__item {\n    width: 100%;\n    margin-bottom: 12px;\n  }\n}\n\n.fs-h3 {\n  margin-bottom: 43px;\n}\n\n@media screen and (max-width: 600px) {\n  .app-form-screen-fifth {\n    flex-direction: column;\n  \n    &__list {\n      width: 100%;\n    }\n  \n    &__item {\n      width: 100%;\n      margin-bottom: 8px;;\n    }\n  }\n}",
                    "styleUrl": "./form-screen-fifth.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<h3 class=\"fs-h3\">Select your compliance modules</h3>\n<div class=\"app-form-screen-fifth\">\n  <ul class=\"app-form-screen-fifth__list\">\n    <li \n      class=\"app-form-screen-fifth__item\"\n      *ngFor=\"let module of modules.slice(0, 3); let i = index\" \n    >\n      <app-large-button\n        (click)=\"selectModule(module.title)\"\n        [title]=\"module.title\"\n        [text]=\"module.text\"\n        [isActive]=\"selectedModules.includes(module.title)\"\n      >\n      </app-large-button>\n    </li>\n  </ul>\n  <ul class=\"app-form-screen-fifth__list\">\n    <li \n      class=\"app-form-screen-fifth__item\"\n      *ngFor=\"let module of modules.slice(3, 6); let i = index\" \n    >\n      <app-large-button\n        (click)=\"selectModule(module.title)\"\n        [title]=\"module.title\"\n        [text]=\"module.text\"\n        [isActive]=\"selectedModules.includes(module.title)\"\n      >\n      </app-large-button>\n    </li>\n  </ul>\n  <ul class=\"app-form-screen-fifth__list\">\n    <li \n      class=\"app-form-screen-fifth__item\"\n      *ngFor=\"let module of modules.slice(6); let i = index\" \n    >\n      <app-large-button\n        (click)=\"selectModule(module.title)\"\n        [title]=\"module.title\"\n        [text]=\"module.text\"\n        [isActive]=\"selectedModules.includes(module.title)\"\n      >\n      </app-large-button>\n    </li>\n  </ul>\n</div>\n\n\n"
        },
        {
            "name": "FormScreenFirstComponent",
            "id": "component-FormScreenFirstComponent-48124ea7c069fdcd0d23438e049965d6",
            "file": "src/app/molecules/form-screens/form-screen-first/form-screen-first.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-form-screen-first",
            "styleUrls": [
                "./form-screen-first.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./form-screen-first.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "handleInputChange",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-form-screen-first',\n  templateUrl: './form-screen-first.component.html',\n  styleUrls: ['./form-screen-first.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\n\nexport class FormScreenFirstComponent {\n  handleInputChange = (value) => console.log('changeValueParentFunction works', value)\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-form-screen-first {\n  &__container {\n    display: flex;\n    justify-content: space-between;\n    width: 100%;\n    margin-top: 32px;\n  }\n\n  &__column {\n    width: 48%;\n\n    & > app-form-input {\n      margin-bottom: 32px;\n    }\n  }\n}\n\n.app-form-input-field, .ng-select {\n  margin-bottom: 32px;\n}\n\n@media screen and (max-width: 600px) {\n  .app-form-screen-first {\n    &__container {\n      flex-direction: column;\n    }\n\n    &__column {\n      width: 99%;\n    }\n  } \n\n  .form-input__wrapper, .ng-select {\n    margin-bottom: 5px;\n  }\n}\n",
                    "styleUrl": "./form-screen-first.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<h3 class=\"fs-h3\">Create your account</h3>\n<div class=\"app-form-screen-first__container\"> \n  <div class=\"app-form-screen-first__column\">   \n    <app-form-input\n      [placeholderText]=\"'First Name'\"\n      (changeValueParentFunction)=\"handleInputChange($event)\"\n    > \n    </app-form-input> \n    <app-form-input\n      [placeholderText]=\"'Email'\"\n      (changeValueParentFunction)=\"handleInputChange($event)\"\n    > \n    </app-form-input>    \n    <app-form-input\n      [placeholderText]=\"'Password'\"\n      (changeValueParentFunction)=\"handleInputChange($event)\"\n    > \n    </app-form-input>        \n  </div>\n  <div class=\"app-form-screen-first__column\">   \n    <app-form-input\n      [placeholderText]=\"'Last Name'\"\n      (changeValueParentFunction)=\"handleInputChange($event)\"\n    > \n    </app-form-input> \n    <app-select-input-simple\n      [initialValue]=\"'This account is for:'\"\n      [items]=\"['My current company', 'My clients company']\"\n    >\n    </app-select-input-simple>   \n    <app-form-input\n      [placeholderText]=\"'Confirm Password'\"\n      (changeValueParentFunction)=\"handleInputChange($event)\"\n    > \n    </app-form-input> \n  </div>\n</div>\n"
        },
        {
            "name": "FormScreenFourthComponent",
            "id": "component-FormScreenFourthComponent-aca7099c3a068b1af5bdf9dc534fb0c5",
            "file": "src/app/molecules/form-screens/form-screen-fourth/form-screen-fourth.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-form-screen-fourth",
            "styleUrls": [
                "./form-screen-fourth.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./form-screen-fourth.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "modules",
                    "defaultValue": "[\n    {\n      title: \"GDPR, eprivacy\",\n      text: \"Europe\",\n    },\n    {\n      title: \"Thailand\",\n      text: \"Bangkok\",\n    },\n    {\n      title: \"Calofornia\",\n      text: \"Europe \",\n    },\n    {\n      title: \"CCPA\",\n      text: \"Europe\",\n    },\n    {\n      title: \"Canada\",\n      text: \"Ottawa\",\n    },\n    {\n      title: \"Dubai\",\n      text: \"Dubai \",\n    },\n  ]",
                    "type": "Module[]",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "selectedModules",
                    "defaultValue": "[]",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "selectModule",
                    "args": [
                        {
                            "name": "title",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "jsdoctags": [
                        {
                            "name": "title",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\ninterface Module {\n  title: string,\n  text: string\n}\n\n@Component({\n  selector: 'app-form-screen-fourth',\n  templateUrl: './form-screen-fourth.component.html',\n  styleUrls: ['./form-screen-fourth.component.scss']\n})\nexport class FormScreenFourthComponent {\n\n  selectedModules: string[] = [];\n  modules: Module[] = [\n    {\n      title: \"GDPR, eprivacy\",\n      text: \"Europe\",\n    },\n    {\n      title: \"Thailand\",\n      text: \"Bangkok\",\n    },\n    {\n      title: \"Calofornia\",\n      text: \"Europe \",\n    },\n    {\n      title: \"CCPA\",\n      text: \"Europe\",\n    },\n    {\n      title: \"Canada\",\n      text: \"Ottawa\",\n    },\n    {\n      title: \"Dubai\",\n      text: \"Dubai \",\n    },\n  ]\n\n  selectModule(title: string) {\n    if (this.selectedModules.includes(title)) {\n      this.selectedModules = this.selectedModules.filter(module => module !== title);\n    } else {\n      this.selectedModules = [...this.selectedModules, title];\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-form-screen-fourth {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n\n  &__list {\n    width: 48%;\n  }\n\n  &__item {\n    width: 100%;\n    margin-bottom: 16px;\n  }\n}\n\n.fs-h3 {\n  margin-bottom: 43px;\n}\n\n@media screen and (max-width: 600px) {\n  .app-form-screen-fourth {\n    flex-direction: column;\n  \n    &__list {\n      width: 100%;\n    }\n  \n    &__item {\n      width: 100%;\n      margin-bottom: 8px;;\n    }\n  }\n}",
                    "styleUrl": "./form-screen-fourth.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<h3 class=\"fs-h3\">Select your compliance modules</h3>\n<div class=\"app-form-screen-fourth\">\n  <ul class=\"app-form-screen-fourth__list\">\n    <li \n      class=\"app-form-screen-fourth__item\"\n      *ngFor=\"let module of modules.slice(0, modules.length/2); let i = index\" \n    >\n      <app-large-button\n        (click)=\"selectModule(module.title)\"\n        [title]=\"module.title\"\n        [text]=\"module.text\"\n        [isActive]=\"selectedModules.includes(module.title)\"\n      >\n      </app-large-button>\n    </li>\n  </ul>\n  <ul class=\"app-form-screen-fourth__list\">\n    <li \n      class=\"app-form-screen-fourth__item\"\n      *ngFor=\"let module of modules.slice(modules.length/2); let i = index\" \n    >\n      <app-large-button\n        (click)=\"selectModule(module.title)\"\n        [title]=\"module.title\"\n        [text]=\"module.text\"\n        [isActive]=\"selectedModules.includes(module.title)\"\n      >\n      </app-large-button>\n    </li>\n  </ul>\n</div>\n\n"
        },
        {
            "name": "FormScreenSecondComponent",
            "id": "component-FormScreenSecondComponent-fa52214a28818abb3be0bdc0695f94b7",
            "file": "src/app/molecules/form-screens/form-screen-second/form-screen-second.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-form-screen-second",
            "styleUrls": [
                "./form-screen-second.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./form-screen-second.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "handleInputChange",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-form-screen-second',\n  templateUrl: './form-screen-second.component.html',\n  styleUrls: ['./form-screen-second.component.scss']\n})\n\nexport class FormScreenSecondComponent {\n  handleInputChange = (value) => console.log('changeValueParentFunction works', value)\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "h3 {\n  margin-bottom: 22px;\n}\n\np {\n  margin-bottom: 40px;\n}",
                    "styleUrl": "./form-screen-second.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<h3 class=\"fs-h3\">Add your first domain</h3>\n<p class=\"fs-18-sofia-300\">You can add more domains inside the app</p>\n<app-form-input\n  [placeholderText]=\"'yourwebsite.com'\"\n  (changeValueParentFunction)=\"handleInputChange($event)\"\n> \n</app-form-input>"
        },
        {
            "name": "FormScreenThirdComponent",
            "id": "component-FormScreenThirdComponent-ae34384e6e13eceb75d03fb11c334547",
            "file": "src/app/molecules/form-screens/form-screen-third/form-screen-third.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-form-screen-third",
            "styleUrls": [
                "./form-screen-third.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./form-screen-third.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "modules",
                    "defaultValue": "[\n    {\n      title: \"GDPR, eprivacy\",\n      text: \"Europe\",\n      src: \"assets/images/flags/euro.png\"\n    },\n    {\n      title: \"CCPA\",\n      text: \"California\",\n      src: \"assets/images/flags/ccpa.png\"\n    },\n    {\n      title: \"LGPD\",\n      text: \"Brasil \",\n      src: \"assets/images/flags/lgpd.png\"\n    }\n  ]",
                    "type": "Module[]",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "selectedModules",
                    "defaultValue": "[]",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [
                {
                    "name": "selectModule",
                    "args": [
                        {
                            "name": "title",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "jsdoctags": [
                        {
                            "name": "title",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, ViewEncapsulation } from '@angular/core';\n\ninterface Module {\n  title: string,\n  text: string,\n  src: string\n}\n\n@Component({\n  selector: 'app-form-screen-third',\n  templateUrl: './form-screen-third.component.html',\n  styleUrls: ['./form-screen-third.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class FormScreenThirdComponent {\n  selectedModules: string[] = [];\n  modules: Module[] = [\n    {\n      title: \"GDPR, eprivacy\",\n      text: \"Europe\",\n      src: \"assets/images/flags/euro.png\"\n    },\n    {\n      title: \"CCPA\",\n      text: \"California\",\n      src: \"assets/images/flags/ccpa.png\"\n    },\n    {\n      title: \"LGPD\",\n      text: \"Brasil \",\n      src: \"assets/images/flags/lgpd.png\"\n    }\n  ]\n\n  selectModule(title: string) {\n    if (this.selectedModules.includes(title)) {\n      this.selectedModules = this.selectedModules.filter(module => module !== title);\n    } else {\n      this.selectedModules = [...this.selectedModules, title];\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-form-screen-third {\n  &__container {\n    display: flex;\n    justify-content: space-between;\n    width: 100%;\n    margin-top: 56px;\n  }\n}\n\n@media screen and (max-width: 600px) {\n  .app-form-screen-third {\n    &__container {\n      flex-direction: column;\n    }\n  }\n\n  .app-card {\n    margin-bottom: 8px;\n  }\n}",
                    "styleUrl": "./form-screen-third.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<h3 class=\"fs-h3\">Select your compliance modules</h3>\n<ul class=\"app-form-screen-third__container\">\n  <li \n    class=\"app-form-screen-third__item\"\n    *ngFor=\"let module of modules; let i = index\" \n  >\n    <app-card\n      (click)=\"selectModule(module.title)\"\n      [title]=\"module.title\"\n      [text]=\"module.text\"\n      [src]=\"module.src\"\n      [isActive]=\"selectedModules.includes(module.title)\"\n    >\n    </app-card>\n  </li>\n</ul>\n"
        },
        {
            "name": "gradientButtonComponent",
            "id": "component-gradientButtonComponent-869107bbcebf19d9e145ff9f57f547b4",
            "file": "src/app/atoms/buttons/gradientButton/gradientButton.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-gradient-button",
            "styleUrls": [
                "../button.component.scss",
                "gradientButton.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./gradientButton.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "color",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "title",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-gradient-button',\n  templateUrl: './gradientButton.component.html',\n  styleUrls: ['../button.component.scss', 'gradientButton.component.scss'],\n})\n\nexport class gradientButtonComponent  {\n  @Input() title: string;\n  @Input() backgroundColor: string;\n  @Input() color: string;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".btn-app {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  transition: 0.3s;\n  border-radius: 8px;\n\n  &--h36 {\n    display: flex;\n    align-items: center;\n    height: 36px;\n    padding: 0 18px 0 18px;\n  }\n  \n  &--asimetric {\n    border-radius: 20px 5px;\n    height: 52px;\n    padding: 18px 41px 18px 44px;\n  }\n\n  &--h46 {\n    height: 46px;\n    padding: 13px 15px 12px 15px;\n  }\n\n  &--h46--wide {\n    height: 46px;\n    padding: 17px 37px;\n  }\n\n  &--h52 {\n    height: 52px;\n    padding: 18px 66px;\n  }\n\n  &--h53 {\n    height: 53px;\n    padding: 9px 10px;\n  }\n}\n",
                    "styleUrl": "../button.component.scss"
                },
                {
                    "data": ".btn-grad {\n  background: var(--higlited-grad-light);\n  border: none;\n  color: var(--text-color);\n  \n  display: flex;\n  align-items: center;\n\n  &__img {\n    margin-left: 27px;\n  }\n\n  &:hover {\n    background: var(--highlited-grad-dark);\n  }\n\n  &:active {\n    background: var(--higlited-grad-light);\n  }\n}\n",
                    "styleUrl": "gradientButton.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<button\n  class=\"btn-app--asimetric btn-app btn-grad fs-16-sofia-800\"\n>\n  <p>\n    {{ title }}\n    <img src='assets/images/next.svg' alt=\"arrow\"  class=\"btn-grad__img\"/>\n  </p>\n</button>"
        },
        {
            "name": "GradientTextComponent",
            "id": "component-GradientTextComponent-debb50ff25f38672a570a6dc831a84cc",
            "file": "src/app/atoms/text/gradient-text/gradient-text.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-gradient-text",
            "styleUrls": [
                "./gradient-text.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./gradient-text.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "classes",
                    "line": 10,
                    "type": "string"
                },
                {
                    "name": "title",
                    "line": 11,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-gradient-text',\n  templateUrl: './gradient-text.component.html',\n  styleUrls: ['./gradient-text.component.scss']\n})\n\nexport class GradientTextComponent {\n  @Input() classes: string;\n  @Input() title: string;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-gradient-text {\n  background: var(--success-grad-light);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n}",
                    "styleUrl": "./gradient-text.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<p [ngClass]=\"'app-gradient-text ' + classes\">\n  {{ title }}\n</p>\n"
        },
        {
            "name": "IconContainerComponent",
            "id": "component-IconContainerComponent-a4975d8d2274a6b68c4a0bd0919df590",
            "file": "src/app/atoms/iconContainer/iconContainer.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-icon-container",
            "styleUrls": [
                "iconContainer.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./iconContainer.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-icon-container',\n  templateUrl: './iconContainer.component.html',\n  styleUrls: ['iconContainer.component.scss'],\n})\n\nexport class IconContainerComponent {\n  @Input() backgroundColor: string;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".icons-container {\n  width: 100%;\n\n  &-box {\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n    align-items: center;\n    opacity: 0.3;\n\n    & > img {\n      max-width: 80%;\n    }\n  }\n}",
                    "styleUrl": "iconContainer.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div \n  [ngStyle]=\"{ 'background': backgroundColor }\"\n  class=\"icons-container\"\n>\n  <div class=\"icons-container-box\">\n    <img src=\"assets/images/companies/logo1.png\" alt=\"company logo\">\n    <img src=\"assets/images/companies/logo2.png\" alt=\"company logo\">\n    <img src=\"assets/images/companies/logo3.png\" alt=\"company logo\">\n  </div>\n  <div class=\"icons-container-box\">\n    <img src=\"assets/images/companies/logo4.png\" alt=\"company logo\">\n    <img src=\"assets/images/companies/logo5.png\" alt=\"company logo\">\n    <img src=\"assets/images/companies/logo6.png\" alt=\"company logo\">\n  </div>\n</div>\n"
        },
        {
            "name": "IconLinksComponent",
            "id": "component-IconLinksComponent-4311d2f7f0d021354fa2531e0614f363",
            "file": "src/app/atoms/navLink/icon-links/icon-links.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-icon-links",
            "styleUrls": [
                "./icon-links.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./icon-links.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "isActive",
                    "line": 10,
                    "type": "boolean"
                },
                {
                    "name": "svgPath",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "title",
                    "line": 11,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "fillColor",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28
                },
                {
                    "name": "onHover",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16
                },
                {
                    "name": "onLeave",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnChanges } from '@angular/core';\n\n@Component({\n  selector: 'app-icon-links',\n  templateUrl: './icon-links.component.html',\n  styleUrls: ['./icon-links.component.scss']\n})\n\nexport class IconLinksComponent implements OnChanges {\n  @Input() isActive: boolean;\n  @Input() title: string;\n  @Input() svgPath: string;\n  \n  fillColor: string;\n\n  onHover() {\n    if (!this.isActive) {\n      this.fillColor = 'rgba(1, 25, 73, 1)';\n    }\n  }\n\n  onLeave() {\n    if (!this.isActive) {\n      this.fillColor = 'rgba(1, 25, 73, 0.5)';\n    }\n  }\n\n  ngOnChanges(): void {\n    this.fillColor = this.isActive ? '#24B04B' : 'rgba(1, 25, 73, 0.5)'\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-icon-link {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 2px;\n\n  text-transform: capitalize;\n  border: none;\n  background: transparent;\n\n  &__title {\n    margin-top: 6px;\n  }\n}",
                    "styleUrl": "./icon-links.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnChanges"
            ],
            "templateData": "<a class=\"app-icon-link fs-10-sofia-500\"\n  href=\"#\"\n  (mouseenter)=\"onHover()\"\n  (mouseleave)=\"onLeave()\"\n>\n  <svg-icon \n    [src]=\"svgPath\"\n    [svgStyle]=\"{'fill':fillColor }\"\n  >\n  </svg-icon>\n  <p class=\"app-icon-link__title\" [ngStyle]=\"{ 'color': fillColor }\">\n    {{ title }}\n  </p>     \n</a>\n"
        },
        {
            "name": "infoButtonComponent",
            "id": "component-infoButtonComponent-b1789af0f0fb6ec1f45ad45f41784510",
            "file": "src/app/atoms/buttons/infoButton/infoButton.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-info-button",
            "styleUrls": [
                "../button.component.scss",
                "infoButton.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./infoButton.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "color",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "title",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-info-button',\n  templateUrl: './infoButton.component.html',\n  styleUrls: ['../button.component.scss', 'infoButton.component.scss'],\n})\n\nexport class infoButtonComponent {\n  @Input() title: string;\n  @Input() backgroundColor: string;\n  @Input() color: string;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".btn-app {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  transition: 0.3s;\n  border-radius: 8px;\n\n  &--h36 {\n    display: flex;\n    align-items: center;\n    height: 36px;\n    padding: 0 18px 0 18px;\n  }\n  \n  &--asimetric {\n    border-radius: 20px 5px;\n    height: 52px;\n    padding: 18px 41px 18px 44px;\n  }\n\n  &--h46 {\n    height: 46px;\n    padding: 13px 15px 12px 15px;\n  }\n\n  &--h46--wide {\n    height: 46px;\n    padding: 17px 37px;\n  }\n\n  &--h52 {\n    height: 52px;\n    padding: 18px 66px;\n  }\n\n  &--h53 {\n    height: 53px;\n    padding: 9px 10px;\n  }\n}\n",
                    "styleUrl": "../button.component.scss"
                },
                {
                    "data": ".btn-info {\n  padding: 9px 15px 9px 15px;\n  height: 40px;\n  border: none;\n  color: var(--info-color);\n  background-color: rgba(var(--info-color-code), 0.05);  \n  text-transform: capitalize;\n\n  & > img {\n    margin-right: 15px;\n  }\n\n  &:hover {\n    background-color: rgba(var(--info-color-code), 0.3);  \n  }\n\n  &:active {\n    background-color: transparent; \n  }\n}\n",
                    "styleUrl": "infoButton.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<button \n  class=\"btn-app btn-info fs-14-sofia-normal\"\n  [ngStyle]=\"{ 'background': backgroundColor, 'color': color }\"\n>\n  <img src=\"assets/images/support.png\" alt=\"support button logo\">\n  {{ title }}\n</button>\n"
        },
        {
            "name": "largeButtonComponent",
            "id": "component-largeButtonComponent-b93d92f1fc905f76dccbdfe29bc76058",
            "file": "src/app/atoms/buttons/largeButton/largeButton.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-large-button",
            "styleUrls": [
                "../button.component.scss",
                "largeButton.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./largeButton.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "line": 13,
                    "type": "string"
                },
                {
                    "name": "color",
                    "line": 14,
                    "type": "string"
                },
                {
                    "name": "isActive",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "text",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "title",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "classes",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnChanges } from '@angular/core';\n\n@Component({\n  selector: 'app-large-button',\n  templateUrl: './largeButton.component.html',\n  styleUrls: ['../button.component.scss', 'largeButton.component.scss'],\n})\n\nexport class largeButtonComponent implements OnChanges {\n  @Input() title: string;\n  @Input() text: string;\n  @Input() isActive: string;\n  @Input() backgroundColor: string;\n  @Input() color: string;\n\n  classes: string;\n\n  ngOnChanges() {\n    this.classes = !this.isActive ? \"btn-large btn-app--h53 btn-app \" : \"btn-large active btn-app--h53 btn-app \";\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".btn-app {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  transition: 0.3s;\n  border-radius: 8px;\n\n  &--h36 {\n    display: flex;\n    align-items: center;\n    height: 36px;\n    padding: 0 18px 0 18px;\n  }\n  \n  &--asimetric {\n    border-radius: 20px 5px;\n    height: 52px;\n    padding: 18px 41px 18px 44px;\n  }\n\n  &--h46 {\n    height: 46px;\n    padding: 13px 15px 12px 15px;\n  }\n\n  &--h46--wide {\n    height: 46px;\n    padding: 17px 37px;\n  }\n\n  &--h52 {\n    height: 52px;\n    padding: 18px 66px;\n  }\n\n  &--h53 {\n    height: 53px;\n    padding: 9px 10px;\n  }\n}\n",
                    "styleUrl": "../button.component.scss"
                },
                {
                    "data": ".btn-large {\n  position: relative;\n  width: 100%;\n  z-index: 2;\n  \n  color: var(--secondary-color);\n  background: transparent;\n  border: none;\n\n  display: flex;\n  justify-content: center;\n\n  &.active {\n    background: var(--success-grad-light);\n    color: var(--text-color);\n  }\n\n  & > span > p {\n    margin: 0;\n  }\n\n  & > span > .fs-14-gramm-normal {\n    text-transform: uppercase;\n  }\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    z-index: -1;\n\n    width: 100%;\n    height: 100%;\n\n    background: rgba(var(--secondary-color-code), 0.05);\n    border-radius: 8px;\n    transition: 0.3s;\n  }\n\n  &::after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    z-index: -1;\n\n    width: 100%;\n    height: 100%;\n\n    background: var(--success-grad-light);\n    border-radius: 8px;\n    transition: 0.3s;\n    opacity: 0;\n  }\n\n  &:hover {\n    &::before {\n      background: rgba(var(--secondary-color-code), 0.1);\n    }\n  }\n\n  &:active {\n    color: var(--text-color);\n    &::before {\n      opacity: 0;\n    }\n\n    &::after {\n      opacity: 1;\n    }\n  }\n}",
                    "styleUrl": "largeButton.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnChanges"
            ],
            "templateData": "<button \n  [ngClass]=\"classes\"\n  [ngStyle]=\"{ 'background': backgroundColor, 'color': color }\"\n>\n  <span>\n    <p class=\"fs-14-gramm-normal\">{{ title }}</p>\n    <p class=\"fs-14-sofia-300\">{{ text }}</p>\n  </span>\n</button>"
        },
        {
            "name": "LightAssimetricButtonComponent",
            "id": "component-LightAssimetricButtonComponent-da7446dec63842a4c62951a5bc5018d2",
            "file": "src/app/atoms/buttons/light-assimetric-button/light-assimetric-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-light-assimetric-button",
            "styleUrls": [
                "./light-assimetric-button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./light-assimetric-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "srcPath",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-light-assimetric-button',\n  templateUrl: './light-assimetric-button.component.html',\n  styleUrls: ['./light-assimetric-button.component.scss']\n})\n\nexport class LightAssimetricButtonComponent {\n  @Input() srcPath: string;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-button-light-assimetric {\n  padding: 14px 20px;\n  background: var(--asimetric-bg-color);\n  border-radius: 20px 5px;\n  border: none;\n  transition: 0.3s;\n\n  &:hover {\n    background-color: var(--asimetric-bg-color-dark);\n  }\n\n  &:active {\n    background-color: var(--secondary-color-dark);\n  }\n}",
                    "styleUrl": "./light-assimetric-button.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<button class=\"app-button-light-assimetric\">\n  <img [src]=\"srcPath\">\n</button>"
        },
        {
            "name": "lightButtonComponent",
            "id": "component-lightButtonComponent-d2ea2295d720a1c6723219036dbddf85",
            "file": "src/app/atoms/buttons/lightButton/lightButton.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-light-button",
            "styleUrls": [
                "../button.component.scss",
                "lightButton.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./lightButton.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "line": 10,
                    "type": "string"
                },
                {
                    "name": "srcPath",
                    "line": 11,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-light-button',\n  templateUrl: './lightButton.component.html',\n  styleUrls: ['../button.component.scss', 'lightButton.component.scss'],\n})\n\nexport class lightButtonComponent {\n  @Input() backgroundColor: string;\n  @Input() srcPath: string;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".btn-app {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  transition: 0.3s;\n  border-radius: 8px;\n\n  &--h36 {\n    display: flex;\n    align-items: center;\n    height: 36px;\n    padding: 0 18px 0 18px;\n  }\n  \n  &--asimetric {\n    border-radius: 20px 5px;\n    height: 52px;\n    padding: 18px 41px 18px 44px;\n  }\n\n  &--h46 {\n    height: 46px;\n    padding: 13px 15px 12px 15px;\n  }\n\n  &--h46--wide {\n    height: 46px;\n    padding: 17px 37px;\n  }\n\n  &--h52 {\n    height: 52px;\n    padding: 18px 66px;\n  }\n\n  &--h53 {\n    height: 53px;\n    padding: 9px 10px;\n  }\n}\n",
                    "styleUrl": "../button.component.scss"
                },
                {
                    "data": ".btn-light {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  min-width: 48px;\n  height: 48px;\n  padding: 16px;\n  border: none;\n  background: var(--input-bg-color);\n\n  &:hover {\n    background: var(--light-btn-hover);\n  }\n\n  &:active {\n    background: var(--light-btn-hover);\n  }\n}",
                    "styleUrl": "lightButton.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<button \n  class=\"btn-app btn-light\"\n  [ngStyle]=\"{ 'background': backgroundColor }\"\n>\n  <img [src]=\"srcPath\">\n</button>\n\n"
        },
        {
            "name": "LinearChartComponent",
            "id": "component-LinearChartComponent-8cd3a92f4444022b416d810a504f1e8d",
            "file": "src/app/atoms/charts/linear-chart/linear-chart.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-linear-chart",
            "styleUrls": [
                "./linear-chart.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./linear-chart.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "categories",
                    "line": 12,
                    "type": "string[]"
                },
                {
                    "name": "colors",
                    "line": 13,
                    "type": "string[]"
                },
                {
                    "name": "date",
                    "line": 15,
                    "type": "string"
                },
                {
                    "name": "maxValue",
                    "line": 14,
                    "type": "number"
                },
                {
                    "name": "series",
                    "line": 11,
                    "type": "string[]"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "chartOptions",
                    "defaultValue": "{\n    title: {\n      text: '',\n      style: { fontSize:  '0px' },\n    },\n    tooltip: {\n      shared: false,\n      custom: function({ series, dataPointIndex, seriesIndex, w }) {\n        const total = w.globals.seriesTotals[seriesIndex];\n        const texts = [\n          { text: 'totlal', value: `${Math.round(series[0][dataPointIndex] * 100 / total)} %`},\n          { text: 'consent', value: series[0][dataPointIndex] + series[1][dataPointIndex] },\n          { text: 'opt-in', value: series[0][dataPointIndex] },\n          { text: 'opt-out', value: series[1][dataPointIndex] },\n        ]\n        const liClass = 'card-report-status__item fs-14-sofia-normal';\n        const spanClass = 'card-report-status__value fs-14-sofia-800';\n        return (\n          `<div class=\"card-report-status\">\n            <p class=\"card-report-status__title fs-18-gramm-light\">${w.config.title.text}</p>\n            <ul class=\"card-report-status__list\">\n              <li class=${liClass}><span class=${spanClass}>${texts[0].value}</span> ${texts[0].text}</li>\n              <li class=${liClass}><span class=${spanClass}>${texts[1].value}</span> ${texts[1].text}</li>\n              <li class=${liClass}><span class=${spanClass}>${texts[2].value}</span> ${texts[2].text}</li>\n              <li class=${liClass}><span class=${spanClass}>${texts[3].value}</span> ${texts[3].text}</li>\n            </ul>\n          </div>`\n        );\n      }\n    },\n    chart: {\n      height: 350,\n      type: \"line\",\n      toolbar: { show: false },\n    },\n    dataLabels: { enabled: false },\n    stroke: {\n      curve: \"smooth\",\n      width: 1.45,\n    },\n    grid: {\n      borderColor: \"rgba(1, 25, 73, 0.1)\",\n      position: 'back',\n      xaxis: { lines: { show: true }},\n      yaxis: { lines: { show: true }},\n    },\n    markers: {\n      size: 0,\n      colors: \"rgb(1, 25, 73)\",\n      shape: \"circle\",\n      hover: {\n        size: 8,\n      }\n    },\n    xaxis: {\n      categories: [],\n      crosshairs: { show: false },\n      tooltip: { enabled: false },\n      labels: {\n        style: {\n          colors: \"rgba(1, 25, 73, 0.3)\",\n          fontSize: \"14px\",\n          fontFamily: \"'Gramatica Bold', 'open-sans'\"\n        }\n      }\n    },\n    yaxis: {\n      min: 0,\n      max: 0,\n      tickAmount: 4,\n      labels: {\n        style: {\n          colors: [\"rgba(1, 25, 73, 0.3)\"],\n          fontSize: \"14px\",\n          fontFamily: \"'Gramatica Bold', 'open-sans'\"\n        }\n      }\n    },\n    legend: {\n      show: true,\n      position: 'top',\n      horizontalAlign: 'left', \n      fontSize: '12px',\n      fontFamily: \"'Gramatica Bold', 'open-sans'\",\n      labels: { colors: \"rgba(1, 25, 73, 0.75)\" },\n      onItemClick: { toggleDataSeries: false },\n      onItemHover: { highlightDataSeries: true },\n    }\n  }",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "updateChartOption",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 107
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 113
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 117
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnChanges, OnInit, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-linear-chart',\n  templateUrl: './linear-chart.component.html',\n  styleUrls: ['./linear-chart.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\n\nexport class LinearChartComponent  implements OnChanges, OnInit{\n  @Input() series: string[];\n  @Input() categories: string[];\n  @Input() colors: string[];\n  @Input() maxValue: number;\n  @Input() date: string;\n\n  chartOptions = {\n    title: {\n      text: '',\n      style: { fontSize:  '0px' },\n    },\n    tooltip: {\n      shared: false,\n      custom: function({ series, dataPointIndex, seriesIndex, w }) {\n        const total = w.globals.seriesTotals[seriesIndex];\n        const texts = [\n          { text: 'totlal', value: `${Math.round(series[0][dataPointIndex] * 100 / total)} %`},\n          { text: 'consent', value: series[0][dataPointIndex] + series[1][dataPointIndex] },\n          { text: 'opt-in', value: series[0][dataPointIndex] },\n          { text: 'opt-out', value: series[1][dataPointIndex] },\n        ]\n        const liClass = 'card-report-status__item fs-14-sofia-normal';\n        const spanClass = 'card-report-status__value fs-14-sofia-800';\n        return (\n          `<div class=\"card-report-status\">\n            <p class=\"card-report-status__title fs-18-gramm-light\">${w.config.title.text}</p>\n            <ul class=\"card-report-status__list\">\n              <li class=${liClass}><span class=${spanClass}>${texts[0].value}</span> ${texts[0].text}</li>\n              <li class=${liClass}><span class=${spanClass}>${texts[1].value}</span> ${texts[1].text}</li>\n              <li class=${liClass}><span class=${spanClass}>${texts[2].value}</span> ${texts[2].text}</li>\n              <li class=${liClass}><span class=${spanClass}>${texts[3].value}</span> ${texts[3].text}</li>\n            </ul>\n          </div>`\n        );\n      }\n    },\n    chart: {\n      height: 350,\n      type: \"line\",\n      toolbar: { show: false },\n    },\n    dataLabels: { enabled: false },\n    stroke: {\n      curve: \"smooth\",\n      width: 1.45,\n    },\n    grid: {\n      borderColor: \"rgba(1, 25, 73, 0.1)\",\n      position: 'back',\n      xaxis: { lines: { show: true }},\n      yaxis: { lines: { show: true }},\n    },\n    markers: {\n      size: 0,\n      colors: \"rgb(1, 25, 73)\",\n      shape: \"circle\",\n      hover: {\n        size: 8,\n      }\n    },\n    xaxis: {\n      categories: [],\n      crosshairs: { show: false },\n      tooltip: { enabled: false },\n      labels: {\n        style: {\n          colors: \"rgba(1, 25, 73, 0.3)\",\n          fontSize: \"14px\",\n          fontFamily: \"'Gramatica Bold', 'open-sans'\"\n        }\n      }\n    },\n    yaxis: {\n      min: 0,\n      max: 0,\n      tickAmount: 4,\n      labels: {\n        style: {\n          colors: [\"rgba(1, 25, 73, 0.3)\"],\n          fontSize: \"14px\",\n          fontFamily: \"'Gramatica Bold', 'open-sans'\"\n        }\n      }\n    },\n    legend: {\n      show: true,\n      position: 'top',\n      horizontalAlign: 'left', \n      fontSize: '12px',\n      fontFamily: \"'Gramatica Bold', 'open-sans'\",\n      labels: { colors: \"rgba(1, 25, 73, 0.75)\" },\n      onItemClick: { toggleDataSeries: false },\n      onItemHover: { highlightDataSeries: true },\n    }\n  };\n\n  updateChartOption = () => {\n    this.chartOptions.xaxis.categories = this.categories;\n    this.chartOptions.yaxis.max = this.maxValue;\n    this.chartOptions.title.text = this.date;\n  }\n\n  ngOnChanges() {\n   this.updateChartOption();\n  }\n\n  ngOnInit() {\n    this.updateChartOption();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "// overriding the apexcharts styles\n.apexcharts-legend-marker {\n  margin-right: 12px!important;\n  width: 24px!important;\n  height: 24px!important;\n  border-radius: 4px!important;\n}\n\n.apexcharts-legend-series {\n  margin-right: 31px!important;\n  margin-bottom: 30px!important;\n  display: flex!important;\n  align-items: center!important;\n}\n\n.apexcharts-legend-text {\n  line-height: 24px!important;\n  height: 24px;\n}\n\n#SvgjsSvg1128 {\n  cursor: pointer!important;\n}\n\n.apexcharts-tooltip.apexcharts-theme-light {\n  border-radius: 12px 12px 12px 0px!important;\n}\n\n/// tips block styling\n.card-report-status {\n  width: 214px;\n  padding: 16px 16px 6px;\n  border-radius: 12px 12px 12px 0px;\n  background-color: rgba(var(--secondary-color-code), 0.8);\n  color: var(--text-color);\n  box-shadow: 0px 40px 70px rgba(var(--secondary-color-code), 0.3);\n\n  &__title {\n    margin-bottom: 14px;\n    text-transform: uppercase;\n    color: rgba(var(--text-color-code), 0.5);\n  }\n\n  &__list {\n    width: 100%;\n    display: flex;\n    justify-content: space-between;\n    flex-wrap: wrap;\n  }\n\n  &__item {\n    width: 49%;\n    text-align: start;\n    margin-bottom: 13px;\n\n    &:nth-child(even) {\n      text-align: end;\n    }\n  }\n}",
                    "styleUrl": "./linear-chart.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnChanges",
                "OnInit"
            ],
            "templateData": "<div id=\"chart-linear\">\n  <apx-chart\n    [series]=\"series\"\n    [chart]=\"chartOptions.chart\"\n    [xaxis]=\"chartOptions.xaxis\"\n    [stroke]=\"chartOptions.stroke\"\n    [colors]=\"colors\"\n    [dataLabels]=\"chartOptions.dataLabels\"\n    [legend]=\"chartOptions.legend\"\n    [markers]=\"chartOptions.markers\"\n    [grid]=\"chartOptions.grid\"\n    [yaxis]=\"chartOptions.yaxis\"\n    [tooltip]=\"chartOptions.tooltip\"\n    [title]=\"chartOptions.title\"\n  ></apx-chart>\n</div>\n"
        },
        {
            "name": "MainNavigationMenuComponent",
            "id": "component-MainNavigationMenuComponent-a4db732f26a80faa5f5cc3155c8a1945",
            "file": "src/app/molecules/menu/main-navigation-menu/main-navigation-menu.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-main-navigation-menu",
            "styleUrls": [
                "./main-navigation-menu.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./main-navigation-menu.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "items",
                    "line": 11,
                    "type": "string[]"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "active",
                    "defaultValue": "0",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "handlClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "any"
                        },
                        {
                            "name": "i",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "i",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-main-navigation-menu',\n  templateUrl: './main-navigation-menu.component.html',\n  styleUrls: ['./main-navigation-menu.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\n\nexport class MainNavigationMenuComponent  {\n  @Input() items: string[];\n\n  active: number = 0;\n\n  handlClick(event: any, i: number) {\n    event.preventDefault();\n    this.active = i;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-main-navigation-menu {\n  display: flex;\n  align-items: center;\n\n  &__item {\n    margin-right: 20px;\n  }\n}\n\n.nav-link-secondary {\n  text-transform: capitalize!important;\n}",
                    "styleUrl": "./main-navigation-menu.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<ul class=\"app-main-navigation-menu\">\n  <li \n    class=\"app-main-navigation-menu__item\"\n    *ngFor=\"let item of items; let i = index\" \n  >\n    <app-nav-link\n      [isActive]=\"active === i\"\n      [title]=\"item\" \n      classes=\"nav-link-secondary fs-16-sofia-800 \"\n      (click)=\"handlClick($event, i)\"\n    >\n    </app-nav-link>\n  </li>\n</ul>\n\n"
        },
        {
            "name": "MapChartComponent",
            "id": "component-MapChartComponent-021dc9d0989eaf94fc4b73697d1406ab",
            "file": "src/app/atoms/charts/map-chart/map-chart.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-map-chart",
            "styleUrls": [
                "./map-chart.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./map-chart.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "countriesData",
                    "line": 32,
                    "type": "Countries"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "activeCountry",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "allCountriesData",
                    "defaultValue": "[]",
                    "type": "Country[]",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "chart",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "isTipVisible",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "map",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 45,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'mapChart'"
                        }
                    ]
                },
                {
                    "name": "mapHeight",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "polygonSeries",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "polygonTemplate",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "tipsData",
                    "defaultValue": "[]",
                    "type": "Country[]",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "tipsLeft",
                    "defaultValue": "0",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "tipsTop",
                    "defaultValue": "0",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 40
                }
            ],
            "methodsClass": [
                {
                    "name": "createChart",
                    "args": [
                        {
                            "name": "region",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53,
                    "jsdoctags": [
                        {
                            "name": "region",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 144
                },
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 149
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 153
                }
            ],
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "window:resize",
                    "args": [
                        {
                            "name": "event",
                            "type": "any"
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "line": 48
                }
            ],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { AfterViewInit, Component, ElementRef, HostListener, Input, OnChanges, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\nimport * as am4core from '@amcharts/amcharts4/core';\nimport * as am4maps from \"@amcharts/amcharts4/maps\";\nimport am4geodata_worldLow from \"@amcharts/amcharts4-geodata/worldLow\";\nimport { \n  AfricaCodes, AustraliaCodes, NorthAmericaCodes, SouthAmericaCodes, EuropeCodes, AsiaCodes \n} from './countriesCodes';\n\ninterface Country {\n  id: string, \n  value: number, \n  name: string \n}\n\ninterface Countries {\n  europe: Country[],\n  northAmerica: Country[],\n  southAmerica: Country[],\n  asia: Country[],\n  australia: Country[],\n  africa: Country[]\n}\n\n@Component({\n  selector: 'app-map-chart',\n  templateUrl: './map-chart.component.html',\n  styleUrls: ['./map-chart.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\n\nexport class MapChartComponent implements OnInit, OnChanges, AfterViewInit {\n  @Input() countriesData: Countries;\n\n  chart;\n  polygonSeries;\n  polygonTemplate;\n  activeCountry: string = '';\n  allCountriesData: Country[] = [];\n  isTipVisible: boolean = false;\n  tipsTop: number = 0;\n  tipsLeft: number = 0;\n  tipsData: Country[] = [];\n  mapHeight: number;\n\n  @ViewChild('mapChart') map: ElementRef;\n  \n  @HostListener('window:resize', ['$event'])\n  onResize(event: any) {\n    const height = this.map.nativeElement.clientWidth * 0.7;\n    this.mapHeight = height > 500 ? 500 : height;\n  }\n\n  createChart(region: string) {  \n    this.chart = null\n    this.chart = am4core.create(\"chartdiv\", am4maps.MapChart)\n    this.chart.geodata = am4geodata_worldLow;\n    this.chart.projection = new am4maps.projections.Miller();\n    this.polygonSeries = this.chart.series.push(new am4maps.MapPolygonSeries());\n    this.polygonSeries.useGeodata = true;\n    this.polygonTemplate = this.polygonSeries.mapPolygons.template;\n    this.polygonTemplate.tooltipText = \"\";\n    this.polygonTemplate.fill = am4core.color(\"rgba(1, 25, 73, 0.2)\")\n    const hs = this.polygonTemplate.states.create(\"hover\");\n    hs.properties.fill = am4core.color(\"rgb(22, 97, 60)\");\n\n    switch(region) {\n      case 'World': \n        this.polygonSeries.exclude = [\"AQ\"]\n        this.polygonSeries.data = [...this.allCountriesData];\n        this.tipsData = [...this.allCountriesData];\n      break;\n      case 'Europe': \n        this.polygonSeries.include = [...EuropeCodes];\n        this.polygonSeries.data = [...this.countriesData.europe];\n        this.tipsData = [...this.countriesData.europe];\n        this.chart.deltaLongitude = -120;\n        this.chart.homeZoomLevel = 1.3;\n      break;\n      case 'Asia': \n        this.polygonSeries.include = [...AsiaCodes];\n        this.polygonSeries.data = [...this.countriesData.asia];\n        this.tipsData = [...this.countriesData.asia];\n        this.chart.deltaLongitude = -130;\n      break;\n      case 'North America': \n        this.polygonSeries.include = [...NorthAmericaCodes];\n        this.polygonSeries.data = [...this.countriesData.northAmerica];\n        this.tipsData = [...this.countriesData.northAmerica];\n      break;\n      case 'South America': \n        this.polygonSeries.include = [...SouthAmericaCodes];\n        this.polygonSeries.data = [...this.countriesData.southAmerica];\n        this.tipsData = [...this.countriesData.southAmerica];\n      break;\n      case 'Australia': \n        this.polygonSeries.include = [...AustraliaCodes];\n        this.polygonSeries.data = [...this.countriesData.australia];\n        this.tipsData = [...this.countriesData.australia];\n        this.chart.deltaLongitude = -160;\n        this.chart.homeZoomLevel = 2;\n      break;\n      case 'Africa': \n        this.polygonSeries.include = [...AfricaCodes];\n        this.polygonSeries.data = [...this.countriesData.africa];\n        this.tipsData = [...this.countriesData.africa];\n      break;\n    }\n\n    this.polygonSeries.data.forEach(element => element.fill = am4core.color(\"rgba(1, 25, 73, 0.75)\"));\n    this.polygonTemplate.propertyFields.fill = \"fill\";\n \n    const setActive = (value, top, left) => {\n      const isCountryIncludedToTheList = this.allCountriesData.findIndex(country => country.id === value);\n      if (isCountryIncludedToTheList !== -1) {\n        this.activeCountry = value;\n        this.isTipVisible = true;\n        this.tipsTop = top - 24 - (16 * this.tipsData.length + 8 * (this.tipsData.length + 1)) - 10;\n        if (left - 110 > 0) {\n          if (left + 110 > this.map.nativeElement.clientWidth) {\n            this.tipsLeft = this.map.nativeElement.clientWidth - 220;\n          } else {\n            this.tipsLeft = left - 110;\n          }\n        } else {\n          this.tipsLeft = 0;\n        }\n      }\n    }\n\n    const setIsTipsVisible = (value) => {\n      this.isTipVisible = value;\n    }\n\n    this.polygonTemplate.events.on(\"over\", function(ev) {\n      const active = ev.target.dataItem.dataContext;\n      setActive(active.id, ev.event.pageY,ev.event.pageX);\n    })\n\n    this.polygonTemplate.events.on(\"out\", function(ev) {\n      setIsTipsVisible(false);\n    })\n  }\n\n  ngAfterViewInit() {\n    const height = this.map.nativeElement.clientWidth * 0.7;\n    this.mapHeight = height > 500 ? 500 : height;\n  }\n\n  ngOnChanges() {\n    this.createChart('World');\n  }\n\n  ngOnInit() {\n    let formattedCountriesData = [];\n    Object.values(this.countriesData).forEach(region => { \n      formattedCountriesData = [...formattedCountriesData,...region]\n    })\n    this.allCountriesData = formattedCountriesData;\n    this.createChart('World');\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "#chartdiv {\n  width: 100%;\n  height: 100%;\n}\n\n.map-chart {\n  margin-top: 67px;\n  width: 100%;\n\n  &__container {\n    width: 100%;\n    height: 452px;\n    position: relative;\n  }\n  \n  &__input-container {\n    width: 280px;\n    margin-bottom: 24px;\n  }\n\n  &__tips {\n    width: 228px;\n    position: fixed;\n    z-index: 3;\n    padding: 12px;\n\n    background-color: rgba(var(--secondary-color-code), 1);\n    border-radius: 12px;\n    color: var(--asimetric-bg-color);\n\n    &:after {\n      content: '';\n      position: absolute;\n      bottom: -6px;\n      left: calc(50% - 4px);\n      z-index: 4;\n\n      width: 16px;\n      height: 7px;\n\n      background: url('../../../../assets/images/triangle.png') center no-repeat;\n      background-size: cover;\n    }\n\n    &-item {\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      width: 100%;\n      margin: 8px 0;\n    }\n\n    &-text {\n      display: flex;\n      align-items: center;\n    }\n    \n    &-color {\n      display: block;\n      width: 6px;\n      height: 6px;\n      margin-right: 8px;\n      border-radius: 50%;\n      border: 1px solid rgb(26, 49, 95);\n    }\n  }\n}\n\n/// overriding styles for am4charts module\n\n#chartdiv > div > svg > g > g:nth-child(2) > g:nth-child(2) > g > g:nth-child(3) > g:nth-child(2) > g:nth-child(1) > path,\n#chartdiv > div > svg > g > g:nth-child(2) > g:nth-child(2) > g > g:nth-child(3) > g:nth-child(2) > g:nth-child(2) > path,\n#chartdiv > div > svg > g > g:nth-child(2) > g:nth-child(2) > g > g:nth-child(3) > g:nth-child(1) {\n  display: none;\n}\n\n#chartdiv > div > svg > g > g:nth-child(2) > g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > g:nth-child(2) > g:nth-child(2) > g > g:nth-child(1),\n#chartdiv > div > svg > g > g:nth-child(2) > g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > g:nth-child(2) > g:nth-child(2) > g > g:nth-child(3) {\n  &:hover {\n    cursor: pointer;\n  }\n}\n",
                    "styleUrl": "./map-chart.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit",
                "OnChanges",
                "AfterViewInit"
            ],
            "templateData": "<div class=\"map-chart\" #mapChart>\n  <div class=\"map-chart__input-container\">\n    <app-select-input-with-initial-value\n      (onItemSelect)=\"createChart($event)\"\n      [items]=\"['World', 'Europe', 'Asia', 'South America', 'North America', 'Africa', 'Australia']\"\n    ></app-select-input-with-initial-value>\n  </div>\n  <div class=\"map-chart__container\" [ngStyle]=\"{ 'height': mapHeight+'px' }\">\n    <div id=\"chartdiv\"></div>\n    <div \n      *ngIf=\"isTipVisible\" \n      class=\"map-chart__tips\" \n      #tips\n      [ngStyle]=\"{ 'top': tipsTop+'px', 'left': tipsLeft+'px' }\"\n    >\n      <ul class=\"map-chart__tips-list\">\n        <li class=\"map-chart__tips-item\" *ngFor=\"let item of tipsData; let i=index\">\n          <div class=\"map-chart__tips-text fs-12-sofia-300\">\n            <div class=\"map-chart__tips-color\" [ngStyle]=\"{ 'background-color': item.id ===  activeCountry ? 'green' : 'transparent' }\"></div>\n            {{ item.name }}\n          </div>\n          <div class=\"map-chart__tips-value fs-16-sofia-600\">{{ item.value }}</div>\n        </li>\n      </ul>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "MobileButtonComponent",
            "id": "component-MobileButtonComponent-d3bd6eb2639f791a5d5d093812a521a7",
            "file": "src/app/atoms/buttons/mobile-button/mobile-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-mobile-button",
            "styleUrls": [
                "./mobile-button.component.scss",
                "../button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./mobile-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "isOpen",
                    "line": 10,
                    "type": "boolean"
                },
                {
                    "name": "svgPathActive",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "svgPathNonActive",
                    "line": 11,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-mobile-button',\n  templateUrl: './mobile-button.component.html',\n  styleUrls: ['./mobile-button.component.scss', '../button.component.scss']\n})\n\nexport class MobileButtonComponent {\n  @Input() isOpen: boolean;\n  @Input() svgPathNonActive: string;\n  @Input() svgPathActive: string;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".module-border-wrap {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  box-sizing: border-box;\n  height: 46px;\n  width: fit-content;\n  padding: 1px;\n  \n  background: var(--success-grad-light);\n  border-radius: 6px;\n}\n\n.btn-mobile.btn-app {\n  height: 44px;\n  border-radius: 5px;  \n}\n\n.module-opacity-wrap {\n  background: var(--text-color);\n  border-radius: 5px;\n}\n\n.btn-mobile {\n  border: none;\n  background-color: var(--text-color);\n}",
                    "styleUrl": "./mobile-button.component.scss"
                },
                {
                    "data": ".btn-app {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  transition: 0.3s;\n  border-radius: 8px;\n\n  &--h36 {\n    display: flex;\n    align-items: center;\n    height: 36px;\n    padding: 0 18px 0 18px;\n  }\n  \n  &--asimetric {\n    border-radius: 20px 5px;\n    height: 52px;\n    padding: 18px 41px 18px 44px;\n  }\n\n  &--h46 {\n    height: 46px;\n    padding: 13px 15px 12px 15px;\n  }\n\n  &--h46--wide {\n    height: 46px;\n    padding: 17px 37px;\n  }\n\n  &--h52 {\n    height: 52px;\n    padding: 18px 66px;\n  }\n\n  &--h53 {\n    height: 53px;\n    padding: 9px 10px;\n  }\n}\n",
                    "styleUrl": "../button.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"module-border-wrap\">\n  <div class=\"module-opacity-wrap \">\n    <button type=\"button\" class=\"btn-app btn-app--h46 btn-mobile\">\n      <svg-icon \n        [src]=\"isOpen ? svgPathActive : svgPathNonActive\"\n      >\n      </svg-icon>\n    </button>\n  </div>\n</div>\n"
        },
        {
            "name": "MobileMainNavigationMenuComponent",
            "id": "component-MobileMainNavigationMenuComponent-d79a7481b08c3d7a806ac840ce46a1df",
            "file": "src/app/molecules/menu/mobile-main-navigation-menu/mobile-main-navigation-menu.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-mobile-main-navigation-menu",
            "styleUrls": [
                "./mobile-main-navigation-menu.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./mobile-main-navigation-menu.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "items",
                    "line": 10,
                    "type": "string[]"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "active",
                    "defaultValue": "0",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "handlClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "any"
                        },
                        {
                            "name": "i",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "i",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-mobile-main-navigation-menu',\n  templateUrl: './mobile-main-navigation-menu.component.html',\n  styleUrls: ['./mobile-main-navigation-menu.component.scss']\n})\n\nexport class MobileMainNavigationMenuComponent {\n  @Input() items: string[];\n\n  active: number = 0;\n\n  handlClick(event: any, i: number) {\n    event.preventDefault();\n    this.active = i;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-mobile-main-navigation-menu {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n  padding: 20px;\n  background: #EAEDF2;\n}",
                    "styleUrl": "./mobile-main-navigation-menu.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<ul class=\"app-mobile-main-navigation-menu\">\n  <li \n  class=\"app-mobile-main-navigation-menu__item\"\n  *ngFor=\"let item of items; let i = index\" \n  >\n    <app-icon-links\n      [isActive]=\"active === i\"\n      [title]=\"item.title\" \n      [svgPath]=\"item.svgPath\"\n      (click)=\"handlClick($event, i)\"\n    >\n    </app-icon-links>\n  </li>\n</ul>\n\n"
        },
        {
            "name": "MutableDangerButtonComponent",
            "id": "component-MutableDangerButtonComponent-cee7848a6585d00782e52de3221e3d59",
            "file": "src/app/atoms/buttons/domains-card-buttons/mutable-danger-button/mutable-danger-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-mutable-danger-button",
            "styleUrls": [
                "./mutable-danger-button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./mutable-danger-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "onActive",
                    "line": 11,
                    "type": "boolean"
                },
                {
                    "name": "svgPath",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "classes",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnChanges } from '@angular/core';\n\n@Component({\n  selector: 'app-mutable-danger-button',\n  templateUrl: './mutable-danger-button.component.html',\n  styleUrls: ['./mutable-danger-button.component.scss']\n})\n\nexport class MutableDangerButtonComponent implements OnChanges {\n  @Input() svgPath: string;\n  @Input() onActive: boolean;\n\n  classes = '';\n\n  ngOnChanges(): void {\n    this.classes = this.onActive ? 'app-mutable-danger-button active' : 'app-mutable-danger-button';\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-mutable-danger-button {\n  height: 44px;\n  padding: 11px 14px;\n  border-radius: 8px;\n  border: none;\n  background-color: rgba(var(--danger-color-code), 0.1);\n}\n\n.app-mutable-danger-button.active {\n  background-color: rgba(var(--text-color-code), 0.1);\n\n  &:hover {\n    background-color: rgba(var(--text-color-code), 1);\n  }\n\n  &:active {\n    background-color: rgba(var(--text-color-code), 0.1);\n  }\n}\n",
                    "styleUrl": "./mutable-danger-button.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnChanges"
            ],
            "templateData": "<button \n  [ngClass]=\"classes\"\n>\n  <svg-icon \n    [src]=\"svgPath\"\n  >\n  </svg-icon>\n</button>\n"
        },
        {
            "name": "MutableGradientIconButtonComponent",
            "id": "component-MutableGradientIconButtonComponent-d56577ebe0beb8a18856df3143532e2a",
            "file": "src/app/atoms/buttons/domains-card-buttons/mutable-gradient-icon-button/mutable-gradient-icon-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-mutable-gradient-icon-button",
            "styleUrls": [
                "./mutable-gradient-icon-button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./mutable-gradient-icon-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "onActive",
                    "line": 10,
                    "type": "boolean"
                },
                {
                    "name": "svgPath",
                    "line": 9,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "changeToActiveColor",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "changeToStaticColor",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "classes",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "color",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "hoverColor",
                    "defaultValue": "'url(#paint0_linear)'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "staticColor",
                    "defaultValue": "'rgb(1, 25, 73)'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "staticOnActiveColor",
                    "defaultValue": "'rgb(255, 255, 255)'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnChanges, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-mutable-gradient-icon-button',\n  templateUrl: './mutable-gradient-icon-button.component.html',\n  styleUrls: ['./mutable-gradient-icon-button.component.scss']\n})\nexport class MutableGradientIconButtonComponent implements OnChanges {\n  @Input() svgPath: string;\n  @Input() onActive: boolean;\n  \n  color = '';\n  staticColor='rgb(1, 25, 73)';\n  staticOnActiveColor='rgb(255, 255, 255)';\n  hoverColor='url(#paint0_linear)';\n  classes = '';\n\n  changeToActiveColor = () => {\n    this.color = this.hoverColor;\n  }\n\n  changeToStaticColor = () => {\n    this.color = this.staticOnActiveColor;\n  }\n\n  ngOnChanges(): void {\n    this.classes = this.onActive ? 'app-mutable-gradient-icon-button active' : 'app-mutable-gradient-icon-button ';\n    this.color = this.onActive ? this.staticOnActiveColor : this.staticColor;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-mutable-gradient-icon-button {\n  height: 44px;\n  padding: 11px 14px;\n  border-radius: 8px;\n  border: none;\n  background-color: rgba(var(--secondary-color-code), 0.05);\n}\n\n.app-mutable-gradient-icon-button.active {\n  background-color: rgba(var(--text-color-code), 0.1);\n\n  &:hover {\n    background-color: rgba(var(--text-color-code), 1);\n  }\n\n  &:active {\n    background-color: rgba(var(--text-color-code), 0.1);\n  }\n}",
                    "styleUrl": "./mutable-gradient-icon-button.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnChanges"
            ],
            "templateData": "<button \n  [ngClass]=\"classes\"\n  (mousedown)=\"changeToStaticColor()\"\n  (mouseup)=\"changeToActiveColor()\"\n  (mouseenter)=\"changeToActiveColor()\"\n  (mouseleave)=\"changeToStaticColor()\"\n>\n  <svg-icon \n    [src]=\"svgPath\"\n    [svgStyle]=\"{ 'stroke': color }\"\n  >\n  </svg-icon>\n</button>\n\n"
        },
        {
            "name": "MutableLightButtonComponent",
            "id": "component-MutableLightButtonComponent-ff094c2ef7149c6a6e5bf7087cd3431a",
            "file": "src/app/atoms/buttons/domains-card-buttons/mutable-light-button/mutable-light-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-mutable-light-button",
            "styleUrls": [
                "./mutable-light-button.component.scss",
                "../../button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./mutable-light-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "title",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-mutable-light-button',\n  templateUrl: './mutable-light-button.component.html',\n  styleUrls: ['./mutable-light-button.component.scss', '../../button.component.scss']\n})\n\nexport class MutableLightButtonComponent {\n  @Input() title: string;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-button-mutable-light {\n  width: fit-content;\n  padding: 17px 29px;\n  box-sizing: border-box;\n\n  border: 1px solid var(--asimetric-bg-color);\n  border-radius: 8px;\n  background-color: transparent;\n  text-transform: uppercase;\n  letter-spacing: 0.05em;\n  color: var(--secondary-color);\n\n  &:hover {\n    background-color: rgba(var(--text-color-code), 0.15);\n  }\n\n  &:active {\n    background-color: transparent;\n  }\n}",
                    "styleUrl": "./mutable-light-button.component.scss"
                },
                {
                    "data": ".btn-app {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  transition: 0.3s;\n  border-radius: 8px;\n\n  &--h36 {\n    display: flex;\n    align-items: center;\n    height: 36px;\n    padding: 0 18px 0 18px;\n  }\n  \n  &--asimetric {\n    border-radius: 20px 5px;\n    height: 52px;\n    padding: 18px 41px 18px 44px;\n  }\n\n  &--h46 {\n    height: 46px;\n    padding: 13px 15px 12px 15px;\n  }\n\n  &--h46--wide {\n    height: 46px;\n    padding: 17px 37px;\n  }\n\n  &--h52 {\n    height: 52px;\n    padding: 18px 66px;\n  }\n\n  &--h53 {\n    height: 53px;\n    padding: 9px 10px;\n  }\n}\n",
                    "styleUrl": "../../button.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<button class=\"app-button-mutable-light fs-12-sofia-800\">\n  {{ title }}\n</button>\n\n"
        },
        {
            "name": "MutablePrimaryButtonComponent",
            "id": "component-MutablePrimaryButtonComponent-7163cc5010e33663632419ef7c1e5157",
            "file": "src/app/atoms/buttons/domains-card-buttons/mutable-primary-button/mutable-primary-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-mutable-primary-button",
            "styleUrls": [
                "./mutable-primary-button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./mutable-primary-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "onActive",
                    "line": 11,
                    "type": "boolean"
                },
                {
                    "name": "title",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "classes",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnChanges } from '@angular/core';\n\n@Component({\n  selector: 'app-mutable-primary-button',\n  templateUrl: './mutable-primary-button.component.html',\n  styleUrls: ['./mutable-primary-button.component.scss']\n})\n\nexport class MutablePrimaryButtonComponent implements OnChanges {\n  @Input() title: string;\n  @Input() onActive: boolean;\n\n  classes = '';\n\n  ngOnChanges() {\n    this.classes = this.onActive ? 'app-mutable-primary-button active' : 'app-mutable-primary-button';\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-mutable-primary-button {\n  padding: 16px 29px;\n  border-radius: 8px;\n  border: none;\n  background: rgba(var(--secondary-color-code), 0.05);\n  color: var(--secondary-color);\n  text-transform: uppercase;\n\n  &:hover {\n    background-color: var(--text-color);\n\n    & > p {\n      background: var(--success-grad-light);\n      background-clip: text;\n      -webkit-background-clip: text;\n      -webkit-text-fill-color: transparent;\n    }\n  }\n\n  &:active {\n    background: rgba(var(--secondary-color-code), 0.15);\n\n    & > p {\n      background: var(--text-color);\n      background-clip: text;\n      -webkit-background-clip: text;\n      -webkit-text-fill-color: transparent;\n    }\n  }\n}\n\n\n.app-mutable-primary-button.active {\n  background: rgba(var(--text-color-code), 0.15);\n\n  & > p {\n    color: var(--text-color);\n  }\n\n  &:hover {\n    background-color: var(--text-color);\n  }\n\n  &:active {\n    background: rgba(var(--secondary-color-code), 0.15);\n\n    & > p {\n      background: var(--text-color);\n      background-clip: text;\n      -webkit-background-clip: text;\n      -webkit-text-fill-color: transparent;\n    }\n  }\n}\n",
                    "styleUrl": "./mutable-primary-button.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnChanges"
            ],
            "templateData": "<button type=\"button\" [ngClass]=\"classes\">\n  <p class=\"app-mutable-primary-button__title fs-12-sofia-800\">{{ title }}</p>\n</button>\n\n"
        },
        {
            "name": "navLinkComponent",
            "id": "component-navLinkComponent-8d90507f4162362e8faa501fbb3414f6",
            "file": "src/app/atoms/navLink/textLinks/navLink.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-nav-link",
            "styleUrls": [
                "navLink.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./navLink.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "classes",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "isActive",
                    "line": 12,
                    "type": "boolean"
                },
                {
                    "name": "title",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "appointedClasses",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnChanges } from '@angular/core';\n\n@Component({\n  selector: 'app-nav-link',\n  templateUrl: './navLink.component.html',\n  styleUrls: ['navLink.component.scss'],\n})\n\nexport class navLinkComponent implements OnChanges {\n  @Input() title: string;\n  @Input() classes: string;\n  @Input() isActive: boolean;\n\n  appointedClasses: string = '';\n\n  ngOnChanges() {\n    this.appointedClasses = this.isActive ? `${this.classes} active` : this.classes;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".nav-link-secondary {\n  position: relative;\n  text-transform: uppercase;\n  background: rgba(var(--secondary-color-code), 0.5);\n  -webkit-text-fill-color: transparent;\n  -webkit-background-clip: text;\n  background-clip: text;\n  transition: 0.3;\n\n  &:hover {\n    background: var(--secondary-color); \n    -webkit-background-clip: text;\n    background-clip: text;\n  }\n\n  &:active {\n    background: var(--success-grad-light); \n    -webkit-background-clip: text;\n    background-clip: text;\n  }\n\n  &.active {\n    text-decoration: none;\n    -webkit-text-fill-color: transparent;\n    background: var(--success-grad-light); \n    -webkit-background-clip: text;\n    background-clip: text;\n    transition: 0.3;\n  }\n}\n\n.nav-link-highlited {\n  &.active {\n    &::after {\n      width: 100%;\n    }\n  }\n\n  &::after {\n    content: '';\n    position: absolute;\n    bottom: -3px;\n    left: 0;\n\n    width: 0;\n    height: 2px;\n\n    background: var(--success-grad-light);\n    transition: 0.3s;\n  }\n\n  &:active {\n    &::after {\n      width: 100%;\n    }\n  }\n}\n\n.nav-link-main {\n  position: relative;\n  background: rgba(var(--secondary-color-code), 0.75);\n  -webkit-background-clip: text;\n  background-clip: text;\n  -webkit-text-fill-color: transparent;\n  text-transform: capitalize;\n\n  &::after {\n    content: '';\n    position: absolute;\n    bottom: 0;\n    left: 0;\n\n    width: 0;\n    height: 1px;\n\n    background-color: rgba(var(--secondary-color-code), 0.75);\n    transition: 0.3s;\n  }\n\n  &:hover {\n    &::after {\n      width: 100%;\n    }\n  }\n\n  &:active {\n    background: var(--success-grad-light); \n    -webkit-background-clip: text;\n    background-clip: text;\n\n    &::after {\n      width: 0;\n    }\n  }\n\n  &.active {\n    text-decoration: none;\n    background: var(--success-grad-light); \n    -webkit-text-fill-color: transparent;\n    -webkit-background-clip: text;\n    background-clip: text;\n    transition: 0.3;\n  }\n}\n",
                    "styleUrl": "navLink.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnChanges"
            ],
            "templateData": "<a \n  href=\"#\" \n  [ngClass]=\"appointedClasses\"\n>\n  {{ title }}\n</a>\n"
        },
        {
            "name": "OnboardingCardComponent",
            "id": "component-OnboardingCardComponent-d1eff4fa8b56c7643821d0863b51d109",
            "file": "src/app/atoms/card/onboarding-card/onboarding-card.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-onboarding-card",
            "styleUrls": [
                "./onboarding-card.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./onboarding-card.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "id",
                    "line": 14,
                    "type": "string"
                },
                {
                    "name": "isSelected",
                    "line": 11,
                    "type": "boolean"
                },
                {
                    "name": "text",
                    "line": 13,
                    "type": "string"
                },
                {
                    "name": "title",
                    "line": 12,
                    "type": "string"
                }
            ],
            "outputsClass": [
                {
                    "name": "delete",
                    "defaultValue": "new EventEmitter()",
                    "line": 16,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "edit",
                    "defaultValue": "new EventEmitter()",
                    "line": 17,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "select",
                    "defaultValue": "new EventEmitter()",
                    "line": 18,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "block",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 71,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'block'"
                        }
                    ]
                },
                {
                    "name": "cardColor",
                    "defaultValue": "this.onActive ? this.highlitedColor : this.staticColor",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "handleCopy",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 52
                },
                {
                    "name": "handleDelete",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "handleEdit",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "handleShowReports",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "highlitedColor",
                    "defaultValue": "'linear-gradient(89.52deg, #24B04B -46.17%, #0263BC 186.99%)'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "isMobile",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "isSmallMobile",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "isVisibleOptions",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "onActive",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "setIsVisibleOptions",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 59
                },
                {
                    "name": "setOnActive",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 63
                },
                {
                    "name": "staticColor",
                    "defaultValue": "'rgb(255, 255, 255)'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "textColor",
                    "defaultValue": "this.onActive ? this.staticColor : this.textStaticColor",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "textDirection",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "textStaticColor",
                    "defaultValue": "'#011949'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 26
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 87
                }
            ],
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "document:click",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event"
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "line": 81
                },
                {
                    "name": "window:resize",
                    "args": [
                        {
                            "name": "event",
                            "type": "any"
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "line": 73
                }
            ],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, ViewEncapsulation, ViewChild, ElementRef, OnChanges, HostListener, EventEmitter, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-onboarding-card',\n  templateUrl: './onboarding-card.component.html',\n  styleUrls: ['./onboarding-card.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\n\nexport class OnboardingCardComponent implements OnChanges {\n  @Input() isSelected: boolean;\n  @Input() title: string;\n  @Input() text: string;\n  @Input() id: string;\n  \n  @Output() delete: EventEmitter<any> = new EventEmitter();\n  @Output() edit: EventEmitter<any> = new EventEmitter();\n  @Output() select: EventEmitter<any> = new EventEmitter();\n\n  onActive = false;\n  isMobile: boolean;\n  isSmallMobile: boolean;\n  isVisibleOptions = false;\n  highlitedColor = 'linear-gradient(89.52deg, #24B04B -46.17%, #0263BC 186.99%)';\n  staticColor = 'rgb(255, 255, 255)';\n  textStaticColor = '#011949'\n  cardColor = this.onActive ? this.highlitedColor : this.staticColor;\n  textColor = this.onActive ? this.staticColor : this.textStaticColor;\n  textDirection = '';\n\n  handleDelete = () => {\n    if (this.isMobile) {\n      this.isVisibleOptions = false;\n    }\n    this.delete.emit(this.id);\n  }\n\n  handleEdit = () => {\n    if (this.isMobile) {\n      this.isVisibleOptions = false;\n    }\n    this.edit.emit(this.id);\n  }\n\n  handleShowReports = () => {\n    if (this.isMobile) {\n      this.isVisibleOptions = false;\n    }\n    // your logic on press this button\n  }\n\n  handleCopy = () => {\n    if (this.isMobile) {\n      this.isVisibleOptions = false;\n    }\n    // your logic on press this button\n  }\n  \n  setIsVisibleOptions = () => {\n    this.isVisibleOptions = !this.isVisibleOptions;\n  }\n\n  setOnActive = (value: boolean) => {\n    if (!this.isMobile) {\n      this.onActive = value;\n      this.cardColor = value ? this.highlitedColor : this.staticColor;\n      this.textColor = value ? this.staticColor : this.textStaticColor;\n    }\n  }\n\n  @ViewChild('block') block: ElementRef;\n  @HostListener('window:resize', ['$event'])\n  onResize(event: any) {\n    const width = this.block.nativeElement.clientWidth;\n    this.isMobile = width < 750;\n    this.isSmallMobile = width < 420;\n  }\n\n\n  @HostListener('document:click', ['$event'])\n\tonClick(event: Event) {\n    if (!this.block.nativeElement.contains(event.target)) {\n      this.isVisibleOptions = false;\n    }\n  }\n\n  ngOnChanges() {\n    const width = document.querySelector('.app-onboarding-card').clientWidth;\n    this.isMobile = width < 750;\n    this.isSmallMobile = width < 420;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-onboarding-card {\n  width: 100%;\n  padding: 15px 24px 13px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  position: relative;\n\n  background: transparent;\n  border: 1px solid rgba(var(--secondary-color-code), 0.15);\n  border-radius: 12px;\n  color: var(--secondary-color);\n\n  &__wrapper {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  }\n\n  &__text-box {\n    display: flex;\n    margin-left: 26px;\n  }\n\n  &:hover {\n    cursor: pointer;\n    background: var(--success-grad-light);\n    color: var(--text-color);\n  }\n\n  &__title {\n    margin-right: 16px;\n  }\n\n  &__text {\n    opacity: 0.6;\n  }\n\n  &__mobile-box {\n    position: absolute;\n    right: 0;\n    top: calc(100% + 2px);\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    z-index: 2;\n    padding: 10px 20px;\n\n    background-color: rgba(var(--text-color-code), 1);\n    border: 1px solid rgba(var(--secondary-color-code), 0.15);\n    border-radius: 12px;\n  }\n\n  &__mobile-button {\n    padding: 5px;\n    border: none;\n    background-color: transparent;\n    color: rgba(var(--secondary-color-code), 0.7);\n\n    &:active {\n      background: var(--success-grad-light);\n      background-clip: text;\n      -webkit-background-clip: text;\n      -webkit-text-fill-color: transparent;\n    }\n  }\n\n  &__toggler {\n    display: flex;\n    align-items: center;\n    border: none;\n    background-color: transparent;\n  }\n}\n\napp-mutable-primary-button {\n  margin-right: 16px;\n}\n\napp-mutable-gradient-icon-button {\n  margin-right: 14px;\n}",
                    "styleUrl": "./onboarding-card.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnChanges"
            ],
            "templateData": "<div class=\"app-onboarding-card\"\n  (mouseenter)=\"setOnActive(true)\"\n  (mouseleave)=\"setOnActive(false)\"\n  [ngStyle]=\"{ 'background': cardColor }\"\n  #block\n>\n  <div class=\"app-onboarding-card__wrapper\">\n    <app-checkbox-mutable-gradient\n      [onActive]=\"onActive\"\n      [isChecked]=\"isSelected\"\n      [id]=\"id\"\n      (handleChange)=\"select.emit($event)\"\n    >\n    </app-checkbox-mutable-gradient>\n    <div class=\"app-onboarding-card__text-box\"\n      [ngStyle]=\"{ 'flex-direction': isSmallMobile ? 'column' : 'row' }\"\n    >\n      <p [ngStyle]=\"{ 'color': textColor }\" class=\"app-onboarding-card__title fs-18-sofia-600\">{{ title }}</p>\n      <p [ngStyle]=\"{ 'color': textColor }\" class=\"app-onboarding-card__text fs-18-sofia-300-simple\">{{ text }}</p>\n    </div>\n  </div>\n  <div class=\"app-ondoarding-card__wrapper\" *ngIf=\"isMobile\">\n    <button \n      type=\"button\"\n      class=\"app-onboarding-card__toggler\"\n      (click)=\"setIsVisibleOptions()\"\n    >\n      <svg-icon \n        [src]=\"'assets/images/menu/Options.svg'\"\n        [svgStyle]=\"{ 'fill': '#011949' }\"\n      >\n      </svg-icon>\n    </button>\n    <div class=\"app-onboarding-card__mobile-box\" *ngIf=\"isVisibleOptions\">\n      <button \n        class=\"app-onboarding-card__mobile-button fs-16-gramm-300\" \n        type=\"button\"\n        (click)=\"handleEdit()\"\n      >\n        Edit\n      </button>\n      <button \n        class=\"app-onboarding-card__mobile-button fs-16-gramm-300\" \n        type=\"button\"\n        (click)=\"handleShowReports()\"\n      > \n        Reports\n      </button>\n      <button \n        class=\"app-onboarding-card__mobile-button fs-16-gramm-300\" \n        type=\"button\"\n        (click)=\"handleCopy()\"\n      > \n        Copy\n      </button>\n      <button \n        class=\"app-onboarding-card__mobile-button fs-16-gramm-300\" \n        type=\"button\"\n        (click)=\"handleDelete()\"\n      >\n        Delete\n      </button>\n    </div>\n  </div>\n  <div class=\"app-onboarding-card__wrapper\" *ngIf=\"!isMobile\">\n    <app-mutable-primary-button\n      [title]=\"'edit'\"\n      [onActive]=\"onActive\"\n      (click)=\"handleEdit()\"\n    >\n    </app-mutable-primary-button>\n    <app-mutable-primary-button\n      [title]=\"'reports'\"\n      [onActive]=\"onActive\"\n      (click)=\"handleShowReports()\"\n    >\n    </app-mutable-primary-button>\n    <app-mutable-gradient-icon-button\n      [svgPath]=\"'assets/images/copy.svg'\"\n      [onActive]=\"onActive\"\n      (click)=\"handleCopy()\"\n    >\n    </app-mutable-gradient-icon-button>\n    <app-mutable-danger-button\n      [svgPath]=\"'assets/images/basket.svg'\"\n      [onActive]=\"onActive\"\n      (click)=\"handleDelete()\"\n    >\n    </app-mutable-danger-button>\n  </div>\n</div>\n"
        },
        {
            "name": "OnboardingListComponent",
            "id": "component-OnboardingListComponent-31eb191976ce3ee47327acf5510d3b30",
            "file": "src/app/molecules/onboarding-list/onboarding-list.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-onboarding-list",
            "styleUrls": [
                "./onboarding-list.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./onboarding-list.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "domains",
                    "line": 16,
                    "type": "Domain[]"
                },
                {
                    "name": "selected",
                    "line": 17,
                    "type": "string[]"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "activeId",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "activeTitle",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "changeSelectedList",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "ctx",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "deleteModalContent",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'deleteModalContent'"
                        }
                    ]
                },
                {
                    "name": "editModalContent",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'editModalContent'"
                        }
                    ]
                },
                {
                    "name": "isModalVisible",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "modalComponent",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "modalDangerButtonFunction",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "modalDangerButtonTitle",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "modalPrimaryButtonFunction",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "modalPrimaryButtonTitle",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "modalTitle",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 25
                }
            ],
            "methodsClass": [
                {
                    "name": "checkIsSelected",
                    "args": [
                        {
                            "name": "id",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 37,
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "closeModal",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 67
                },
                {
                    "name": "deleteDomain",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 81
                },
                {
                    "name": "editDomain",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 75
                },
                {
                    "name": "handleDelete",
                    "args": [
                        {
                            "name": "id",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleEdit",
                    "args": [
                        {
                            "name": "id",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, ElementRef, Input, ViewChild } from '@angular/core';\n\ninterface Domain {\n  title: string,\n  text: string,\n  id: string\n}\n\n@Component({\n  selector: 'app-onboarding-list',\n  templateUrl: './onboarding-list.component.html',\n  styleUrls: ['./onboarding-list.component.scss']\n})\n\nexport class OnboardingListComponent {\n  @Input() domains: Domain[];\n  @Input() selected: string[];\n\n  @ViewChild('deleteModalContent')deleteModalContent: ElementRef;\n  @ViewChild('editModalContent')editModalContent: ElementRef;\n\n  isModalVisible=false;\n  activeTitle = '';\n  activeId='';\n  modalTitle='';\n  modalPrimaryButtonTitle='';\n  modalDangerButtonTitle='';\n  modalPrimaryButtonFunction=(args: any) => {};\n  modalDangerButtonFunction=(args: any) => {};\n  modalComponent;\n  ctx;\n\n  changeSelectedList = (id: string) => {\n    this.selected = (this.selected.includes(id)) ? this.selected.filter(domain => domain !== id) : [...this.selected, id];\n  }\n\n  checkIsSelected(id: string) {\n    return this.selected.includes(id);\n  }\n\n  handleDelete(id: string) {\n    this.activeTitle =this.domains.find(domain => domain.id === id).title;\n    this.ctx = { titleActiveDomain: this.activeTitle };\n    this.modalTitle = 'Delete domain';\n    this.modalPrimaryButtonTitle = 'exit';\n    this.modalDangerButtonTitle = 'delete';\n    this.modalPrimaryButtonFunction = this.closeModal;\n    this.modalDangerButtonFunction = this.deleteDomain;\n    this.activeId = id;\n    this.modalComponent = this.deleteModalContent;\n    this.isModalVisible = true;\n  }\n\n  handleEdit(id: string) {\n    this.activeTitle =this.domains.find(domain => domain.id === id).title;\n    this.ctx = { initialValue: this.activeTitle };\n    this.modalTitle = 'Rename domain';\n    this.modalPrimaryButtonTitle = 'rename';\n    this.modalDangerButtonTitle = '';\n    this.modalPrimaryButtonFunction = this.editDomain;\n    this.modalDangerButtonFunction = null;\n    this.activeId = id;\n    this.modalComponent = this.editModalContent;\n    this.isModalVisible = true;\n  }\n\n  closeModal() {\n    this.isModalVisible = false;\n  }\n\n  setValue(value: string) {\n    this.activeTitle = value;\n  }\n\n  editDomain() {\n    const activeIndex = this.domains.findIndex(domain => domain.id === this.activeId);\n    this.domains[activeIndex].title = this.activeTitle;\n    this.isModalVisible = false;\n  }\n\n  deleteDomain() {\n    this.domains = this.domains.filter(domain => domain.id !== this.activeId);\n    this.isModalVisible = false;\n    this.selected = this.selected.filter(domain => domain !== this.activeId);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-onboarding-component {\n  position: relative;\n  color: var(--secondary-color);\n\n  &__list {\n    display: flex;\n    flex-direction: column;\n    \n    & * {\n      margin-bottom: 23px;\n    }\n  \n    & :last-child {\n      margin-bottom: 0;\n    }\n  }\n}",
                    "styleUrl": "./onboarding-list.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"app-onboarding-component\">\n\n<ng-template #deleteModalContent let-titleActiveDomain=\"titleActiveDomain\">\n  <p class=\"fs-16-sofia-300\">Do you really want to delete the <strong>{{titleActiveDomain}}</strong></p>\n</ng-template>\n<ng-template #editModalContent let-initialValue=\"initialValue\">\n  <app-form-input\n    [placeholderText]=\"''\"\n    [isBold]=\"true\"\n    [initialValue]=\"initialValue\"\n    [name]=\"initialValue\"\n    (changeValueParentFunction)=\"setValue($event)\"\n  >\n  </app-form-input>\n</ng-template>\n  <ul class=\"app-onboarding-component__list\">\n    <li class=\"app-onboarding-component__item\" *ngFor=\"let domain of domains\">\n      <app-onboarding-card\n        [title]=\"domain.title\"\n        [text]=\"domain.text\"\n        [isSelected]=\"checkIsSelected(domain.id)\"\n        (delete)=\"handleDelete($event)\"\n        (edit)=\"handleEdit($event)\"\n        (select)=\"changeSelectedList($event)\"\n        [id]=\"domain.id\"\n      >\n      </app-onboarding-card>\n    </li>\n  </ul>\n  <div *ngIf=\"isModalVisible\">\n    <app-approve-modal\n      [title]=\"modalTitle\"\n      [dangerButtonTitle]=\"modalDangerButtonTitle\"\n      [primaryButtonTitle]=\"modalPrimaryButtonTitle\"\n      (closeModal)=\"closeModal()\"\n      (primaryButtonFunction)=\"modalPrimaryButtonFunction()\"\n      (dangerButtonFunction)=\"modalDangerButtonFunction()\"\n    >\n    <ng-container \n        *ngTemplateOutlet=\"modalComponent;context:ctx\">\n    </ng-container>\n    </app-approve-modal>\n  </div>\n</div>\n"
        },
        {
            "name": "primaryButtonComponent",
            "id": "component-primaryButtonComponent-dcd292856e020556f0a29f81b32c2083",
            "file": "src/app/atoms/buttons/primaryButton/primaryButton.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-primary-button",
            "styleUrls": [
                "../button.component.scss",
                "primaryButton.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./primaryButton.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "svgPath",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "title",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "fillColor",
                    "defaultValue": "'url(#paint0_linear)'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "changeToActiveColor",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20
                },
                {
                    "name": "changeToLightColor",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-primary-button',\n  templateUrl: './primaryButton.component.html',\n  styleUrls: ['../button.component.scss', 'primaryButton.component.scss'],\n})\n\nexport class primaryButtonComponent {\n  @Input() title: string;\n  @Input() backgroundColor: string;\n  @Input() svgPath: string;\n\n  fillColor='url(#paint0_linear)';\n\n  changeToLightColor() {  \n    this.fillColor = 'url(#paint0_linear)';\n  }\n\n  changeToActiveColor() {\n    this.fillColor = 'white';\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".btn-app {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  transition: 0.3s;\n  border-radius: 8px;\n\n  &--h36 {\n    display: flex;\n    align-items: center;\n    height: 36px;\n    padding: 0 18px 0 18px;\n  }\n  \n  &--asimetric {\n    border-radius: 20px 5px;\n    height: 52px;\n    padding: 18px 41px 18px 44px;\n  }\n\n  &--h46 {\n    height: 46px;\n    padding: 13px 15px 12px 15px;\n  }\n\n  &--h46--wide {\n    height: 46px;\n    padding: 17px 37px;\n  }\n\n  &--h52 {\n    height: 52px;\n    padding: 18px 66px;\n  }\n\n  &--h53 {\n    height: 53px;\n    padding: 9px 10px;\n  }\n}\n",
                    "styleUrl": "../button.component.scss"
                },
                {
                    "data": ".module-border-wrap {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  \n  box-sizing: border-box;\n  height: 46px;\n  width: fit-content;\n  padding: 1px;\n  \n  background: var(--success-grad-light);\n  border-radius: 6px;\n}\n\n.module-opacity-wrap {\n  background: var(--text-color);\n  border-radius: 5px;\n}\n\n.btn-primary.btn-app {\n  height: 44px;\n  border-radius: 5px;  \n}\n\n.btn-primary {\n  margin: 0;\n  background: transparent;\n  border: none;\n  position: relative;\n  display: flex;\n  align-items: center;\n\n  p {\n    margin: 0;\n    margin-left: 20px;\n  } \n\n  &__name {\n    background: var(--success-grad-light);\n    background-clip: text;\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n    transition: 0;\n  }\n\n  &:hover {\n    background: linear-gradient(89.52deg, hsla(137, 66%, 42%, 0.2) -46.17%, rgba(2, 99, 188, 0.2) 186.99%);\n  }\n\n  &:active {\n    background: var(--success-grad-light);\n    color: var(--text-color);\n\n    & > .btn-primary__name {\n      background: var(--text-color);\n      -webkit-background-clip: text;\n      background-clip: text;\n      -webkit-text-fill-color: transparent;\n    }\n  }\n}\n",
                    "styleUrl": "primaryButton.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"module-border-wrap\">\n  <div class=\"module-opacity-wrap \">\n    <button \n      [ngStyle]=\"{ 'background': backgroundColor }\"\n      class=\"btn-app btn-app--h46 btn-primary fs-16-sofia-300\"\n      (mousedown)=\"changeToActiveColor()\"\n      (mouseup)=\"changeToLightColor()\"\n    >\n      <svg-icon \n        [src]=\"svgPath\"\n        [svgStyle]=\"{'fill':fillColor }\"\n      >\n      </svg-icon>\n      <p class=\"btn-primary__name\" *ngIf=\"title!==''\">\n        {{ title }}\n      </p>\n    </button>\n  </div>\n</div>"
        },
        {
            "name": "RegistrationFormComponent",
            "id": "component-RegistrationFormComponent-88ef3af2d9a262b8d5a4340408b1019a",
            "file": "src/app/organisms/registration-form/registration-form.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-registration-form",
            "styleUrls": [
                "./registration-form.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./registration-form.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "activeScreen",
                    "defaultValue": "1",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "isMobile",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "isStarted",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "changeScreen",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20
                },
                {
                    "name": "changeScreenToPrevious",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40
                },
                {
                    "name": "setIsStarted",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36
                }
            ],
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "window:resize",
                    "args": [
                        {
                            "name": "event",
                            "type": "any"
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "line": 16
                }
            ],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, HostListener, OnInit, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-registration-form',\n  templateUrl: './registration-form.component.html',\n  styleUrls: ['./registration-form.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\n\nexport class RegistrationFormComponent implements OnInit {\n  activeScreen: number = 1;\n  isStarted: boolean = false;\n  isMobile: boolean;\n\n  @HostListener('window:resize', ['$event'])\n  onResize(event: any) {\n    this.isMobile = (window.innerWidth < 950) ? true : false;\n  }\n\n  changeScreen() {\n    if (this.activeScreen === 5) {\n      return;\n    } else {\n      this.activeScreen = this.activeScreen + 1;\n    }\n  }\n\n  changeScreenToPrevious() {\n    if (this.activeScreen === 1) {\n      return;\n    } else {\n      this.activeScreen = this.activeScreen - 1;\n    }\n  }\n\n  setIsStarted() {\n    this.isStarted = true;\n  }\n\n  ngOnInit(): void {\n    this.isMobile = (window.innerWidth < 950) ? true : false;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".registration-form {\n  width: 100%;\n  height: auto;\n  background: url('../../../assets/images/bg.png');\n\n  &__header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    width: 100%;\n    padding: 20px 64px;\n    background-color: rgba(var(--text-color-code), 0.5);\n  }\n\n  &__logo {\n    width: 117px;\n    height: 46px;\n  }\n\n  &__list {\n    width: 75%;\n    margin-bottom: 30px;\n  }\n\n  &__body {\n    display: flex;\n    justify-content: space-between;\n    padding: 42px 64px 130px;\n\n    &--left {\n      display: flex;\n      flex-direction: column;\n      align-items: flex-start;\n      width: 44%;\n\n      & > h2, & > h5 {\n        margin-bottom: 20px;\n      }\n    }\n\n    &--right {\n      display: flex;\n      flex-direction: column;\n      justify-content: space-between;\n\n      width: 52%;\n      min-height: 458px;\n\n      border-radius: 12px 30px;\n      box-shadow: 0px 50px 70px rgba(44, 59, 82, 0.15);\n    }\n  }\n\n  &__wrapper-top {\n    padding: 34px 48px 7px 48px;\n  }\n\n  &__wrapper-bottom {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    padding: 32px 48px 28px 48px;\n    background-color: var(--input-bg-color);\n    border-radius: 0 0 12px 30px;\n\n    &--left {\n      width: 55%;\n    }\n  }\n}\n\n.list-item-icon {\n  margin-bottom: 12px;\n}\n\n@media screen and (max-width: 1250px) {\n  .registration-form {\n    &__list {\n      width: 100%;\n    }\n\n    &__body {\n      padding: 42px 20px;\n    }\n\n    &__header {\n      padding: 20px;\n    }\n\n    &__wrapper-top {\n      padding: 20px;\n    }\n\n    &__wrapper-bottom {\n      padding: 20px 10px;\n    }\n  }\n}",
                    "styleUrl": "./registration-form.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"registration-form\" *ngIf=\"!isMobile\">\n  <div class=\"registration-form__header\">\n    <img class=\"registration-form__logo\" src=\"assets/images/logo.png\" alt=\"logo secure privacy\">\n    <app-info-button [title]=\"'support'\"></app-info-button>\n  </div>\n  <div class=\"registration-form__body\">\n    <div class=\"registration-form__body--left\">\n      <h2 class=\"fs-h2\">\n        Register now and receive 100% no-risk\n        <span class=\"fs-h2--bold\">Free Trial</span>\n      </h2>\n      <ul class=\"registration-form__list\">\n        <app-search-item \n          [title]=\"'Get access to all features.'\"\n          [classes]=\"'list-item-icon fs-16-sofia-300'\"\n        >\n        </app-search-item>\n        <app-search-item \n          [title]=\"'Pay NOTHING for the first 7-days.'\"\n          [classes]=\"'list-item-icon fs-16-sofia-300'\"\n        >\n        </app-search-item>\n        <app-search-item \n          [title]=\"'Cancel at ANY time during your trial.'\"\n          [classes]=\"'list-item-icon fs-16-sofia-300'\"\n        >\n        </app-search-item>\n      </ul>\n      <h5 class=\"fs-h5\">These awesome companies are using Secure Privacy</h5>\n      <app-icon-container></app-icon-container>\n    </div>\n    <div class=\"registration-form__body--right\">\n      <div class=\"registration-form__wrapper-top\" [ngSwitch]=\"activeScreen\">\n        <app-form-screen-first *ngSwitchCase=\"1\"></app-form-screen-first>\n        <app-form-screen-second *ngSwitchCase=\"2\"></app-form-screen-second>\n        <app-form-screen-third *ngSwitchCase=\"3\"></app-form-screen-third>\n        <app-form-screen-fourth *ngSwitchCase=\"4\"></app-form-screen-fourth>\n        <app-form-screen-fifth *ngSwitchCase=\"5\"></app-form-screen-fifth>\n      </div>\n      <div class=\"registration-form__wrapper-bottom\">\n        <div class=\"registration-form__wrapper-bottom--left\">\n          <app-steps [activePoints]=\"activeScreen\"></app-steps>\n        </div>\n        <app-gradient-button \n          [title]=\"'Next'\"\n          (click)=\"changeScreen()\"\n        >\n        </app-gradient-button>\n      </div>\n    </div>\n  </div>  \n</div>\n<div class=\"registration-form\" *ngIf=\"isMobile\">\n<div class=\"registration-form__header\">\n    <img class=\"registration-form__logo\" src=\"assets/images/logo.png\" alt=\"logo secure privacy\">\n    <app-info-button [title]=\"'support'\"></app-info-button>\n</div>\n<div class=\"registration-form__body\" [ngStyle]=\"{'padding-top':'10px'}\">\n  <div \n    class=\"registration-form__body--left\" \n    *ngIf=\"!isStarted\"\n    [ngStyle]=\"{'width':'100%', 'align-items': 'center'}\"\n  >\n    <h2 class=\"fs-h2\">\n      Register now and receive 100% no-risk\n      <span class=\"fs-h2--bold\">Free Trial</span>\n    </h2>\n    <ul class=\"registration-form__list\">\n      <app-search-item \n        [title]=\"'Get access to all features.'\"\n        [classes]=\"'list-item-icon fs-16-sofia-300'\"\n      >\n      </app-search-item>\n      <app-search-item \n        [title]=\"'Pay NOTHING for the first 7-days.'\"\n        [classes]=\"'list-item-icon fs-16-sofia-300'\"\n      >\n      </app-search-item>\n      <app-search-item \n        [title]=\"'Cancel at ANY time during your trial.'\"\n        [classes]=\"'list-item-icon fs-16-sofia-300'\"\n      >\n      </app-search-item>\n    </ul>\n    <h5 class=\"fs-h5\">These awesome companies are using Secure Privacy</h5>\n    <app-icon-container></app-icon-container>\n    <div [ngStyle]=\"{'margin-bottom':'32px'}\"></div>\n    <app-gradient-button \n      [title]=\"'get started'\"\n      (click)=\"setIsStarted()\"\n    >\n    </app-gradient-button>\n  </div>\n  <div \n    class=\"registration-form__body--right\" \n    *ngIf=\"isStarted\"\n    [ngStyle]=\"{'width':'100%'}\"\n  >\n    <div class=\"registration-form__wrapper-top\" [ngSwitch]=\"activeScreen\">\n      <app-form-screen-first *ngSwitchCase=\"1\"></app-form-screen-first>\n      <app-form-screen-second *ngSwitchCase=\"2\"></app-form-screen-second>\n      <app-form-screen-third *ngSwitchCase=\"3\"></app-form-screen-third>\n      <app-form-screen-fourth *ngSwitchCase=\"4\"></app-form-screen-fourth>\n      <app-form-screen-fifth *ngSwitchCase=\"5\"></app-form-screen-fifth>\n    </div>\n    <div class=\"registration-form__wrapper-bottom\">\n        <app-simple-button \n          [classes]=\"'btn-app fs-16-sofia-500 btn-transparent'\"\n          [title]=\"'back'\"\n          (click)=\"changeScreenToPrevious()\"\n        >\n        </app-simple-button>\n        <app-gradient-button \n          [title]=\"'Next'\"\n          (click)=\"changeScreen()\"\n        >\n        </app-gradient-button>\n      </div>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "RollUpComponent",
            "id": "component-RollUpComponent-4816f83388ba1760bbd6581af71c532c",
            "file": "src/app/molecules/roll-up/roll-up.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-roll-up",
            "styleUrls": [
                "./roll-up.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./roll-up.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "number",
                    "line": 11,
                    "type": "number"
                },
                {
                    "name": "title",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "isOpen",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "toggleContent",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-roll-up',\n  templateUrl: './roll-up.component.html',\n  styleUrls: ['./roll-up.component.scss']\n})\n\nexport class RollUpComponent {\n  @Input() title: string;\n  @Input() number: number;\n\n  isOpen: boolean = false;\n  toggleContent() {\n    this.isOpen = !this.isOpen;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".roll-up {\n  width: 100%;\n  height: auto;\n  padding: 12px 16px;\n  background-color: rgba(var(--secondary-color-code), 0.05);\n  border-radius: 8px;\n\n  &__header {\n    width: 100%;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n\n  &__text {\n    color: var(--secondary-color);\n  }\n\n  &__content {\n    margin: 16px 0 6px 0;\n  }\n\n  &__button {\n    width: 13px;\n    height: 7px;\n    transition: 0.3s;\n\n    &:hover {\n      cursor: pointer;\n    }\n  }\n}",
                    "styleUrl": "./roll-up.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"roll-up\">\n  <div class=\"roll-up__header\">\n    <p class=\"roll-up__text fs-14-gramm-400\">\n      {{ title }} \n      <span class=\"fs-14-gramm-400-light\">{{ number }}</span>\n    </p>\n    <img \n      (click)=\"toggleContent()\"\n      class=\"roll-up__button\" \n      src=\"assets/images/roll-up.png\" \n      [ngStyle]=\"isOpen ? {'transform': 'rotate(0deg)'} : {'transform': 'rotate(180deg)'}\"\n      [alt]=\"title\"\n    >\n  </div>\n  <div class=\"roll-up__content\" *ngIf=\"isOpen\">\n    <ng-content></ng-content>\n  </div>\n</div>\n"
        },
        {
            "name": "RoundChartComponent",
            "id": "component-RoundChartComponent-4b0dbb67bf95802b4eb03947be5723e3",
            "file": "src/app/atoms/charts/round-chart/round-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-round-chart",
            "styleUrls": [
                "./round-chart.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./round-chart.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "addWord",
                    "line": 51,
                    "type": "string"
                },
                {
                    "name": "colors",
                    "line": 50,
                    "type": "string[]"
                },
                {
                    "name": "data",
                    "line": 49,
                    "type": "Data[]"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "colorsList",
                    "defaultValue": "['#9ED0E0', '#612C83', '#509AAF', '#F8BD5A', '#FF9F68', '#645FC8']",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 55
                },
                {
                    "name": "isMobile",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 60
                },
                {
                    "name": "isTipVisible",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 53
                },
                {
                    "name": "legend",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 62,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'legend'"
                        }
                    ]
                },
                {
                    "name": "mainLabel",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 57
                },
                {
                    "name": "mainValue",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 56
                },
                {
                    "name": "tipsLeft",
                    "defaultValue": "0",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 59
                },
                {
                    "name": "tipsTop",
                    "defaultValue": "0",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 58
                },
                {
                    "name": "values",
                    "type": "number[]",
                    "optional": false,
                    "description": "",
                    "line": 54
                }
            ],
            "methodsClass": [
                {
                    "name": "createChart",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 69
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 130
                },
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 134
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 138
                },
                {
                    "name": "setCoordinates",
                    "args": [
                        {
                            "name": "top",
                            "type": "number"
                        },
                        {
                            "name": "left",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 125,
                    "jsdoctags": [
                        {
                            "name": "top",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "left",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateMainValue",
                    "args": [
                        {
                            "name": "index",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 120,
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "window:resize",
                    "args": [
                        {
                            "name": "event",
                            "type": "any"
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "line": 65
                }
            ],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Input, OnChanges, HostListener, ElementRef, ViewChild, AfterViewInit } from '@angular/core';\nimport Chart from 'chart.js';\nimport { getRandomColor } from './helpers';\n\n// created new chart type with rounded ends based on Chart js\nChart.defaults.RoundedDoughnut = Chart.helpers.clone(Chart.defaults.doughnut);\nChart.controllers.RoundedDoughnut = Chart.controllers.doughnut.extend({\n  draw: function(ease) {\n    const ctx = this.chart.ctx;\n    const easingDecimal = ease || 1;\n    const arcs = this.getMeta().data;\n    Chart.helpers.each(arcs, function(arc, i) {\n      arc.transition(easingDecimal).draw();\n      const pArc = arcs[i === 0 ? arcs.length - 1 : i - 1];\n      const pColor = pArc._view.backgroundColor;\n      const vm = arc._view;\n      const radius = (vm.outerRadius + vm.innerRadius) / 2;\n      const thickness = (vm.outerRadius - vm.innerRadius) / 2;\n      const startAngle = Math.PI - vm.startAngle - Math.PI / 2;\n      const angle = Math.PI - vm.endAngle - Math.PI / 2;\n\n      ctx.save();\n      ctx.translate(vm.x, vm.y);\n      ctx.fillStyle = i === 0 ? vm.backgroundColor : pColor;\n      ctx.beginPath();\n      ctx.arc(radius * Math.sin(startAngle), radius * Math.cos(startAngle), thickness, 0, 2 * Math.PI);\n      ctx.fill();\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.beginPath();\n      ctx.arc(radius * Math.sin(angle), radius * Math.cos(angle), thickness, 0, 2 * Math.PI);\n      ctx.fill();\n      ctx.restore();\n    });\n  }\n});\n\ninterface Data {\n  title: string,\n  value: number\n}\n\n@Component({\n  selector: 'app-round-chart',\n  templateUrl: './round-chart.component.html',\n  styleUrls: ['./round-chart.component.scss']\n})\n\nexport class RoundChartComponent implements OnInit, OnChanges, AfterViewInit {\n  @Input() data: Data[];\n  @Input() colors: string[];\n  @Input() addWord: string;\n\n  isTipVisible: boolean = false;\n  values: number[];\n  colorsList: string[] = ['#9ED0E0', '#612C83', '#509AAF', '#F8BD5A', '#FF9F68', '#645FC8'];\n  mainValue: number;\n  mainLabel: string;\n  tipsTop: number = 0;\n  tipsLeft : number = 0;\n  isMobile: boolean = false;\n\n  @ViewChild('legend') legend: ElementRef;\n  \n  @HostListener('window:resize', ['$event'])\n  onResize(event: any) {\n    this.isMobile = this.legend.nativeElement.clientWidth < 620;\n  }\n  \n  createChart() {\n    if(!this.colors && !(this.colorsList.length >= this.data.length) ) {\n      const updatedColorsList = [];\n      for (let i = 0; i < this.data.length; i++) {\n        updatedColorsList.push(getRandomColor());\n      }\n      this.colorsList = updatedColorsList;\n    }\n    this.values = this.data.map((item) => item.value);\n    this.mainValue = this.values[0];\n    this.mainLabel = this.data[0].title;\n\n    const ctx = <HTMLCanvasElement>document.querySelector('.donut-rounded-chart__canvas')\n    const passPropsToUpdateMainValue = (index) => {\n      this.isTipVisible = true;\n      this.updateMainValue(index);\n    };\n    const passPropsToHideTooltip = () => this.isTipVisible = false;\n    new Chart(ctx, {\n      type: 'RoundedDoughnut',\n      data: {\n        datasets: [\n          {\n            data: this.values,\n            backgroundColor: this.colorsList,\n            borderWidth: 0\n          }\n        ]\n      },\n      options: { \n        events: ['mousemove', 'mouseout'],\n        onHover: (event) => {\n          if (this.isTipVisible) {\n            this.setCoordinates(event.pageY, event.pageX)\n          }\n        },\n        cutoutPercentage: 81,\n        tooltips: {\n          enabled: false,\n          custom: function(tooltipModel) {\n            if (tooltipModel.dataPoints) {\n              passPropsToUpdateMainValue(tooltipModel.dataPoints[0].index);\n            } else {\n              passPropsToHideTooltip ();\n            }\n          }\n        }\n      }\n    });\n  }\n\n  updateMainValue (index: number) {\n    this.mainValue = this.values[index];\n    this.mainLabel = this.data[index].title;\n  }\n\n  setCoordinates(top:number, left: number) {\n    this.tipsTop = top - 24 - (16 * this.data.length + 8 * (this.data.length + 1)) - 10;\n    this.tipsLeft = left - 110;\n  }\n\n  ngAfterViewInit() {\n    this.isMobile = this.legend.nativeElement.clientWidth < 620;\n  }\n\n  ngOnChanges() {\n    this.createChart();\n  }\n\n  ngOnInit(): void {\n    this.createChart();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".donut-rounded-chart {\n  width: 100%;\n  max-width: 865px;\n  padding: 0 7%;\n\n  &__canvas {\n    &:hover {\n      cursor: pointer;\n    }\n  }\n\n  &__canvas-wrapper {\n    width: 300px;\n    max-height: 300px;\n    max-width: 300px;\n    position: relative;\n  }\n\n  &__wrapper {\n    width: 100%;\n    position: relative;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  }\n\n  &__main-value {\n    position: absolute;\n    top: 55px;\n    left: 50px;\n    padding-top: 67px;\n\n    height: 200px;\n    width: 200px;\n    \n    background: var(--text-color-code);\n    box-shadow: 11.1044px 11.1044px 33.3131px rgba(44, 59, 82, 0.2);\n    border-radius: 50%;\n    text-align: center;\n  }\n\n  &__label {\n    opacity: 0.5;\n  }\n\n  &__tips {\n    width: 228px;\n    padding: 12px;\n    position: fixed;\n    z-index: 3;\n\n    background-color: rgba(var(--secondary-color-code), 1);\n    border-radius: 12px;\n    color: var(--asimetric-bg-color);\n\n    &:after {\n      content: '';\n      width: 16px;\n      height: 7px;\n      position: absolute;\n      bottom: -6px;\n      left: calc(50% - 4px);\n      z-index: 4;\n\n      background: url('../../../../assets/images/triangle.png') center no-repeat;\n      background-size: cover;\n    }\n\n    &-item {\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      width: 100%;\n      margin: 8px 0;\n    }\n\n    &-text {\n      display: flex;\n      align-items: center;\n    }\n    \n    &-color {\n      display: block;\n      width: 6px;\n      height: 6px;\n      border-radius: 50%;\n      margin-right: 8px;\n    }\n  }\n\n  &__legend {\n    width: 40%;\n    max-width: 300px;\n    min-width: 250px;\n\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    column-gap: 30px;\n    row-gap: 30px;\n\n    &-item {\n      display: flex;\n      align-items: center;\n      text-transform: uppercase;\n      color: rgba(var(--secondary-color-code), 0.75);\n\n      &:hover {\n        cursor: pointer;\n      }\n    }\n\n    &-color {\n      width: 24px;\n      height: 24px;\n      margin-right: 12px;\n      border-radius: 4px;\n    }\n  }\n}\n\n.chartjs-size-monitor {\n  width: 100%;\n  height: 100%;\n}",
                    "styleUrl": "./round-chart.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit",
                "OnChanges",
                "AfterViewInit"
            ],
            "templateData": "<div class=\"donut-rounded-chart\">\n  <div \n    class=\"donut-rounded-chart__wrapper\" \n    #legend\n    [ngStyle]=\"isMobile ? { 'flex-direction': 'column', 'align-items': 'center' } : { 'flex-direction': 'row' }\"\n  >\n    <div class=\"donut-rounded-chart__canvas-wrapper\" [ngStyle]=\"isMobile && { 'margin-bottom': '30px' }\">\n      <canvas width=\"100%\" height=\"100%\" class=\"donut-rounded-chart__canvas\"></canvas>\n      <div class=\"donut-rounded-chart__main-value\">\n        <p class=\"fs-h1--bold-gradient donut-rounded-chart__value\">\n          {{ mainValue }}\n        </p>\n        <p class=\"fs-12-gramm-400-gradient donut-rounded-chart__label\">\n          {{ mainLabel }} {{ addWord }}\n        </p>\n      </div>\n    </div>\n    <ul class=\"donut-rounded-chart__legend\">\n      <li \n        *ngFor=\"let item of data; let i=index\" \n        class=\"donut-rounded-chart__legend-item fs-12-gramm-400\"\n        (click)=\"updateMainValue(i)\"\n      >\n        <div class=\"donut-rounded-chart__legend-color\" [ngStyle]=\"{ 'background-color': colorsList[i] }\"></div>\n        {{ item.title }}\n      </li>\n    </ul>\n  </div>\n  <div \n    *ngIf=\"isTipVisible && !isMobile\" \n    class=\"donut-rounded-chart__tips\" \n    #tips\n    [ngStyle]=\"{ 'top': tipsTop+'px', 'left': tipsLeft+'px' }\"\n  >\n    <ul class=\"donut-rounded-chart__tips-list\">\n      <li class=\"donut-rounded-chart__tips-item\" *ngFor=\"let item of data; let i=index\">\n        <div class=\"donut-rounded-chart__tips-text fs-12-sofia-300\">\n          <div class=\"donut-rounded-chart__tips-color\" [ngStyle]=\"{ 'background-color': colorsList[i] }\"></div>\n          {{ item.title }}\n        </div>\n        <div class=\"donut-rounded-chart__tips-value fs-16-sofia-600\">{{ item.value }}</div>\n      </li>\n    </ul>\n  </div>\n</div>\n"
        },
        {
            "name": "RoundIconComponent",
            "id": "component-RoundIconComponent-4cce273b4bd1b8115edd607a99cfed31",
            "file": "src/app/atoms/icons/round-icon/round-icon.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-round-icon",
            "styleUrls": [
                "./round-icon.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./round-icon.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "boldText",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "classes",
                    "line": 10,
                    "type": "string"
                },
                {
                    "name": "link",
                    "line": 14,
                    "type": "string"
                },
                {
                    "name": "linkText",
                    "line": 13,
                    "type": "string"
                },
                {
                    "name": "regularText",
                    "line": 12,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-round-icon',\n  templateUrl: './round-icon.component.html',\n  styleUrls: ['./round-icon.component.scss']\n})\n\nexport class RoundIconComponent {\n  @Input() classes: string;\n  @Input() boldText?: string;\n  @Input() regularText?: string;\n  @Input() linkText?: string;\n  @Input() link?: string;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-round-icon {\n  width: 19px;\n  height: 19px;\n  border-radius: 50%;\n  position: relative;\n\n  &-wrapper {\n    display: flex;\n    align-items: center;\n    color: var(--secondary-color);\n  }\n\n  &__text {\n    margin-left: 16px;\n  }\n\n  &__link {\n    margin-left: 8px;\n  }\n\n  &__positive {\n    background: var(--success-grad-light);\n\n    &:after {\n      content: \"\";\n      width: 19px;\n      height: 19px;\n      position: absolute;\n      background: no-repeat center url(\"../../../../assets/images/checkbox.svg\");\n    }\n  }\n\n  &__negative {\n    background: rgba(var(--danger-color-code), 0.2);\n\n    &:after {\n      content: \"\";\n      width: 19px;\n      height: 19px;\n      position: absolute;\n      background: no-repeat center url(\"../../../../assets/images/close.svg\");\n    }\n  }\n}",
                    "styleUrl": "./round-icon.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"app-round-icon-wrapper\">\n  <div [ngClass]=\"classes\"></div>\n  <p \n    class=\"app-round-icon__text fs-12-sofia-600\" \n    *ngIf=\"boldText\"\n  >\n    {{ boldText }}\n  </p>\n  <a \n    [href]=\"link\" \n    class=\"app-round-icon__link fs-12-sofia-300\" \n    *ngIf=\"link && linkText\"\n  >\n    {{ linkText }}\n  </a>\n  <p \n    class=\"app-round-icon__text fs-12-sofia-300\" \n    *ngIf=\"regularText\"\n  >\n    {{ regularText }}\n  </p>\n</div>\n"
        },
        {
            "name": "ScanAnimationComponent",
            "id": "component-ScanAnimationComponent-4e1169f6dab08960767b6591d56655d7",
            "file": "src/app/atoms/scan-animation/scan-animation.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-scan-animation",
            "styleUrls": [
                "./scan-animation.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./scan-animation.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-scan-animation',\n  templateUrl: './scan-animation.component.html',\n  styleUrls: ['./scan-animation.component.scss']\n})\n\nexport class ScanAnimationComponent {\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".scan-animation {\n  position: relative;\n  width: fit-content;\n\n  &__loader {\n    position: absolute;\n    left: -13px;\n\n    width: 106px;\n    height: 40px;\n    overflow: hidden;\n    background: linear-gradient(180deg, rgba(255, 255, 255, 0) -20px, #FFFFFF 81.25%, #FFFFFF 40px);\n  \n    -webkit-animation: 2s linear 0s infinite alternate loading;\n    -moz-animation: 2s linear 0s infinite alternate loading;\n    -o-animation: 2s linear 0s infinite alternate loading;\n    animation: 2s linear 0s infinite alternate loading;\n\n    &:after {\n      content: \"\";\n      position: absolute;\n      bottom: 0;\n      left: 0;\n\n      width: 112px;\n      height: 2px;\n      \n      background: var(--success-grad-dark);\n      border-radius: 50%;\n    }\n  }\n\n  &__img {\n    width: 80px;\n    height: 95px;\n  }\n}\n\n@-webkit-keyframes loading { from { top:-30px; } to { top:55px; }  }\n@-moz-keyframes loading { from { top:-30px; } to { top:55px; }  }\n@-o-keyframes loading { from { top:-30px; } to { top:55px; }  }\n@keyframes loading { from { top:-30px; } to { top:55px; }  }",
                    "styleUrl": "./scan-animation.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "\n<div class=\"scan-animation\">\n  <img src=\"assets/images/scan.png\" alt=\"document\" class=\"scan-animation__img\">\n  <div class=\"scan-animation__loader\"></div>\n</div>\n"
        },
        {
            "name": "ScanReportComponent",
            "id": "component-ScanReportComponent-0be84ba3302bfca6feae500bc9a9d3e4",
            "file": "src/app/organisms/scan-report/scan-report.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-scan-report",
            "styleUrls": [
                "./scan-report.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./scan-report.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "element",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 50,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'nav'"
                        }
                    ]
                },
                {
                    "name": "isMobile",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "isSideMenuVisible",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "items",
                    "defaultValue": "['reports', 'domains', 'users', 'account', 'request portal']",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "itemsToSearch",
                    "defaultValue": "['My current company', 'My clients company', 'secure privacy', 'secure privacy2', 'secure privacy3']",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "leftSideMenuItems",
                    "defaultValue": "[\n    { title: 'scan'},\n    { title: 'style'},\n    { title: 'cookie banner'},\n    { title: 'IAB 2.0 settings'},\n    { title: 'Preference Center', sections: ['GDPR/ePrivacy', 'CCPA', 'LGPD']},\n    { title: 'data request form'},\n    { title: 'Preference Center', sections: ['Privacy Policy', 'Cookie Declaration', 'Embed On Website']},\n    { title: 'cookie classification'},\n    { title: 'languages'},\n    { title: 'coverage'},\n    { title: 'installation'},\n  ]",
                    "type": "SideItems[]",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "mobileMenuItems",
                    "defaultValue": "[\n    { title: 'Reports', svgPath: 'assets/images/menu/Reports.svg',   isActive: false,},\n    { title: 'Domains', svgPath: 'assets/images/menu/Domains.svg',   isActive: false,},\n    { title: 'Account', svgPath: 'assets/images/menu/Account.svg',   isActive: false,},\n    { title: 'Options', svgPath: 'assets/images/menu/Options.svg',   isActive: false,},\n  ]",
                    "type": "MobileItems[]",
                    "optional": false,
                    "description": "",
                    "line": 37
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 64
                },
                {
                    "name": "toggleSideMenu",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46
                }
            ],
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "document:click",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event"
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "line": 58
                },
                {
                    "name": "window:resize",
                    "args": [
                        {
                            "name": "event",
                            "type": "any"
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "line": 53
                }
            ],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, ElementRef, OnInit, HostListener, ViewEncapsulation, ViewChild } from '@angular/core';\n\ninterface SideItems {\n  title: string;\n  sections?: string[],\n}\n\ninterface MobileItems {\n  title: string;\n  svgPath: string,\n  isActive: boolean\n}\n\n@Component({\n  selector: 'app-scan-report',\n  templateUrl: './scan-report.component.html',\n  styleUrls: ['./scan-report.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\n\nexport class ScanReportComponent implements OnInit {\n  items: string[] = ['reports', 'domains', 'users', 'account', 'request portal'];\n  itemsToSearch: string[] = ['My current company', 'My clients company', 'secure privacy', 'secure privacy2', 'secure privacy3'];\n  leftSideMenuItems: SideItems[] = [\n    { title: 'scan'},\n    { title: 'style'},\n    { title: 'cookie banner'},\n    { title: 'IAB 2.0 settings'},\n    { title: 'Preference Center', sections: ['GDPR/ePrivacy', 'CCPA', 'LGPD']},\n    { title: 'data request form'},\n    { title: 'Preference Center', sections: ['Privacy Policy', 'Cookie Declaration', 'Embed On Website']},\n    { title: 'cookie classification'},\n    { title: 'languages'},\n    { title: 'coverage'},\n    { title: 'installation'},\n  ]\n  mobileMenuItems: MobileItems[] = [\n    { title: 'Reports', svgPath: 'assets/images/menu/Reports.svg',   isActive: false,},\n    { title: 'Domains', svgPath: 'assets/images/menu/Domains.svg',   isActive: false,},\n    { title: 'Account', svgPath: 'assets/images/menu/Account.svg',   isActive: false,},\n    { title: 'Options', svgPath: 'assets/images/menu/Options.svg',   isActive: false,},\n  ]\n  isMobile: boolean = false;\n  isSideMenuVisible: boolean = false;\n\n  toggleSideMenu() {\n    this.isSideMenuVisible = !this.isSideMenuVisible;\n  }\n  \n  @ViewChild('nav') element: ElementRef;\n\n  @HostListener('window:resize', ['$event'])\n  onResize(event: any) {\n    this.isMobile = (event.target.innerWidth < 800) ? true : false;\n  }\n\n  @HostListener('document:click', ['$event'])\n\tonClick(event: Event) {\n    if (!this.element.nativeElement.contains(event.target)) {\n      this.isSideMenuVisible = false;\n    }\n  }\n  \n  ngOnInit(): void {\n    this.isMobile = (window.innerWidth < 800) ? true : false;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-scan-report {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  width: 100%;\n  background-color: var(--layout-bg-color);\n  color: var(--secondary-color);\n\n  &__title {\n    margin-bottom: 35px;\n  }\n\n  &__logo {\n    width: 117px;\n    height: 46px;   \n  }\n\n  &__wrapper {\n    display: flex;\n    justify-content: center;\n    width: 100%;\n    background: rgba(var(--text-color-code), 0.5);\n  }\n\n  &__nav {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    \n    padding: 20px 64px;\n    width: 100%;\n    max-width: 1280px;\n  }\n\n  &__container {\n    display: flex;\n    justify-content: space-between;\n    width: 100%;\n    max-width: 1280px;\n    padding: 22px 45px 220px 45px;\n\n    &--left {\n      width: 260px;\n    }\n\n    &--right {\n      width: 72%;\n    }\n  }\n\n  &__box {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    width: 100%;\n    margin-bottom: 42px;\n  }\n}\n\napp-select-input-search {\n  width: 80%;\n}\n\n@media screen and (max-width: 1150px) {\n  .app-scan-report {\n    &__nav {\n      padding: 20px;\n    }\n\n    &__container {\n      padding: 20px;\n\n      &--right {\n        width: 60%;\n      }\n    }\n  }\n}\n\n@media screen and (max-width: 800px) {\n  .app-scan-report {\n    text-align: center;\n    \n    &__nav {\n      position: relative;\n    }\n\n    &__container {\n      &--right {\n        width: 100%;\n      }\n    }\n  }\n\n  app-mobile-main-navigation-menu {\n    width: 100%;\n  }\n\n  app-checkbox-input-simple {\n    text-align: left;\n  }\n\n  app-composite-menu {\n    position: absolute; \n    top: 90px;\n    left: 0;\n    z-index: 2;\n\n    transition: margin-left 1s;\n  }\n}\n",
                    "styleUrl": "./scan-report.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<div id=\"block\" class=\"app-scan-report\">\n  <div class=\"app-scan-report__wrapper\">\n    <nav class=\"app-scan-report__nav\" *ngIf=\"!isMobile\">\n      <img class=\"app-scan-report__logo\" src=\"assets/images/logo.png\" alt=\"logo\">\n      <app-main-navigation-menu [items]=\"items\"></app-main-navigation-menu>\n      <app-info-button [title]=\"'support'\"></app-info-button>\n    </nav>\n    <nav class=\"app-scan-report__nav\" #nav *ngIf=\"isMobile\">\n      <app-mobile-button \n        [isOpen]=\"isSideMenuVisible\" \n        (click)=\"toggleSideMenu()\"\n        [svgPathActive]=\"'assets/images/closeMobileMenu.svg'\"\n        [svgPathNonActive]=\"'assets/images/mobileMenu.svg'\"\n      >\n      </app-mobile-button>\n      <app-select-input-search\n        [classes]=\"'custom-icon fs-16-sofia-300'\"\n        [placeholderText]=\"'Search for'\"\n        [items]=\"itemsToSearch\" \n      >\n      </app-select-input-search>\n      <app-composite-menu \n        [items]=\"leftSideMenuItems\" \n        *ngIf=\"isSideMenuVisible\"\n      >\n      </app-composite-menu>\n    </nav>\n  </div>\n  <div class=\"app-scan-report__container\">\n    <div class=\"app-scan-report__container--left\" *ngIf=\"!isMobile\">\n      <div class=\"app-scan-report__box\">\n        <app-light-button [srcPath]=\"'assets/images/back-icon.png'\"></app-light-button>\n        <app-select-input-search\n          [classes]=\"'custom-icon fs-16-sofia-300'\"\n          [placeholderText]=\"'Search for'\"\n          [items]=\"itemsToSearch\" \n        >\n        </app-select-input-search>\n      </div>\n      <app-composite-menu [items]=\"leftSideMenuItems\"></app-composite-menu>\n    </div>\n    <div class=\"app-scan-report__container--right\">\n      <h1 class=\"app-scan-report__title fs-h1\">Scan Report</h1>\n      <app-scan-screens></app-scan-screens>\n    </div>\n  </div>\n  <app-mobile-main-navigation-menu *ngIf=\"isMobile\" [items]=\"mobileMenuItems\"></app-mobile-main-navigation-menu>\n</div>\n"
        },
        {
            "name": "ScanScreensComponent",
            "id": "component-ScanScreensComponent-3f869cea3c87e915b65c8bf16138b8e1",
            "file": "src/app/molecules/scan-screens/scan-screens.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-scan-screens",
            "styleUrls": [
                "./scan-screens.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./scan-screens.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-scan-screens',\n  templateUrl: './scan-screens.component.html',\n  styleUrls: ['./scan-screens.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\n\nexport class ScanScreensComponent {\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-scan-screen {\n  width: 100%;\n  padding: 32px 32px 72px 32px;\n  background: var(--text-color);\n  border-radius: 20px;\n  color: var(--secondary-color);\n\n  &__container {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    width: 100%;\n\n    & > .fs-h3 {\n      margin-bottom: 18px;\n      margin-top: 32px;\n    }\n\n    & > .fs-16-sofia-300 {\n      margin-bottom: 57px;\n      opacity: 0.75;\n    }\n  }\n}\n\n.app-checkbox-input-simple__container {\n  margin-bottom: 20px;\n}",
                    "styleUrl": "./scan-screens.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"app-scan-screen\">\n  <app-text-with-after-gradient-line [title]=\"'scan report'\"></app-text-with-after-gradient-line>\n  <div class=\"app-scan-screen__container\">\n    <app-scan-animation></app-scan-animation>\n    <h3 class=\"fs-h3\">Scaning halo-lab.com</h3>\n    <p class=\"fs-16-sofia-300\">The site is being scanned, it will take 5-7 minutes. </p>\n    <app-checkbox-input-simple\n      [isChecked]=\"true\"\n      [title]=\"'Send me an e-mail once the scan is completed'\"\n    >\n    </app-checkbox-input-simple>\n    <app-simple-button\n      [title]=\"'notify me'\"\n      [classes]=\"'btn-app--asimetric  btn-success-asimetric fs-16-sofia-800'\"\n    >\n    </app-simple-button>\n  </div>\n</div>\n"
        },
        {
            "name": "searchItemComponent",
            "id": "component-searchItemComponent-c04584685abc1f9ee048d1ec42325888",
            "file": "src/app/atoms/searchItem/searchItem.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-search-item",
            "styleUrls": [
                "searchItem.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./searchItem.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "classes",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "title",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-search-item',\n  templateUrl: './searchItem.component.html',\n  styleUrls: ['searchItem.component.scss'],\n})\n\nexport class searchItemComponent {\n  @Input() title: string;\n  @Input() classes: string;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".search-list__item {\n  width: 100%;\n  height: 46px;\n  padding: 15px 53px;\n\n  list-style: none;\n  transition: 0.3s;\n  background: var(--input-bg-color);\n  color: var(--secondary-color);\n  opacity: 0.75;\n\n  &:hover {\n    cursor: pointer;\n    background-color: var(--light-btn-hover);\n  }\n}\n\n.list-item-icon {\n  width: 100%;\n  height: auto;\n  padding: 19px 53px;\n\n  border: 1px solid rgba(var(--secondary-color-code), 0.1);\n  border-radius: 8px;\n  position: relative;\n  color: rgba(var(--secondary-color-code), 0.7);\n\n  &:after {\n    content: url('../../../assets/images/check.png');\n    position: absolute;\n    left: 17px;\n    top: calc(50% - 10px);\n  }\n}",
                    "styleUrl": "searchItem.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<li \n  [ngClass]=\"classes\"\n>\n  {{ title }}\n</li>\n\n"
        },
        {
            "name": "SecondaryBorderButtonComponent",
            "id": "component-SecondaryBorderButtonComponent-09b6b7875f028c0570f4f4cd9b9d46e6",
            "file": "src/app/atoms/buttons/secondary-border-button/secondary-border-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-secondary-border-button",
            "styleUrls": [
                "./secondary-border-button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./secondary-border-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "iconSrc",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-secondary-border-button',\n  templateUrl: './secondary-border-button.component.html',\n  styleUrls: ['./secondary-border-button.component.scss']\n})\n\nexport class SecondaryBorderButtonComponent {\n  @Input() iconSrc: string;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".secondary-border-button {\n  padding: 12px 11px 11px 12px;\n  height: 44px;\n  border-radius: 12px;\n  border: 1px solid rgba(var(--secondary-color-code), 0.3);\n  background-color: transparent;\n  transition: 0.3s;\n\n  &:hover {\n    border: 1px solid rgba(var(--secondary-color-code), 1);\n  }\n\n  &:active {\n    border: 1px solid rgba(var(--secondary-color-code), 0);\n    background-color: rgba(var(--secondary-color-code), 0.3);\n  }\n}",
                    "styleUrl": "./secondary-border-button.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<button class=\"secondary-border-button\" type=\"button\">\n  <img [src]=\"iconSrc\" class=\"secondary-border-button__image\" alt=\"\">\n</button>\n"
        },
        {
            "name": "secondaryButtonComponent",
            "id": "component-secondaryButtonComponent-ff8ae7a171ae64520c095cee9b2e92c1",
            "file": "src/app/atoms/buttons/secondaryButton/secondaryButton.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-secondary-button",
            "styleUrls": [
                "../button.component.scss",
                "secondaryButton.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./secondaryButton.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "color",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "srcPath",
                    "line": 13,
                    "type": "string"
                },
                {
                    "name": "title",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "fillColor",
                    "defaultValue": "'rgba(1, 25, 73, 0.5)'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "changeToActiveColor",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21
                },
                {
                    "name": "changeToLightColor",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-secondary-button',\n  templateUrl: './secondaryButton.component.html',\n  styleUrls: ['../button.component.scss', 'secondaryButton.component.scss'],\n})\n\nexport class secondaryButtonComponent {\n  @Input() title: string;\n  @Input() backgroundColor: string;\n  @Input() color: string;\n  @Input() srcPath: string;\n\n  fillColor: string =  'rgba(1, 25, 73, 0.5)';\n\n  changeToLightColor() {  \n    this.fillColor = 'rgba(1, 25, 73, 0.5)';\n  }\n\n  changeToActiveColor() {\n    this.fillColor = 'white';\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".btn-app {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  transition: 0.3s;\n  border-radius: 8px;\n\n  &--h36 {\n    display: flex;\n    align-items: center;\n    height: 36px;\n    padding: 0 18px 0 18px;\n  }\n  \n  &--asimetric {\n    border-radius: 20px 5px;\n    height: 52px;\n    padding: 18px 41px 18px 44px;\n  }\n\n  &--h46 {\n    height: 46px;\n    padding: 13px 15px 12px 15px;\n  }\n\n  &--h46--wide {\n    height: 46px;\n    padding: 17px 37px;\n  }\n\n  &--h52 {\n    height: 52px;\n    padding: 18px 66px;\n  }\n\n  &--h53 {\n    height: 53px;\n    padding: 9px 10px;\n  }\n}\n",
                    "styleUrl": "../button.component.scss"
                },
                {
                    "data": ".btn-secondary {\n  background: rgba(var(--secondary-color-code),0.05);\n  color: var(--secondary-color);\n  border: none;\n  display: flex;\n  align-items: center;\n\n  &__title {\n    margin-left: 20px;\n  }\n\n  &:hover {\n    background: rgba(var(--secondary-color-code),0.2);\n  }\n\n  &:active {\n    background: rgba(var(--secondary-color-code),0.7);\n    color: var(--text-color);\n  }\n}",
                    "styleUrl": "secondaryButton.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<button \n  [ngStyle]=\"{'background': backgroundColor, 'color': color }\"\n  class=\"btn-secondary btn-app btn-app--h46 fs-16-sofia-300\"\n  (mouseleave)=\"changeToLightColor()\"\n  (mousedown)=\"changeToActiveColor()\"\n  (mouseup)=\"changeToLightColor()\"\n> \n  <svg-icon \n    [src]=\"srcPath\"\n    [svgStyle]=\"{'fill':fillColor }\"\n  >\n  </svg-icon>\n  <p class=\"btn-secondary__title\" *ngIf=\"title!==''\">\n    {{ title }}\n  </p>\n</button>\n"
        },
        {
            "name": "SelectedItemComponent",
            "id": "component-SelectedItemComponent-6a1369f4a425fe97e104ae806621ccd8",
            "file": "src/app/atoms/filter-components/selected-item/selected-item.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-selected-item",
            "styleUrls": [
                "./selected-item.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./selected-item.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "title",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-selected-item',\n  templateUrl: './selected-item.component.html',\n  styleUrls: ['./selected-item.component.scss']\n})\n\nexport class SelectedItemComponent {\n  @Input() title: string;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".selected-filter-item {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  height: 28px;\n  padding: 7px 13px 5px 8px;\n  \n  border-radius: 43px;\n  border: none;\n  color: rgba(var(--secondary-color-code), 0.5);\n  background: var(--status-bar-bg-color);\n  transition: 0.3s;\n\n  &__img {\n    margin-left: 17px;\n  }\n\n  &:hover {\n    background: var(--asimetric-bg-color);\n\n    & > .fs-16-sofia-300 {\n      font-weight: 500;\n      color: rgba(var(--secondary-color-code), 0.75);\n    }\n  }\n}",
                    "styleUrl": "./selected-item.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<button class=\"selected-filter-item\" type=\"button\">\n  <span \n    class=\"selected-filter-item__text fs-16-sofia-300\"\n  >\n    {{ title }}\n  </span>\n  <img\n    class=\"selected-filter-item__img\"\n    src=\"assets/images/filterComponents/close.png\" \n    [alt]=\"title\"\n  >\n</button>\n"
        },
        {
            "name": "SelectInputSearchComponent",
            "id": "component-SelectInputSearchComponent-edb19cb5b21aeb7b269d00829dc1e8b2",
            "file": "src/app/atoms/inputs/select-input/select-input-search/select-input-search.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-select-input-search",
            "styleUrls": [
                "./select-input-search.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./select-input-search.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "classes",
                    "line": 13,
                    "type": "string"
                },
                {
                    "name": "items",
                    "line": 11,
                    "type": "string[]"
                },
                {
                    "name": "placeholderText",
                    "line": 12,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "selectedItem",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "onChange",
                    "args": [
                        {
                            "name": "item",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-select-input-search',\n  templateUrl: './select-input-search.component.html',\n  styleUrls: ['./select-input-search.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\n\nexport class SelectInputSearchComponent {\n  @Input() items: string[];\n  @Input() placeholderText: string;\n  @Input() classes: string;\n\n  selectedItem: string;\n  \n  onChange(item) {\n    this.selectedItem = item;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".ng-select {\n  position: relative;\n  box-sizing: border-box;\n  height: 48px; \n  width: 100%;\n\n  background: rgba(var(--secondary-color-code), 0.05);\n  border-radius: 8px;\n  color: rgba(var(--secondary-color-code), 0.5);\n\n  &:hover {\n    background: rgba(var(--secondary-color-code), 0.1);\n  }\n\n  &-container {\n    width: 100%;\n    height: 46px;\n    margin-bottom: 4px;\n  }\n}\n\n.ng-dropdown-panel {\n  position: absolute;\n  left: 0;\n  text-align: left;\n}\n\n.scroll-host{\n  color: rgba(var(--secondary-color-code), 1);\n  position: absolute;\n  box-shadow: 0px 30px 70px rgba(46, 45, 79, 0.15);\n  border-radius: 8px;\n}\n\n.ng-clear-wrapper {\n  display: none;\n}\n\n.ng-value-container .ng-input {\n  & > input {\n    font-family: 'Sofia pro', 'open-sans';\n    font-style: normal;\n    font-style: normal;\n    font-weight: 300;\n    font-size: 16px;\n    color: var(--secondary-color);\n  }\n}\n\n.ng-option {\n  background-color: var(--input-bg-color);\n  padding: 17px 21px 15px 16px;  \n\n  &:hover {\n    background-color: var(--light-btn-hover);\n    font-weight: bold;\n\n  }\n} \n\n.custom {\n  &.ng-select {\n    & > .ng-select-container {\n      padding: 15px 21px 15px 16px;\n\n      & .ng-value-container .ng-input {\n        padding-left: 16px;\n      }\n    }\n  }\n}\n\n.custom-icon {\n  &.ng-select {\n    & > .ng-select-container {\n      padding: 16px 21px 15px 52px;\n      position: relative;\n\n      &:after {\n        content: url('../../../../../assets/images/Search.png');\n        position: absolute;\n        top: 13px;\n        left: 16px;\n        opacity: 0.5;\n      }\n\n      & .ng-value-container .ng-input {\n        padding-left: 52px;\n        padding-right: 16px;\n      }\n    }\n  }\n}",
                    "styleUrl": "./select-input-search.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<ng-select \n    [(ngModel)]=\"selectedItem\"\n    [ngClass]=\"classes\" \n    (change)=\"onChange($event)\"\n    [hideSelected]=\"true\"\n    [editableSearchTerm]=\"true\"\n    [placeholder]=\"placeholderText\"\n>\n  <ng-option class=\"option\" *ngFor=\"let item of items\" [value]=\"item\">\n    {{ item }}\n  </ng-option>\n</ng-select>\n"
        },
        {
            "name": "SelectInputSimpleComponent",
            "id": "component-SelectInputSimpleComponent-9991dd07f591a039fd9ce3dcf82abeb9",
            "file": "src/app/atoms/inputs/select-input/select-input-simple/select-input-simple.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-select-input-simple",
            "styleUrls": [
                "./select-input-simple.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./select-input-simple.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "initialValue",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "items",
                    "line": 11,
                    "type": "string[]"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "selectedItem",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-select-input-simple',\n  templateUrl: './select-input-simple.component.html',\n  styleUrls: ['./select-input-simple.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\n\nexport class SelectInputSimpleComponent implements OnInit {\n  @Input() items: string[];\n  @Input() initialValue: string;\n\n  selectedItem: string;\n\n  ngOnInit(): void {\n    this.selectedItem = this.initialValue;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".ng-select {\n  position: relative;\n  box-sizing: border-box;\n  height: 48px; \n  width: 100%;\n\n  background: rgba(var(--secondary-color-code), 0.05);\n  border-radius: 8px;\n  color: rgba(var(--secondary-color-code), 0.5);\n\n  &:hover {\n    background: rgba(var(--secondary-color-code), 0.1);\n  }\n\n  &:after {\n    content: url('../../../../../assets/images/select.png');\n    position: absolute;\n    top: calc(50% - 11px);\n    right: 21px;\n  }\n\n  &.ng-select-opened{\n    &:after {\n      content: url('../../../../../assets/images/select.png');\n      position: absolute;\n      top: calc(50% - 11px);\n      right: 21px;\n      transform: rotate(180deg);\n    }\n  }\n\n  &-container {\n    width: 100%;\n    height: 46px;\n    padding: 15px 21px 15px 16px;\n    margin-bottom: 4px;\n  }\n}\n\n.ng-option {\n  background-color: var(--input-bg-color);\n  padding: 17px 21px 15px 16px;  \n\n  &:hover {\n    background-color: var(--light-btn-hover);\n    font-weight: bold;\n  }\n}\n\n.ng-dropdown-panel {\n  position: absolute;\n}\n\n.scroll-host{\n  color: rgba(var(--secondary-color-code), 1);\n  position: absolute;\n  box-shadow: 0px 30px 70px rgba(46, 45, 79, 0.15);\n  border-radius: 8px;\n}\n\n.ng-clear-wrapper {\n  display: none;\n}",
                    "styleUrl": "./select-input-simple.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<ng-select \n    [(ngModel)]=\"selectedItem\"\n    class=\"custom fs-16-sofia-300\" \n    [hideSelected]=\"true\"\n    [searchable]=\"false\"\n>\n  <ng-option class=\"option\" *ngFor=\"let item of items\" [value]=\"item\">\n    {{ item }}\n  </ng-option>\n</ng-select>\n\n  "
        },
        {
            "name": "SelectInputWithInitialValueComponent",
            "id": "component-SelectInputWithInitialValueComponent-8e5ae5b1c50dc845ad4acd885e3efa18",
            "file": "src/app/atoms/inputs/select-input/select-input-with-initial-value/select-input-with-initial-value.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-select-input-with-initial-value",
            "styleUrls": [
                "./select-input-with-initial-value.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./select-input-with-initial-value.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "items",
                    "line": 11,
                    "type": "string[]"
                }
            ],
            "outputsClass": [
                {
                    "name": "onItemSelect",
                    "defaultValue": "new EventEmitter()",
                    "line": 12,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "selectedItem",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "handleValueChange",
                    "args": [
                        {
                            "name": "value",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit, Output, ViewEncapsulation, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-select-input-with-initial-value',\n  templateUrl: './select-input-with-initial-value.component.html',\n  styleUrls: ['./select-input-with-initial-value.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\n\nexport class SelectInputWithInitialValueComponent implements OnInit {\n  @Input() items: string[];\n  @Output() onItemSelect: EventEmitter<any> = new EventEmitter();\n\n  selectedItem: string;\n\n  handleValueChange(value) {\n    this.onItemSelect.emit(value)\n  }\n\n  ngOnInit(): void {\n    this.selectedItem = this.items[0];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".ng-select {\n  position: relative;\n  box-sizing: border-box;\n  height: 48px; \n  width: 100%;\n\n  background: rgba(var(--secondary-color-code), 0.05);\n  border-radius: 8px;\n  color: rgba(var(--secondary-color-code), 1);\n  text-transform: uppercase;\n\n  &:hover {\n    background: rgba(var(--secondary-color-code), 0.1);\n  }\n\n  &:after {\n    content: url('../../../../../assets/images/roll-up.png');\n    position: absolute;\n    top: 17px;\n    right: 21px;\n    transform: rotate(180deg);\n  }\n\n  &.ng-select-opened{\n    &:after {\n      content: url('../../../../../assets/images/roll-up.png');\n      position: absolute;\n      top: 17px;\n      right: 21px;\n      transform: rotate(0deg);\n    }\n  }\n\n  &-container {\n    width: 100%;\n    height: 46px;\n    padding: 17px 21px 16px 16px;  \n    margin-bottom: 4px;\n  }\n}\n\n.ng-option {\n  background-color: var(--input-bg-color);\n  padding: 17px 21px 16px 16px;  \n\n  &:hover {\n    background-color: var(--light-btn-hover);\n  }\n}\n\n.ng-dropdown-panel {\n  position: absolute;\n}\n\n.scroll-host {\n  color: rgba(var(--secondary-color-code), 1);\n  position: absolute;\n  box-shadow: 0px 30px 70px rgba(46, 45, 79, 0.15);\n  border-radius: 8px;\n}\n\n.ng-clear-wrapper {\n  display: none;\n}",
                    "styleUrl": "./select-input-with-initial-value.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<ng-select \n    [(ngModel)]=\"selectedItem\"\n    class=\"custom fs-12-sofia-600\" \n    [hideSelected]=\"true\"\n    [searchable]=\"false\"\n    (change)=\"handleValueChange($event)\"\n>\n  <ng-option class=\"option\" *ngFor=\"let item of items\" [value]=\"item\">\n    {{ item }}\n  </ng-option>\n</ng-select>\n\n"
        },
        {
            "name": "SemicircleChartCardComponent",
            "id": "component-SemicircleChartCardComponent-68fe442eb518853196c638519e9d3105",
            "file": "src/app/atoms/card/semicircle-chart-card/semicircle-chart-card.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-semicircle-chart-card",
            "styleUrls": [
                "./semicircle-chart-card.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./semicircle-chart-card.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "percent",
                    "line": 12,
                    "type": "number"
                },
                {
                    "name": "text",
                    "line": 13,
                    "type": "string"
                },
                {
                    "name": "title",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "value",
                    "line": 14,
                    "type": "number"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-semicircle-chart-card',\n  templateUrl: './semicircle-chart-card.component.html',\n  styleUrls: ['./semicircle-chart-card.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\n\nexport class SemicircleChartCardComponent {\n  @Input() title: string;\n  @Input() percent: number;\n  @Input() text: string;\n  @Input() value: number;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".semicircle-card {\n  width: 256px;\n  min-height: 152px;\n  overflow: hidden;\n  display: flex;\n\n  border-radius: 12px 30px;\n  color: var(--secondary-color);\n  background-color: var(--card-bg-color);\n\n  &:hover {\n    box-shadow: 0px 40px 70px rgba(var(--secondary-color-code), 0.3);\n  }\n\n  &__left {\n    width: 44.4%;\n    padding: 10px 16px;\n  }\n\n  &__right {\n    width: 55.6%;\n    padding: 43px 25px 8px 9px;\n    background-color: rgba(var(--secondary-color-code), 0.05);\n  }\n\n  &__title {\n    margin-bottom: 24px;\n  }\n}",
                    "styleUrl": "./semicircle-chart-card.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"semicircle-card card\">\n  <div class=\"semicircle-card__left\">\n    <p class=\"semicircle-card__title fs-14-gramm-400\">{{ title }}</p>\n    <app-semicircle-chart [percent]=\"[percent]\"></app-semicircle-chart>\n  </div>\n  <div class=\"semicircle-card__right\">\n    <span class=\"semicircle-card__value fs-h2-b\">{{ value }}</span>\n    <p class=\"semicircle-card__text fs-12-sofia-300\">{{ text }}</p>\n  </div>\n</div>\n"
        },
        {
            "name": "SemicircleChartComponent",
            "id": "component-SemicircleChartComponent-5bbcedd2b2342972614cc5648d3a5cee",
            "file": "src/app/atoms/semicircle-chart/semicircle-chart.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-semicircle-chart",
            "styleUrls": [
                "./semicircle-chart.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./semicircle-chart.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "percent",
                    "line": 11,
                    "type": "number"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "chartOptions",
                    "defaultValue": "{\n    chart: {\n      type: \"radialBar\",\n      offsetY: 0\n    },\n    plotOptions: {\n      radialBar: {\n        startAngle: -120,\n        endAngle: 120,\n        track: {\n          background: \"#D0DAEB\",\n          strokeWidth: \"97%\",\n        },\n      }\n    },\n    states: {\n      normal: {\n        filter: {\n          type: 'none',\n        }\n      },\n      hover: {\n        filter: {\n          type: 'none',\n        }\n      },\n      active: {\n        allowMultipleDataPointsSelection: false,\n        filter: {\n          type: 'none',\n        }\n      },\n    },\n    fill: {\n      type: \"gradient\",\n      gradient: {\n        type: \"diagonal2\",\n        shadeIntensity: 1,\n        opacityFrom: 0.7,\n        opacityTo: 0.9,\n        colorStops: [\n          {\n            offset: 0,\n            color: '',\n            opacity: 1\n          },\n          {\n            offset: 50,\n            color: '',\n            opacity: 1\n          },\n          {\n            offset: 100,\n            color: '',\n            opacity: 1\n          }\n        ]\n      }\n    }\n  }",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnChanges, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-semicircle-chart',\n  templateUrl: './semicircle-chart.component.html',\n  styleUrls: ['./semicircle-chart.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\n\nexport class SemicircleChartComponent implements OnChanges {\n  @Input() percent: number;\n\n  chartOptions = {\n    chart: {\n      type: \"radialBar\",\n      offsetY: 0\n    },\n    plotOptions: {\n      radialBar: {\n        startAngle: -120,\n        endAngle: 120,\n        track: {\n          background: \"#D0DAEB\",\n          strokeWidth: \"97%\",\n        },\n      }\n    },\n    states: {\n      normal: {\n        filter: {\n          type: 'none',\n        }\n      },\n      hover: {\n        filter: {\n          type: 'none',\n        }\n      },\n      active: {\n        allowMultipleDataPointsSelection: false,\n        filter: {\n          type: 'none',\n        }\n      },\n    },\n    fill: {\n      type: \"gradient\",\n      gradient: {\n        type: \"diagonal2\",\n        shadeIntensity: 1,\n        opacityFrom: 0.7,\n        opacityTo: 0.9,\n        colorStops: [\n          {\n            offset: 0,\n            color: '',\n            opacity: 1\n          },\n          {\n            offset: 50,\n            color: '',\n            opacity: 1\n          },\n          {\n            offset: 100,\n            color: '',\n            opacity: 1\n          }\n        ]\n      }\n    }\n  }\n\n  ngOnChanges () {\n    if (this.percent < 30) {\n      this.chartOptions.fill.gradient.colorStops.forEach(colorStop => colorStop.color = \"#EA2D2D\");\n    } else if (this.percent < 65) {\n      this.chartOptions.fill.gradient.colorStops[0].color = \"#F9BE5A\";\n      this.chartOptions.fill.gradient.colorStops[1].color = \"#F9BE5A\";\n      this.chartOptions.fill.gradient.colorStops[2].color = \"#FB5F47\";\n    } else {\n      this.chartOptions.fill.gradient.colorStops[0].color = \"#0263BC\";\n      this.chartOptions.fill.gradient.colorStops[1].color = \"#24B04B\";\n      this.chartOptions.fill.gradient.colorStops[2].color = \"#24B04B\";\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".semicircle-chart {\n  position: absolute;\n  top: -20px;\n  left: -33.5px;\n  width: 145px;\n  height: 80px;\n  background: var(--card-bg-color);\n\n  &__value {\n    position: absolute;\n    top: 30px;\n    left: 22px;\n    z-index: 3;\n    color: var(--secondary-color);\n  }\n}\n\n.wrapper {\n  width: 80px;\n  height: 80px;\n  overflow: hidden;\n  position: relative;\n}\n\n.apexcharts-pie-label, .apexcharts-datalabels, .apexcharts-datalabel, .apexcharts-datalabel-label, .apexcharts-datalabel-value {\n  display: none!important;\n}\n",
                    "styleUrl": "./semicircle-chart.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnChanges"
            ],
            "templateData": "<div class=\"wrapper card\">\n  <div class=\"semicircle-chart\">\n    <apx-chart\n      [states]=\"chartOptions.states\"\n      [series]=\"percent\"\n      [chart]=\"chartOptions.chart\"\n      [plotOptions]=\"chartOptions.plotOptions\"\n      [fill]=\"chartOptions.fill\"\n    ></apx-chart>\n  </div>\n  <span class=\"semicircle-chart__value fs-12-gramm-400\">{{ percent[0] }}/100</span>\n</div>"
        },
        {
            "name": "SideMenuComponent",
            "id": "component-SideMenuComponent-298192f99808308ac20568445f2d2cb1",
            "file": "src/app/molecules/menu/side-menu/side-menu.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-side-menu",
            "styleUrls": [
                "./side-menu.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./side-menu.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "items",
                    "line": 10,
                    "type": "string[]"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "active",
                    "defaultValue": "0",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "handlClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "any"
                        },
                        {
                            "name": "i",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "i",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-side-menu',\n  templateUrl: './side-menu.component.html',\n  styleUrls: ['./side-menu.component.scss']\n})\n\nexport class SideMenuComponent {\n  @Input() items: string[];\n\n  active: number = 0;\n  \n  handlClick(event: any, i: number) {\n    event.preventDefault();\n    this.active = i;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-side-menu {\n  width: fit-content;\n  min-width: 260px;\n  padding: 32px 72px 12px 32px;\n  \n  border-radius: 12px 30px;\n  background-color: var(--text-color);\n  box-shadow: 0px 50px 70px rgba(44, 59, 82, 0.15);\n  \n  &__item {\n    width: fit-content;\n    margin-bottom: 20px;\n  }\n}",
                    "styleUrl": "./side-menu.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<ul class=\"app-side-menu list\">\n  <li \n    class=\"app-side-menu__item\"\n    *ngFor=\"let item of items; let i = index\" \n  >   \n    <app-nav-link\n      [isActive]=\"active === i\"\n      [title]=\"item\" \n      classes=\"nav-link-secondary fs-12-gramm-400\"\n      (click)=\"handlClick($event, i)\"\n    >\n    </app-nav-link>\n  </li>\n</ul>\n\n  \n"
        },
        {
            "name": "simpleButtonComponent",
            "id": "component-simpleButtonComponent-6bddefbf96e333f2f6ed5aafc9a1217f",
            "file": "src/app/atoms/buttons/simpleButton/simpleButton.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-simple-button",
            "styleUrls": [
                "../button.component.scss",
                "simpleButton.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./simpleButton.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "classes",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "color",
                    "line": 13,
                    "type": "string"
                },
                {
                    "name": "srcPath",
                    "line": 14,
                    "type": "string"
                },
                {
                    "name": "title",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-simple-button',\n  templateUrl: './simpleButton.component.html',\n  styleUrls: ['../button.component.scss', 'simpleButton.component.scss'],\n})\n\nexport class simpleButtonComponent {\n  @Input() title: string;\n  @Input() classes: string;\n  @Input() backgroundColor: string;\n  @Input() color: string;\n  @Input() srcPath?: string;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".btn-app {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  transition: 0.3s;\n  border-radius: 8px;\n\n  &--h36 {\n    display: flex;\n    align-items: center;\n    height: 36px;\n    padding: 0 18px 0 18px;\n  }\n  \n  &--asimetric {\n    border-radius: 20px 5px;\n    height: 52px;\n    padding: 18px 41px 18px 44px;\n  }\n\n  &--h46 {\n    height: 46px;\n    padding: 13px 15px 12px 15px;\n  }\n\n  &--h46--wide {\n    height: 46px;\n    padding: 17px 37px;\n  }\n\n  &--h52 {\n    height: 52px;\n    padding: 18px 66px;\n  }\n\n  &--h53 {\n    height: 53px;\n    padding: 9px 10px;\n  }\n}\n",
                    "styleUrl": "../button.component.scss"
                },
                {
                    "data": ".btn-danger {\n  color: var(--danger-color);\n  background: inherit;\n  outline: none;\n  border: 1px solid rgba(var(--danger-color-code), 0.2);\n\n  &:hover {\n    cursor: pointer;\n    background: rgba(var(--danger-color-code), 0.3);\n  }\n\n  &:active {\n    background: rgba(var(--danger-color-code), 0.5);\n  }\n}\n\n.btn-transparent {\n  position: relative;\n  padding-left: 20px;\n\n  text-transform: uppercase;\n  color: rgba(var(--secondary-color-code), 0.75);\n  border: none;\n  background-color: transparent;\n\n  &:hover {\n    &:after {\n      content: url('../../../../assets/images/back.svg');\n      position: absolute;\n      top: 0;\n      left: 0;\n    }\n  }\n}\n\n.btn-success {\n  position: relative;\n  z-index: 2;\n\n  background: transparent;\n  border: none;\n  color: var(--text-color);\n  text-transform: uppercase;\n\n  &::before {\n    content: '';\n    position: absolute;\n    z-index: -1;\n    top: 0;\n    left: 0;\n\n    width: 100%;\n    height: 100%;\n    \n    background: var(--success-grad-light);\n    border-radius: 8px;\n  }\n\n  &::after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    z-index: -1;\n\n    width: 100%;\n    height: 100%;\n\n    background: var(--success-grad-dark);\n    border-radius: 8px;\n    opacity: 0;\n  }\n\n  &:hover {\n    &::before {\n      opacity: 0;\n    }\n\n    &::after {\n      opacity: 1;\n    }\n  }\n\n  &:active {\n    &::before {\n      opacity: 1;\n    }\n\n    &::after {\n      opacity: 0;\n    }\n  }\n}\n\n\n.btn-success-asimetric {\n  position: relative;\n  z-index: 2;\n\n  background: transparent;\n  border: none;\n  color: var(--text-color);\n  text-transform: uppercase;\n\n  &::before {\n    content: '';\n    position: absolute;\n    z-index: -1;\n    top: 0;\n    left: 0;\n\n    width: 100%;\n    height: 100%;\n    \n    background: var(--success-grad-light);\n    border-radius: 20px 5px;\n  }\n  \n  &::after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    z-index: -1;\n\n    width: 100%;\n    height: 100%;\n\n    background: var(--success-grad-dark);\n    border-radius: 20px 5px;\n    opacity: 0;\n  }\n  \n  &:hover {\n    &::before {\n      opacity: 0;\n    }\n\n    &::after {\n      opacity: 1;\n    }\n  }\n  \n  &:active {\n      &::before {\n        opacity: 1;\n      }\n\n      &::after {\n        opacity: 0;\n      }\n    }\n  }\n\n\n.app-button-success__image {\n  margin-left: 27px;\n}\n\n\n.btn-dark {\n  background-color: #030D21;\n  border: none;\n  color: var(--text-color);\n}",
                    "styleUrl": "simpleButton.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<button\n  [ngClass]=\"classes\"\n  [ngStyle]=\"{ 'background-color': backgroundColor, 'color': color }\"\n>\n  {{ title }}\n  <img class=\"app-button-success__image\" *ngIf=\"srcPath\" [src]=\"srcPath\" [alt]=\"'title'\">\n</button>\n"
        },
        {
            "name": "SimpleCounterComponent",
            "id": "component-SimpleCounterComponent-28457c2747dc314aa1e201d01a7b64e2",
            "file": "src/app/atoms/counters/simple-counter/simple-counter.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-simple-counter",
            "styleUrls": [
                "./simple-counter.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./simple-counter.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "initialValue",
                    "line": 11,
                    "type": "number"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "decreaseValue",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "increaseValue",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "value",
                    "defaultValue": "1",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-simple-counter',\n  templateUrl: './simple-counter.component.html',\n  styleUrls: ['./simple-counter.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\n\nexport class SimpleCounterComponent implements OnInit {\n  @Input() initialValue?: number;\n  value = 1;\n\n  increaseValue = () => {\n    this.value = this.value + 1;\n  }\n\n  decreaseValue = () => {\n    if (this.value - 1 > 0) {\n      this.value = this.value - 1;\n    }\n  }\n\n  ngOnInit(): void {\n    if (this.initialValue) {\n      this.value = this.initialValue;\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-simple-counter {\n  display: flex;\n  width: 202px;\n\n  & * {\n    margin-right: 8px;\n  }\n\n  & :last-child {\n    margin-right: 0;\n  }\n\n  &__value-container {\n    width: 100%;\n    text-align: center;\n    height: 48px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  \n    border: none;\n    border-radius: 8px;\n    background: rgba(var(--secondary-color-code), 0.05);\n    color: var(--secondary-color);\n  }\n}\n.next {\n  & > app-light-button > .btn-light {\n    transform: rotate(180deg)!important;\n  }\n}\n\n\n\n",
                    "styleUrl": "./simple-counter.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"app-simple-counter\">\n  <app-light-button \n    [srcPath]=\"'assets/images/back.svg'\"\n    (click)=\"decreaseValue()\"\n  >\n  </app-light-button>\n  <div class=\"app-simple-counter__value-container\">\n    <p class=\"app-simple-counter__value fs-16-sofia-300\">\n      {{ value }}\n    </p>\n  </div>\n  <span class=\"next\">\n    <app-light-button \n      [srcPath]=\"'assets/images/back.svg'\"\n      (click)=\"increaseValue()\"\n    >\n    </app-light-button>\n  </span>\n</div>\n"
        },
        {
            "name": "SimpleTextareaComponent",
            "id": "component-SimpleTextareaComponent-de4604caded468f20c1f0c5d993712c6",
            "file": "src/app/atoms/inputs/textarea/simple-textarea/simple-textarea.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-simple-textarea",
            "styleUrls": [
                "./simple-textarea.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./simple-textarea.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "placeholderText",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-simple-textarea',\n  templateUrl: './simple-textarea.component.html',\n  styleUrls: ['./simple-textarea.component.scss']\n})\n\nexport class SimpleTextareaComponent {\n  @Input() placeholderText: string;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-textarea {\n  width: 100%;\n  height: 157px;\n  padding: 16px;\n  outline: none;\n  border: none;\n  border-radius: 8px;\n  background: rgba(var(--secondary-color-code), 0.05);\n  color: var(--secondary-color);\n\n  &::placeholder {\n    color: rgba(var(--secondary-color-code), 0.5);\n  }\n\n  &:hover {\n    background: rgba(var(--secondary-color-code), 0.2);\n  }\n}\n",
                    "styleUrl": "./simple-textarea.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<textarea\n  class=\"app-textarea fs-16-sofia-300\"\n  [placeholder]=\"placeholderText\"\n>\n</textarea>\n"
        },
        {
            "name": "SmallLightAddButtonComponent",
            "id": "component-SmallLightAddButtonComponent-f86cf5ca117de2e2b1ab8968293ebf3b",
            "file": "src/app/atoms/buttons/add-buttons/small-light-add-button/small-light-add-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-small-light-add-button",
            "styleUrls": [
                "./small-light-add-button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./small-light-add-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "classes",
                    "line": 9,
                    "type": "string"
                },
                {
                    "name": "title",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-small-light-add-button',\n  templateUrl: './small-light-add-button.component.html',\n  styleUrls: ['./small-light-add-button.component.scss']\n})\nexport class SmallLightAddButtonComponent {\n  @Input() classes: string;\n  @Input() title: string;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-small-light-add-button {\n  padding: 11px 16px 13px;\n  border: none;\n  border-radius: 6px;\n  background: var(--status-bar-bg-color);\n  color: var(--secondary-color);\n  transition: 0.3s;\n\n  &__image {\n    margin-right: 16px;\n  }\n\n  &:hover {\n    background: var(--asimetric-bg-color);\n  }\n\n  &:active {\n    background: var(--status-bar-bg-color);\n  }\n}\n\n.app-big-light-add-button {\n  width: 100%;\n  padding: 11px 16px 13px;\n  border: none;\n  border-radius: 6px;\n  background: var(--status-bar-bg-color);\n  color: var(--secondary-color);\n  transition: 0.3s;\n  text-align: left;\n\n  &__image {\n    margin-right: 16px;\n  }\n\n  &:hover {\n    background: var(--asimetric-bg-color);\n  }\n\n  &:active {\n    background: var(--status-bar-bg-color);\n  }\n}",
                    "styleUrl": "./small-light-add-button.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<button type=\"button\" [ngClass]=\"classes\">\n  <img \n    src=\"assets/images/plus-transparent.png\" \n    alt=\"plus\"\n    class=\"app-small-light-add-button__image\"\n  >\n  {{ title }}\n</button>\n"
        },
        {
            "name": "StatusBarComponent",
            "id": "component-StatusBarComponent-7129eeea40ee9efdcf8343d8d73dfd6a",
            "file": "src/app/molecules/status-bar/status-bar.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-status-bar",
            "styleUrls": [
                "./status-bar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./status-bar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "activePoints",
                    "defaultValue": "1",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "moveToNext",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "moveToPrevious",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "totalSteps",
                    "defaultValue": "6",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-status-bar',\n  templateUrl: './status-bar.component.html',\n  styleUrls: ['./status-bar.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\n\nexport class StatusBarComponent implements OnInit {\n  activePoints = 1;\n  totalSteps = 6;\n\n  moveToNext = () => {\n    if (this.activePoints  <  this.totalSteps) {\n      this.activePoints = this.activePoints + 1;\n    }\n  }\n\n  moveToPrevious = () => {\n    if (this.activePoints  >  1) {\n      this.activePoints = this.activePoints - 1;\n    }\n  }\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-status-bar {\n  display: flex;\n  justify-content: space-between; \n  align-items: center;\n  width: 100%;\n  padding: 20px 30px;\n  background: var(--status-bar-bg-color);\n  border-radius: 20px;\n\n  &__wrapper {\n    width: calc(100% - 260px);\n  }\n}\n",
                    "styleUrl": "./status-bar.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 24
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"app-status-bar\">\n  <app-light-assimetric-button\n    [srcPath]=\"'assets/images/back.svg'\" \n    (click)=\"moveToPrevious()\"\n  >\n  </app-light-assimetric-button>\n  <div class=\"app-status-bar__wrapper\">\n    <app-status-steps-dynamic\n      [activePoints]=\"activePoints\"\n      [totalNumber]=\"6\"\n      titles=\"\"\n    >\n    </app-status-steps-dynamic>\n  </div>\n  <app-simple-button\n    [title]=\"'next'\"\n    [classes]=\"'btn-app--asimetric btn-success-asimetric fs-16-sofia-800'\"\n    [srcPath]=\"'assets/images/next.svg'\"\n    (click)=\"moveToNext()\"\n  >\n  </app-simple-button>\n</div>\n"
        },
        {
            "name": "StatusStepsDynamicComponent",
            "id": "component-StatusStepsDynamicComponent-d8eaaf87dc38394d0d52313be0d81bec",
            "file": "src/app/atoms/status-steps-dynamic/status-steps-dynamic.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-status-steps-dynamic",
            "styleUrls": [
                "./status-steps-dynamic.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./status-steps-dynamic.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "activePoints",
                    "line": 11,
                    "type": "number"
                },
                {
                    "name": "background",
                    "line": 14,
                    "type": "string"
                },
                {
                    "name": "titles",
                    "line": 13,
                    "type": "string[]"
                },
                {
                    "name": "totalNumber",
                    "line": 12,
                    "type": "number"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "classesDots",
                    "defaultValue": "[]",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "classesLines",
                    "defaultValue": "[]",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "list",
                    "defaultValue": "[]",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "sectionWidth",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnChanges, Input } from '@angular/core';\nimport { detectClasses } from './helpers';\n\n@Component({\n  selector: 'app-status-steps-dynamic',\n  templateUrl: './status-steps-dynamic.component.html',\n  styleUrls: ['./status-steps-dynamic.component.scss']\n})\n\nexport class StatusStepsDynamicComponent implements OnChanges {\n  @Input() activePoints: number;\n  @Input() totalNumber: number;\n  @Input() titles: string[];\n  @Input() background?: string;\n\n  list = [];\n  classesDots: string[] = [];\n  classesLines: string[] = [];\n  sectionWidth = '';\n\n  ngOnChanges(): void {\n    const newList = [];\n    for (let i = 0; i < this.totalNumber; i++) {\n      newList.push(i)\n    }\n    this.list = newList;\n    this.classesDots = detectClasses(this.totalNumber, this.activePoints, newList).classListDots;\n    this.classesLines = detectClasses(this.totalNumber, this.activePoints, newList).classListLines;\n    this.sectionWidth = `${(100 - 1) / (this.totalNumber - 1)}%`;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-steps {\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n\n  width: 100%;\n  height: 10px;\n\n  &__wrapper {\n    width: 99%;\n    position: relative;\n  }\n\n  &__box {\n    display: flex;\n    align-items: center;\n  }\n\n  &__label {\n    position: absolute;\n    top: 200%;\n  }\n\n  &__line {\n    height: 1px;\n    width: 100%;\n    z-index: 1;\n\n    position: absolute;\n    left: 3px;\n    top: 3px;\n\n    background-color: var(--text-color);\n  \n    &.active {\n      background: var(--success-grad-light);\n    }\n  }\n\n  &__circle {\n    position: relative;\n    z-index: 2;\n    height: 8px;\n    width: 8px;\n    border-radius: 50%;\n    color: rgba(var(--secondary-color-code), 0.5);\n\n    & > .app-steps__dot {\n      height: 8px;\n      width: 8px;\n      border-radius: 50%;\n      background: rgba(var(--secondary-color-code), 0.5);\n    }\n\n    &.active {\n      color: var(--secondary-color);\n  \n      & > .app-steps__dot {\n        background: var(--success-grad-light);\n      }\n    }\n\n    &::before {\n      content: \"\";\n      position: absolute;\n      top: -3px;\n      left: -3px;\n      z-index: -1;\n\n      height: 14px;\n      width: 14px;\n\n      border-radius: 50%;\n      background: var(--text-color)\n    }\n  }\n}",
                    "styleUrl": "./status-steps-dynamic.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnChanges"
            ],
            "templateData": "<div class=\"app-steps fs-12-sofia-400\" [ngStyle]=\"{ 'background-color': background }\">\n  <div \n    *ngFor=\"let number of list\" \n    class=\"app-steps__box\"\n    [ngStyle]=\"number !== list.length - 1 ? { 'width': sectionWidth } :{ 'width': '1%' }\"\n  >\n    <div *ngIf=\"number !== (list.length - 1)\" class=\"app-steps__wrapper\">\n      <div [ngClass]=\"classesDots[number]\">\n        <div class=\"app-steps__dot\"></div>\n        <div \n          class=\"app-steps__label\"\n          [ngStyle]=\"number !== 0 ? { 'text-align': 'center', 'left': '-300%' } : { 'text-align': 'left' }\"\n        >\n          {{ titles[number] }}\n        </div>\n      </div>\n      <div [ngClass]=\"classesLines[number]\"></div>\n    </div>\n    <div *ngIf=\"number == (list.length - 1)\" class=\"app-steps__wrapper\">\n      <div [ngClass]=\"classesDots[number]\">\n        <div class=\"app-steps__dot\"></div>\n        <div \n          class=\"app-steps__label\"\n          [ngStyle]=\"{ 'text-align': 'right', 'left': '-700%' } \"\n        >\n          {{ titles[number] }}\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n"
        },
        {
            "name": "StepsComponent",
            "id": "component-StepsComponent-0ca1f66f74e881de4f64e09798a4066a",
            "file": "src/app/atoms/steps/steps.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-steps",
            "styleUrls": [
                "./steps.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./steps.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "activePoints",
                    "line": 11,
                    "type": "number"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "classes",
                    "defaultValue": "[]",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnChanges } from '@angular/core';\nimport { detectClasses } from './helpers';\n\n@Component({\n  selector: 'app-steps',\n  templateUrl: './steps.component.html',\n  styleUrls: ['./steps.component.scss']\n})\n\nexport class StepsComponent implements OnChanges {\n  @Input() activePoints: number;\n  classes: string[] = [];\n  \n  ngOnChanges(): void {\n    this.classes = detectClasses(this.activePoints);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-steps {\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n\n  width: 100%;\n  height: 47px;\n\n  &__label {\n    position: absolute;\n    top: 200%;\n  }\n\n  &__line {\n    height: 1px;\n    width: 49%;\n    z-index: 3;\n    margin-top: 3px;\n    background-color: var(--text-color);\n  \n    &.active {\n      background: var(--success-grad-light);\n    }\n  }\n\n  &__circle {\n    position: relative;\n    z-index: 2;\n    height: 8px;\n    width: 8px;\n    border-radius: 50%;\n    color: rgba(var(--secondary-color-code), 0.5);\n\n    & > .app-steps__dot {\n      height: 8px;\n      width: 8px;\n      border-radius: 50%;\n      background: rgba(var(--secondary-color-code), 0.5);\n    }\n\n    &.active {\n      color: var(--secondary-color);\n  \n      & > .app-steps__dot {\n        background: var(--success-grad-light);\n      }\n    }\n\n    &::before {\n      content: \"\";\n      position: absolute;\n      top: -3px;\n      left: -3px;\n      z-index: -1;\n\n      height: 14px;\n      width: 14px;\n\n      border-radius: 50%;\n      background: var(--text-color)\n    }\n  }\n}\n\n.text-al-left {\n  text-align: left;\n}\n\n.text-al-center {\n  text-align: center;\n  left: -18px;\n}\n\n.text-al-right {\n  text-align: right;\n  left: -50px;\n}",
                    "styleUrl": "./steps.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnChanges"
            ],
            "templateData": "<div class=\"app-steps fs-12-sofia-400\">\n  <div [ngClass]=\"classes[0]\">\n    <div class=\"app-steps__dot\"></div>\n    <div class=\"app-steps__label text-al-left\">Add your information</div>\n  </div>\n  <div [ngClass]=\"classes[1]\"></div>\n  <div [ngClass]=\"classes[2]\">\n    <div class=\"app-steps__dot\"></div>\n    <div class=\"app-steps__label text-al-center\">Add domain</div>\n  </div>\n  <div [ngClass]=\"classes[3]\"></div>\n  <div [ngClass]=\"classes[4]\">\n    <div class=\"app-steps__dot\"></div>\n    <div class=\"app-steps__label text-al-right\">Select coverage</div>\n  </div>\n</div>\n"
        },
        {
            "name": "TabMenuComponent",
            "id": "component-TabMenuComponent-63ce9882c7c6a05ca95d9914412c9105",
            "file": "src/app/molecules/menu/tab-menu/tab-menu.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-tab-menu",
            "styleUrls": [
                "./tab-menu.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./tab-menu.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "titles",
                    "line": 10,
                    "type": "string[]"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "active",
                    "defaultValue": "0",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [
                {
                    "name": "setActive",
                    "args": [
                        {
                            "name": "i",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "jsdoctags": [
                        {
                            "name": "i",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-tab-menu',\n  templateUrl: './tab-menu.component.html',\n  styleUrls: ['./tab-menu.component.scss']\n})\n\nexport class TabMenuComponent {\n  @Input() titles: string[];\n  active = 0;\n\n  setActive(i: number) {\n    this.active = i;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".tab-menu {\n  display: flex;\n  justify-content: flex-start;\n  position: relative;\n  z-index: 1;\n\n  &__item {\n    width: 199px;\n    height: 38px;\n    padding: 12px 0;\n    position: relative;\n\n    text-align: center;\n    border-radius: 0px 12px 0px 0px;\n    background-color: var(--asimetric-bg-color);\n    box-shadow: 4px 0px 24px rgba(28, 28, 28, 0.1);\n    color: rgba(var(--secondary-color-code), 0.7);\n\n    &:hover {\n      cursor: pointer;\n      color: rgba(var(--secondary-color-code), 1);\n    }\n\n    &.active {\n      background-color: var(--text-color);\n      color: var(--secondary-color);\n      box-shadow: none;\n \n      &:after {\n        content: url('../../../../assets/images/Subtract.png');\n        position: absolute;\n        width: 15px;\n        height: 15px;\n        bottom: 0;\n        right: -14px;\n        z-index: 3;\n        border-radius: 0px 0px 0px 12px;\n      }\n    }\n  }\n}",
                    "styleUrl": "./tab-menu.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<ul class=\"tab-menu\">\n  <li\n    *ngFor=\"let title of titles; let i = index;\"\n    (click)=\"setActive(i)\"\n    [ngStyle]=\"{'left': -i * 11 + 'px', 'z-index': 10/(i + 1)}\"\n    [ngClass]=\"i===active ? 'tab-menu__item active fs-14-gramm-400' : 'tab-menu__item fs-14-gramm-400'\"\n  >\n    {{title}}\n  </li>\n</ul>\n"
        },
        {
            "name": "TextEditorComponent",
            "id": "component-TextEditorComponent-089d57049af77c8ae0c5f92460a07a5e",
            "file": "src/app/atoms/text-editor/text-editor.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-text-editor",
            "styleUrls": [
                "./text-editor.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./text-editor.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-text-editor',\n  templateUrl: './text-editor.component.html',\n  styleUrls: ['./text-editor.component.scss']\n})\nexport class TextEditorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./text-editor.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>text-editor works!</p>\n"
        },
        {
            "name": "TextWithAfterGradientLineComponent",
            "id": "component-TextWithAfterGradientLineComponent-f778796c31e5c4b37b2f304d6a24dfb4",
            "file": "src/app/atoms/text/text-with-after-gradient-line/text-with-after-gradient-line.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-text-with-after-gradient-line",
            "styleUrls": [
                "./text-with-after-gradient-line.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./text-with-after-gradient-line.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "title",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-text-with-after-gradient-line',\n  templateUrl: './text-with-after-gradient-line.component.html',\n  styleUrls: ['./text-with-after-gradient-line.component.scss']\n})\n\nexport class TextWithAfterGradientLineComponent {\n  @Input() title: string;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-text-with-after-gradient-line {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 90px;\n\n  & > h4 {\n    flex: 0 0 150px;  \n  }\n\n  &__line {\n    height: 1px;\n    width: 80%;\n    background: var(--success-grad-light);\n    opacity: 0.1;\n  }\n}\n",
                    "styleUrl": "./text-with-after-gradient-line.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"app-text-with-after-gradient-line\">\n  <h4 class=\"fs-h4--bold\">{{ title }}</h4> \n  <div class=\"app-text-with-after-gradient-line__line\"></div>\n</div>\n"
        },
        {
            "name": "TextWithGradientBackComponent",
            "id": "component-TextWithGradientBackComponent-573d6d4c08bd5d9f6f87117c9919d70b",
            "file": "src/app/atoms/text/text-with-gradient-back/text-with-gradient-back.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-text-with-gradient-back",
            "styleUrls": [
                "./text-with-gradient-back.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./text-with-gradient-back.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "titles",
                    "line": 10,
                    "type": "string[]"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-text-with-gradient-back',\n  templateUrl: './text-with-gradient-back.component.html',\n  styleUrls: ['./text-with-gradient-back.component.scss']\n})\n\nexport class TextWithGradientBackComponent {\n  @Input() titles: string[];\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".text-with-gradient-back {\n  display: flex;\n  flex-wrap: wrap;\n  width: 100%;\n\n  &__wrapper {\n    background: var(--success-grad-light);\n    color: var(--text-color);\n    height: auto;\n    border-radius: 21px;\n    padding: 3.5px 8px 3.5px 8px;\n    text-align: center;\n    width: fit-content;\n  }\n}",
                    "styleUrl": "./text-with-gradient-back.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"text-with-gradient-back fs-12-sofia-300\">\n  <div class=\"text-with-gradient-back__wrapper\" *ngFor=\"let title of titles; let i = index\">\n    {{ title }}\n  </div>\n</div>\n\n"
        },
        {
            "name": "TransparentTableComponent",
            "id": "component-TransparentTableComponent-3986056b542ef5070d6ba0e90c48f0b6",
            "file": "src/app/atoms/tables/transparent-table/transparent-table.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-transparent-table",
            "styleUrls": [
                "./transparent-table.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./transparent-table.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "line": 12,
                    "type": "any[]"
                },
                {
                    "name": "heads",
                    "line": 11,
                    "type": "string[]"
                },
                {
                    "name": "mainColumn",
                    "line": 13,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "activeColumn",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "headsListWithoutMain",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "isMobile",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "checkType",
                    "args": [
                        {
                            "name": "value",
                            "type": "any"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 36,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47
                },
                {
                    "name": "showNext",
                    "args": [
                        {
                            "name": "direction",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "jsdoctags": [
                        {
                            "name": "direction",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "window:resize",
                    "args": [
                        {
                            "name": "event",
                            "type": "any"
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "line": 20
                }
            ],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, HostListener, Input, OnInit, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-transparent-table',\n  templateUrl: './transparent-table.component.html',\n  styleUrls: ['./transparent-table.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\n\nexport class TransparentTableComponent implements OnInit {\n  @Input() heads: string[];\n  @Input() data: any[];\n  @Input() mainColumn: string;\n  \n  isMobile: boolean;\n  activeColumn: string;\n  headsListWithoutMain: string[];\n\n  @HostListener('window:resize', ['$event'])\n  onResize(event: any) {\n    this.isMobile = (event.target.innerWidth < 800) ? true : false;\n  }\n\n  showNext(direction: string) {\n    const currentIndex = this.headsListWithoutMain.findIndex(head => head === this.activeColumn);\n    let nextIndex;\n    \n    if (direction =='forward') {\n      nextIndex = (currentIndex + 1 > this.headsListWithoutMain.length - 1) ? 0 : currentIndex + 1; \n    } else if (direction =='back') {\n      nextIndex = (currentIndex - 1 < 0) ? this.headsListWithoutMain.length - 1 : currentIndex - 1; \n    }\n    this.activeColumn = this.headsListWithoutMain[nextIndex]\n  }\n\n  checkType (value: any) {\n    switch (typeof value) {\n      case 'boolean':\n        return 'boolean';\n      case 'string':\n        return 'string';\n      case 'object': \n        return value.type\n    }\n  }\n\n  ngOnInit(): void {\n    this.headsListWithoutMain = this.heads.filter(head => head !== this.mainColumn);\n    this.activeColumn = this.headsListWithoutMain[0];\n    this.isMobile = (window.innerWidth < 800) ? true : false;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-transparent-table {\n  position: relative;\n  width: 100%;\n  overflow: hidden;\n  \n  border-radius: 12px;\n  color: var(--secondary-color);\n  border: 1px solid rgba(var(--secondary-color-code), 0.3);\n  border-spacing: 0;\n  transition: margin 3s;\n\n  &__head {\n    position: relative;\n    padding: 13px 16px;\n    height: 38px;\n    text-transform: capitalize;\n    color: rgba(var(--secondary-color-code), 0.75);\n    background-color: rgba(var(--secondary-color-code), 0.2);\n  }\n\n  &__head-item {\n    margin-left: 24px;\n  }\n\n  &__row {\n    margin-bottom: 20px;\n    padding: 13px 16px;\n  }\n \n  &__main-column {\n    width: 30%;\n  }\n}\n\ntd, th {\n  padding: 10px;\n  text-align: left;;\n}\n\n.text-with-gradient-back__wrapper {\n  margin: 0 5px 5px 0;\n}\n\n.app-transparent-table__button {\n  width: 24px;\n  height: 24px;\n  border-radius: 50%;\n  background-color: rgba(var(--secondary-color-code), 1);\n  border: none;\n  position: absolute;\n  top: 7px;\n  z-index: 2;\n}\n\n.prev {\n  left: 25%;\n  transform: rotate(180deg);\n  &:after {\n    content: '';\n    position: absolute;\n    top: 0px;\n    left: 1px;\n    width: 24px;\n    height: 24px;\n    border-radius: 50%;\n    background: center no-repeat url('../../../../assets/images/next.svg');\n  }\n}\n\n.next {\n  right: 40px;\n  &:after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 1px;\n    width: 24px;\n    height: 24px;\n    border-radius: 50%;\n    background: center no-repeat url('../../../../assets/images/next.svg');\n  }\n}",
                    "styleUrl": "./transparent-table.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<!-- !!!!!!!!!mobile version of table!!!!!!!!!!!!  -->\n<table \n  id=\"table\" \n  *ngIf=\"isMobile\" \n  class=\"app-transparent-table fs-12-sofia-400\"\n>\n  <tr class=\"app-transparent-table__head\">\n   <th class=\"app-transparent-table__head-item app-transparent-table__main-column\">\n     {{ mainColumn }}\n   </th>\n   <th  class=\"app-transparent-table__head-item\">\n     {{ activeColumn }}\n   </th>\n  </tr>\n  <tr \n    class=\"app-transparent-table__row fs-12-sofia-300\" \n    *ngFor=\"let item of data; let i = index\"\n  >\n    <td>\n      <p *ngIf=\"checkType(item[mainColumn])==='string'\">\n        {{ item[mainColumn] }}\n      </p>\n      <app-text-with-gradient-back \n        [titles]=\"item[mainColumn].data\"\n        *ngIf=\"checkType(item[mainColumn])==='gradientText'\"\n      >\n      </app-text-with-gradient-back>\n      <img [src]=\"item[mainColumn].path\" *ngIf=\"checkType(item[mainColumn])==='image'\">\n      <span *ngIf=\"checkType(item[mainColumn])==='boolean'\">\n        <app-round-icon\n          [classes]=\"item[mainColumn] ? 'app-round-icon app-round-icon__positive' : 'app-round-icon app-round-icon__negative'\"\n          [ngStyle]=\"{'display': 'flex', 'justify-content': 'center'}\"\n        ></app-round-icon>\n      </span>\n    </td>\n    <td>\n      <p *ngIf=\"checkType(item[activeColumn])==='string'\">\n        {{ item[activeColumn] }}\n      </p>\n      <img [src]=\"item[activeColumn].path\" *ngIf=\"checkType(item[activeColumn])==='image'\" >\n      <app-text-with-gradient-back \n        [titles]=\"item[activeColumn].data\"\n        *ngIf=\"checkType(item[activeColumn])==='gradientText'\"\n      >\n      </app-text-with-gradient-back>\n      <span *ngIf=\"checkType(item[activeColumn])==='boolean'\">\n        <app-round-icon\n          [classes]=\"item[activeColumn] ? 'app-round-icon app-round-icon__positive' : 'app-round-icon app-round-icon__negative'\"\n        ></app-round-icon>\n      </span>\n    </td>\n  </tr>\n  <button class=\"prev app-transparent-table__button\" type=\"button\" (click)=\"showNext('back')\"></button>\n  <button class=\"next app-transparent-table__button\"type=\"button\" (click)=\"showNext('forward')\"></button>\n</table> \n\n\n<!-- !!!!!!!!!desktop version of table!!!!!!!!!!!!  -->\n<table id=\"table\" class=\"app-transparent-table fs-12-sofia-400\"  *ngIf=\"!isMobile\">\n  <tr class=\"app-transparent-table__head\">\n   <th \n      class=\"app-transparent-table__head-item\"\n      *ngFor=\"let head of heads; let i = index\"\n    >\n     {{ head }}\n   </th>\n  </tr>\n  <tr class=\"app-transparent-table__row fs-12-sofia-300\" *ngFor=\"let item of data; let i = index\">\n    <td *ngFor=\"let head of heads; let j = index\">\n      <p *ngIf=\"checkType(item[head])==='string'\">\n        {{ item[head] }}\n      </p>\n      <app-text-with-gradient-back \n        [titles]=\"item[head].data\"\n        *ngIf=\"checkType(item[head])==='gradientText'\"\n      >\n      </app-text-with-gradient-back>\n      <img [src]=\"item[head].path\" *ngIf=\"checkType(item[head])==='image'\">\n      <span *ngIf=\"checkType(item[head])=='boolean'\">\n        <app-round-icon\n          [classes]=\"item[head] ? 'app-round-icon app-round-icon__positive' : 'app-round-icon app-round-icon__negative'\"\n          [ngStyle]=\"{'display': 'flex', 'justify-content': 'center'}\"\n        ></app-round-icon>\n      </span>\n    </td>\n  </tr>\n</table>"
        },
        {
            "name": "WhiteRoundedLayoutComponent",
            "id": "component-WhiteRoundedLayoutComponent-1c45bd667f15f7722d47edc1aa332be8",
            "file": "src/app/molecules/layouts/white-rounded-layout/white-rounded-layout.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-white-rounded-layout",
            "styleUrls": [
                "./white-rounded-layout.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./white-rounded-layout.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "titles",
                    "line": 10,
                    "type": "string[]"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-white-rounded-layout',\n  templateUrl: './white-rounded-layout.component.html',\n  styleUrls: ['./white-rounded-layout.component.scss']\n})\n\nexport class WhiteRoundedLayoutComponent {\n  @Input() titles: string[];\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-white-rounded-layout {\n  width: 100%;\n  z-index: 2;\n\n  &__content {\n    width: 100%;\n    position: relative;\n    top: -2px;\n    padding: 32px 30px;\n    border-radius: 0px 20px 20px 20px;\n    background-color: var(--text-color);\n  }\n}",
                    "styleUrl": "./white-rounded-layout.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"app-white-rounded-layout\">\n  <app-tab-menu\n    [titles]=\"titles\"\n  >\n  </app-tab-menu>\n  <div class=\"app-white-rounded-layout__content\">\n    <ng-content></ng-content>\n  </div>\n</div>"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "AddService"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AddComponent"
                        },
                        {
                            "name": "AddDirective"
                        },
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "ApproveModalComponent"
                        },
                        {
                            "name": "CardComponent"
                        },
                        {
                            "name": "CardReportStatusComponent"
                        },
                        {
                            "name": "CardReportsComponent"
                        },
                        {
                            "name": "CardRowComponent"
                        },
                        {
                            "name": "CardWithCenterTextComponent"
                        },
                        {
                            "name": "CardWithColumnsTextComponent"
                        },
                        {
                            "name": "CardWithDonutChartComponent"
                        },
                        {
                            "name": "CheckboxCircleInputComponent"
                        },
                        {
                            "name": "CheckboxInputDarkComponent"
                        },
                        {
                            "name": "CheckboxInputSimpleComponent"
                        },
                        {
                            "name": "CheckboxInputSwitchComponent"
                        },
                        {
                            "name": "CheckboxMutableGradientComponent"
                        },
                        {
                            "name": "ColorPickerComponent"
                        },
                        {
                            "name": "ColumnChartComponent"
                        },
                        {
                            "name": "CompositeMenuComponent"
                        },
                        {
                            "name": "CustomizedElementComponent"
                        },
                        {
                            "name": "DarkAddButtonComponent"
                        },
                        {
                            "name": "DateMenuComponent"
                        },
                        {
                            "name": "DynamicListComponent"
                        },
                        {
                            "name": "DynamicSectionsListComponent"
                        },
                        {
                            "name": "DynamicTableComponent"
                        },
                        {
                            "name": "DynamicTableComponent"
                        },
                        {
                            "name": "DynamicTextComponent"
                        },
                        {
                            "name": "FormScreenFifthComponent"
                        },
                        {
                            "name": "FormScreenFirstComponent"
                        },
                        {
                            "name": "FormScreenFourthComponent"
                        },
                        {
                            "name": "FormScreenSecondComponent"
                        },
                        {
                            "name": "FormScreenThirdComponent"
                        },
                        {
                            "name": "GradientTextComponent"
                        },
                        {
                            "name": "IconContainerComponent"
                        },
                        {
                            "name": "IconLinksComponent"
                        },
                        {
                            "name": "LightAssimetricButtonComponent"
                        },
                        {
                            "name": "LinearChartComponent"
                        },
                        {
                            "name": "MainNavigationMenuComponent"
                        },
                        {
                            "name": "MapChartComponent"
                        },
                        {
                            "name": "MobileButtonComponent"
                        },
                        {
                            "name": "MobileMainNavigationMenuComponent"
                        },
                        {
                            "name": "MutableDangerButtonComponent"
                        },
                        {
                            "name": "MutableGradientIconButtonComponent"
                        },
                        {
                            "name": "MutableLightButtonComponent"
                        },
                        {
                            "name": "MutablePrimaryButtonComponent"
                        },
                        {
                            "name": "OnboardingCardComponent"
                        },
                        {
                            "name": "OnboardingListComponent"
                        },
                        {
                            "name": "RegistrationFormComponent"
                        },
                        {
                            "name": "RollUpComponent"
                        },
                        {
                            "name": "RoundChartComponent"
                        },
                        {
                            "name": "RoundIconComponent"
                        },
                        {
                            "name": "ScanAnimationComponent"
                        },
                        {
                            "name": "ScanReportComponent"
                        },
                        {
                            "name": "ScanScreensComponent"
                        },
                        {
                            "name": "SecondaryBorderButtonComponent"
                        },
                        {
                            "name": "SelectInputSearchComponent"
                        },
                        {
                            "name": "SelectInputSimpleComponent"
                        },
                        {
                            "name": "SelectInputWithInitialValueComponent"
                        },
                        {
                            "name": "SelectedItemComponent"
                        },
                        {
                            "name": "SemicircleChartCardComponent"
                        },
                        {
                            "name": "SemicircleChartComponent"
                        },
                        {
                            "name": "SideMenuComponent"
                        },
                        {
                            "name": "SimpleCounterComponent"
                        },
                        {
                            "name": "SimpleTextareaComponent"
                        },
                        {
                            "name": "SmallLightAddButtonComponent"
                        },
                        {
                            "name": "StatusBarComponent"
                        },
                        {
                            "name": "StatusStepsDynamicComponent"
                        },
                        {
                            "name": "StepsComponent"
                        },
                        {
                            "name": "TabMenuComponent"
                        },
                        {
                            "name": "TextEditorComponent"
                        },
                        {
                            "name": "TextWithAfterGradientLineComponent"
                        },
                        {
                            "name": "TextWithGradientBackComponent"
                        },
                        {
                            "name": "TransparentTableComponent"
                        },
                        {
                            "name": "WhiteRoundedLayoutComponent"
                        },
                        {
                            "name": "formInputComponent"
                        },
                        {
                            "name": "gradientButtonComponent"
                        },
                        {
                            "name": "infoButtonComponent"
                        },
                        {
                            "name": "largeButtonComponent"
                        },
                        {
                            "name": "lightButtonComponent"
                        },
                        {
                            "name": "navLinkComponent"
                        },
                        {
                            "name": "primaryButtonComponent"
                        },
                        {
                            "name": "secondaryButtonComponent"
                        },
                        {
                            "name": "simpleButtonComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "AfricaCodes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/charts/map-chart/countriesCodes.ts",
                "type": "[]",
                "defaultValue": "[\"AO\", \"BF\", \"BI\", \"BJ\", \"BW\", \"CD\", \"CF\", \"CG\", \"CI\", \"CM\", \"CV\", \"DJ\", \"DZ\", \"EG\", \"EH\", \n\"ER\", \"ET\", \"GA\", \"GH\", \"GM\", \"GN\", \"GQ\", \"GW\", \"KE\", \"KM\", \"LR\", \"LS\", \"LY\", \"MA\", \"MG\", \"ML\", \"MR\", \"MU\", \n\"MW\", \"MZ\", \"NA\", \"NE\", \"NG\", \"RE\", \"RW\", \"SC\", \"SD\", \"SH\", \"SL\", \"SN\", \"SO\", \"SS\", \"ST\", \"SZ\", \"TD\", \"TG\", \n\"TN\", \"TZ\", \"UG\", \"YT\", \"ZA\", \"ZM\", \"ZW\"]"
            },
            {
                "name": "AsiaCodes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/charts/map-chart/countriesCodes.ts",
                "type": "[]",
                "defaultValue": "[\"AE\", \"AF\", \"BD\", \"BH\", \"BN\", \"BT\", \"CC\", \"CN\", \"CX\", \"HK\", \"ID\", \"IL\", \"IN\", \"IO\", \"IQ\", \n\"IR\", \"JO\", \"JP\", \"KG\", \"KH\", \"KP\", \"KR\", \"KT\", \"KW\", \"KZ\", \"LA\", \"LB\", \"LK\", \"MM\", \"MN\", \"MO\", \"MV\", \"MY\", \"NP\", \n\"OM\", \"PH\", \"PK\", \"PS\", \"RU\", \"QA\", \"SA\", \"SG\", \"SY\", \"TH\", \"TJ\", \"TL\", \"TM\", \"TW\", \"UZ\", \"VN\", \"YE\"]"
            },
            {
                "name": "AustraliaCodes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/charts/map-chart/countriesCodes.ts",
                "type": "[]",
                "defaultValue": "[\"AS\", \"AU\", \"CK\", \"FJ\", \"FM\", \"GU\", \"KI\", \"MH\", \"MP\", \"NC\", \"NF\", \"NR\", \"NU\", \"NZ\", \n\"PF\", \"PG\", \"PN\", \"PW\", \"SB\", \"TK\", \"TO\", \"TV\", \"UM\", \"VU\", \"WF\", \"WS\"]"
            },
            {
                "name": "Back",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/light-assimetric-button/light-assimetric-button.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Back",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/lightButton/lightButton.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "BigLight",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/add-buttons/small-light-add-button/small-light-add-button.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "CardReports",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/card/card-reports/card-reports.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "CardWithCenterText",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/card/card-with-center-text/card-with-center-text.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "CardWithColumns",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/card/card-with-columns-text/card-with-columns-text.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Circle",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/inputs/checkbox/checkbox-circle-input/checkbox-circle-input.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Circled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/color-picker/color-picker.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Column",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/charts/column-chart/column-chart.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Components",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "CompositeMenu",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/menu/composite-menu/composite-menu.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "test.ts",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "Danger",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/simpleButton/simpleButton.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Danger",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/domains-card-buttons/mutable-danger-button/mutable-danger-button.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "DangerBig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/simpleButton/simpleButton.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Dark",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/simpleButton/simpleButton.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Dark",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/inputs/checkbox/checkbox-input-dark/checkbox-input-dark.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Date",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/menu/date-menu/date-menu.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "defineComponentType",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/organisms/dynamic-sections-list/helpers.ts",
                "type": "",
                "defaultValue": "(name: string) => {\n  switch(name) {\n    case 'DynamicTextComponent':\n      return 'text';\n    case 'DynamicTableComponent': \n      return 'table';\n    case 'DynamicListComponent':\n      return 'list'\n  }\n}"
            },
            {
                "name": "DeskApprove",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/modals/approve-modal/approve-modal.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "DonutChartCard",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/card/card-with-donut-chart/card-with-donut-chart.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Dynamic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/organisms/dynamic-sections-list/dynamic-sections-list.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Dynamic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/tables/dynamic-table/dynamic-table.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Dynamic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/text/dynamic-text/dynamic-text.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "DynamicList",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/tables/dynamic-list/dynamic-list.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "EditOnActive",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/domains-card-buttons/mutable-primary-button/mutable-primary-button.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "type": "object",
                "defaultValue": "{\n  production: false\n}"
            },
            {
                "name": "EuropeCodes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/charts/map-chart/countriesCodes.ts",
                "type": "[]",
                "defaultValue": "[\"AD\", \"AL\", \"AM\", \"AT\", \"AX\", \"AZ\", \"BA\", \"BE\", \"BG\", \"BY\", \"CH\", \"CY\", \"CZ\", \"DE\", \n\"DK\", \"EE\", \"ES\", \"FI\", \"FO\", \"FR\", \"GB\", \"GB-CHA\", \"GE\", \"GG\", \"GI\", \"GR\", \"HR\", \"HU\", \"IE\", \"IM\", \"IS\", \n\"IT\", \"JE\", \"LI\", \"LT\", \"LU\", \"LV\", \"MC\", \"MD\", \"ME\", \"MK\", \"MT\", \"NL\", \"NO\", \"PL\", \"PT\", \"RO\", \"RS\",\n\"SE\", \"SI\", \"SJ\", \"SK\", \"SM\", \"TR\", \"UA\", \"VA\", \"XK\"]"
            },
            {
                "name": "Fifth",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/form-screens/form-screen-fifth/form-screen-fifth.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "First",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/scan-screens/scan-screens.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "First",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/form-screens/form-screen-first/form-screen-first.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "First",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/tables/transparent-table/transparent-table.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "FivePoints",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/status-steps-dynamic/status-steps-dynamic.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "FourPoints",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/status-steps-dynamic/status-steps-dynamic.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Fourth",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/form-screens/form-screen-fourth/form-screen-fourth.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "getEditedDataByType",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/customized-element/helpers.ts",
                "type": "",
                "defaultValue": "(type: string, props: any) => {\n  let editedData;\n    if (type === 'table') {\n      editedData = { heads: props.heads, tableData: props.tableData }\n    } else if (type === 'list') {\n      editedData = { listTitle: props.listTitle, titles: props.titles }\n    } else if (type === 'text') {\n      editedData = { title: props.title }\n    }\n  return editedData\n}"
            },
            {
                "name": "getInitialDataByType",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/customized-element/helpers.ts",
                "type": "",
                "defaultValue": "(type: string) => {\n  let initialData;\n    if (type === 'table') {\n      initialData = { heads: ['text 1'], tableData: [{ 'text 1' : '1.1. Text', }, { 'text 1' : '1.1. Text', }] }\n    } else if (type === 'list') {\n      initialData = { listTitle: 'Put list title', titles: ['Type text here'] }\n    } else if (type === 'text') {\n      initialData = { title: 'Your new paragraph' }\n    }\n  return initialData\n}"
            },
            {
                "name": "Gradient",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/gradientButton/gradientButton.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Gradient",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/domains-card-buttons/mutable-gradient-icon-button/mutable-gradient-icon-button.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Gradient",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/inputs/checkbox/checkbox-mutable-gradient/checkbox-mutable-gradient.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Green",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/status-bar/status-bar.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Green",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/text/gradient-text/gradient-text.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Green",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/text/text-with-after-gradient-line/text-with-after-gradient-line.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Green",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/text/text-with-gradient-back/text-with-gradient-back.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Highlited",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/navLink/textLinks/navLink.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Icon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/navLink/icon-links/icon-links.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Info",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/infoButton/infoButton.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/largeButton/largeButton.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Linear",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/charts/linear-chart/linear-chart.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Main",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/navLink/textLinks/navLink.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Map",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/charts/map-chart/map-chart.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Mobile",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/mobile-button/mobile-button.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "MobileNavigation",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/menu/mobile-main-navigation-menu/mobile-main-navigation-menu.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Navigation",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/menu/main-navigation-menu/main-navigation-menu.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Negative",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/icons/round-icon/round-icon.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "NorthAmericaCodes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/charts/map-chart/countriesCodes.ts",
                "type": "[]",
                "defaultValue": "[\"AG\", \"AI\", \"AW\", \"BB\", \"BL\", \"BM\", \"BQ\", \"BS\", \"BZ\", \"CA\", \"CR\", \"CU\", \"CW\", \n\"DM\", \"DO\", \"GD\", \"GL\", \"GP\", \"GT\", \"HN\", \"HT\", \"JM\", \"KN\", \"KY\", \"LC\", \"MF\", \"MQ\", \"MS\", \"MX\", \"NI\", \"PA\", \n\"PM\", \"PR\", \"SV\", \"SX\", \"TC\", \"TT\", \"US\", \"VC\", \"VG\", \"VI\"]"
            },
            {
                "name": "OnBoarding",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/card/onboarding-card/onboarding-card.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "OnboardingList",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/onboarding-list/onboarding-list.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Options",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/domains-card-buttons/mutable-light-button/mutable-light-button.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Plus",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/lightButton/lightButton.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Positive",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/icons/round-icon/round-icon.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/primaryButton/primaryButton.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/card-row/card-row.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/customized-element/customized-element.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/onboarding-list/onboarding-list.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/scan-screens/scan-screens.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/roll-up/roll-up.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/status-bar/status-bar.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/card/card.stories.ts",
                "type": "object",
                "defaultValue": "{\n  backgroundColor: { control: 'color' },\n  color: { control: 'color' },\n  src: { control: 'text' },\n  title: { control: 'text' },\n  text: { control: 'text' },\n  isActive: { control: 'boolean' }\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/iconContainer/iconContainer.stories.ts",
                "type": "object",
                "defaultValue": "{\n  backgroundColor: { control: 'color' },\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/color-picker/color-picker.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/scan-animation/scan-animation.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/searchItem/searchItem.stories.ts",
                "type": "object",
                "defaultValue": "{\n  title: { control: 'text' },\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/semicircle-chart/semicircle-chart.component.stories.ts",
                "type": "object",
                "defaultValue": "{\n  percent: { control: 'array' },\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/steps/steps.stories.ts",
                "type": "object",
                "defaultValue": "{\n  activePoints: { control: 'number' }\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/status-steps-dynamic/status-steps-dynamic.component.stories.ts",
                "type": "object",
                "defaultValue": "{\n  activePoints: { control: 'number' },\n  background: { control: 'color' }\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/organisms/dynamic-sections-list/dynamic-sections-list.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/organisms/registration-form/registration-form.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/organisms/scan-report/scan-report.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/layouts/white-rounded-layout/white-rounded-layout.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/form-screens/form-screen-first/form-screen-first.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/form-screens/form-screen-fifth/form-screen-fifth.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/form-screens/form-screen-fourth/form-screen-fourth.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/form-screens/form-screen-third/form-screen-third.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/menu/composite-menu/composite-menu.stories.ts",
                "type": "object",
                "defaultValue": "{\n  items: { control: 'object' }\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/form-screens/form-screen-second/form-screen-second.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/menu/side-menu/side-menu.stories.ts",
                "type": "object",
                "defaultValue": "{\n  backgroundColor: { control: 'color' },\n  items: { control: 'array' }\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/menu/date-menu/date-menu.stories.ts",
                "type": "object",
                "defaultValue": "{\n  backgroundColor: { control: 'color' },\n  items: { control: 'array' }\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/menu/main-navigation-menu/main-navigation-menu.component.stories.ts",
                "type": "object",
                "defaultValue": "{\n  backgroundColor: { control: 'color' },\n  items: { control: 'array' }\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/menu/tab-menu/tab-menu.component.stories.ts",
                "type": "object",
                "defaultValue": "{\n  items: { control: 'object' }\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/menu/mobile-main-navigation-menu/mobile-main-navigation-menu.component.stories.ts",
                "type": "object",
                "defaultValue": "{\n  items: { control: 'object' }\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/gradientButton/gradientButton.stories.ts",
                "type": "object",
                "defaultValue": "{\n  title: { control: 'text' },\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/infoButton/infoButton.stories.ts",
                "type": "object",
                "defaultValue": "{\n  backgroundColor: { control: 'color' },\n  color: { control: 'color' },\n  title: { control: 'text' },\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/light-assimetric-button/light-assimetric-button.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/mobile-button/mobile-button.component.stories.ts",
                "type": "object",
                "defaultValue": "{\n  isOpen: { control: 'boolean' }\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/lightButton/lightButton.stories.ts",
                "type": "object",
                "defaultValue": "{\n  backgroundColor: { control: 'color' }\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/largeButton/largeButton.stories.ts",
                "type": "object",
                "defaultValue": "{\n  backgroundColor: { control: 'color' },\n  color: { control: 'color' },\n  title: { control: 'text' },\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/primaryButton/primaryButton.stories.ts",
                "type": "object",
                "defaultValue": "{\n  backgroundColor: { control: 'color' },\n  title: { control: 'text' },\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/secondary-border-button/secondary-border-button.component.stories.ts",
                "type": "object",
                "defaultValue": "{\n  backgroundColor: { control: 'color' },\n  color: { control: 'color' },\n  title: { control: 'text' },\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/simpleButton/simpleButton.stories.ts",
                "type": "object",
                "defaultValue": "{\n  backgroundColor: { control: 'color' },\n  color: { control: 'color' },\n  title: { control: 'text' },\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/card/card-report-status/card-report-status.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/secondaryButton/secondaryButton.stories.ts",
                "type": "object",
                "defaultValue": "{\n  backgroundColor: { control: 'color' },\n  color: { control: 'color' },\n  title: { control: 'text' },\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/card/card-reports/card-reports.component.stories.ts",
                "type": "object",
                "defaultValue": "{\n  title: { control: 'text' },\n  value: { control: 'text' },\n  text: { control: 'text' },\n  iconSrc: { control: 'text' }\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/card/card-with-center-text/card-with-center-text.component.stories.ts",
                "type": "object",
                "defaultValue": "{\n  title: { control: 'text' },\n  value: { control: 'text' },\n  text: { control: 'text' },\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/card/card-with-columns-text/card-with-columns-text.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/card/card-with-donut-chart/card-with-donut-chart.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/card/onboarding-card/onboarding-card.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/card/semicircle-chart-card/semicircle-chart-card.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/charts/linear-chart/linear-chart.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/charts/column-chart/column-chart.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/charts/map-chart/map-chart.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/charts/round-chart/round-chart.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/counters/simple-counter/simple-counter.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/filter-components/selected-item/selected-item.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/icons/round-icon/round-icon.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/inputs/formInput/formInput.stories.ts",
                "type": "object",
                "defaultValue": "{\n  placeholder: { control: 'text' },\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/modals/approve-modal/approve-modal.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/navLink/icon-links/icon-links.component.stories.ts",
                "type": "object",
                "defaultValue": "{\n  title: { control: 'text' },\n  isActive: { control: 'boolean' }\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/navLink/textLinks/navLink.stories.ts",
                "type": "object",
                "defaultValue": "{\n  title: { control: 'text' },\n  isActive: { control: 'boolean' }\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/tables/dynamic-list/dynamic-list.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/tables/dynamic-table/dynamic-table.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/tables/transparent-table/transparent-table.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/text/dynamic-text/dynamic-text.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/text/gradient-text/gradient-text.component.stories.ts",
                "type": "object",
                "defaultValue": "{\n  title: { control: 'text' },\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/text/text-with-after-gradient-line/text-with-after-gradient-line.component.stories.ts",
                "type": "object",
                "defaultValue": "{\n  title: { control: 'text' },\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/text/text-with-gradient-back/text-with-gradient-back.component.stories.ts",
                "type": "object",
                "defaultValue": "{\n  titles: { control: 'array' },\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/add-buttons/dark-add-button/dark-add-button.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/add-buttons/small-light-add-button/small-light-add-button.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/domains-card-buttons/mutable-danger-button/mutable-danger-button.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/domains-card-buttons/mutable-gradient-icon-button/mutable-gradient-icon-button.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/domains-card-buttons/mutable-light-button/mutable-light-button.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/domains-card-buttons/mutable-primary-button/mutable-primary-button.component.stories.ts",
                "type": "object",
                "defaultValue": "{\n  onActive: { control: 'boolean' }\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/inputs/checkbox/checkbox-circle-input/checkbox-circle-input.component.stories.ts",
                "type": "object",
                "defaultValue": "{\n  isChecked: { control: 'boolean' },\n  title: { control: 'text' }\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/inputs/checkbox/checkbox-input-dark/checkbox-input-dark.component.stories.ts",
                "type": "object",
                "defaultValue": "{\n  isChecked: { control: 'boolean' },\n  title: { control: 'text' }\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/inputs/checkbox/checkbox-input-simple/checkbox-input-simple.stories.ts",
                "type": "object",
                "defaultValue": "{\n  isChecked: { control: 'boolean' },\n  title: { control: 'text' }\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/inputs/checkbox/checkbox-input-switch/checkbox-input-switch.stories.ts",
                "type": "object",
                "defaultValue": "{\n  isChecked: { control: 'boolean' },\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/inputs/checkbox/checkbox-mutable-gradient/checkbox-mutable-gradient.component.stories.ts",
                "type": "object",
                "defaultValue": "{\n  isChecked: { control: 'boolean' },\n  onActive: { control: 'boolean' },\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/inputs/select-input/select-input-search/select-input-search.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/inputs/select-input/select-input-simple/select-input-simple.stories.ts",
                "type": "object",
                "defaultValue": "{\n  initialValue: { control: 'text' },\n  items: { control: 'array' }\n}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/inputs/textarea/simple-textarea/simple-textarea.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "props",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/inputs/select-input/select-input-with-initial-value/select-input-with-initial-value.component.stories.ts",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "RegistrationForm",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/organisms/registration-form/registration-form.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Reports",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/domains-card-buttons/mutable-primary-button/mutable-primary-button.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "ReportStatus",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/card/card-report-status/card-report-status.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "test.ts",
                "type": "literal type"
            },
            {
                "name": "Round",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/charts/round-chart/round-chart.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Row",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/card-row/card-row.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Scan",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/scan-animation/scan-animation.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "ScanReport",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/organisms/scan-report/scan-report.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Search",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/inputs/select-input/select-input-search/select-input-search.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SearchIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/inputs/select-input/select-input-search/select-input-search.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Second",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/form-screens/form-screen-second/form-screen-second.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Second",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/tables/transparent-table/transparent-table.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/secondaryButton/secondaryButton.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/navLink/textLinks/navLink.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Semicirce",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/semicircle-chart/semicircle-chart.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SemicircleChart",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/card/semicircle-chart-card/semicircle-chart-card.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Side",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/menu/side-menu/side-menu.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/customized-element/customized-element.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/card/card.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/iconContainer/iconContainer.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/searchItem/searchItem.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/steps/steps.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/counters/simple-counter/simple-counter.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/filter-components/selected-item/selected-item.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/inputs/checkbox/checkbox-input-simple/checkbox-input-simple.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/inputs/select-input/select-input-simple/select-input-simple.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SmallDark",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/add-buttons/dark-add-button/dark-add-button.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SmallLight",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/add-buttons/small-light-add-button/small-light-add-button.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SouthAmericaCodes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/charts/map-chart/countriesCodes.ts",
                "type": "[]",
                "defaultValue": "[\"AR\", \"BO\", \"BR\", \"CL\", \"CO\", \"EC\", \"FK\", \"GF\", \"GY\", \"PE\", \"PY\", \"SR\", \"UY\", \"VE\"]"
            },
            {
                "name": "Success",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/simpleButton/simpleButton.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SuccessAsimetric",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/simpleButton/simpleButton.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SuccessAsimetricWithIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/simpleButton/simpleButton.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SuccessBig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/simpleButton/simpleButton.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Switch",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/inputs/checkbox/checkbox-input-switch/checkbox-input-switch.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Tab",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/menu/tab-menu/tab-menu.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.component.stories.ts",
                "type": "Story<AppComponent>",
                "defaultValue": "(args: AppComponent) => ({\n  component: AppComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/card-row/card-row.component.stories.ts",
                "type": "Story<CardRowComponent>",
                "defaultValue": "(args: CardRowComponent) => ({\n  component: CardRowComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/customized-element/customized-element.component.stories.ts",
                "type": "Story<CustomizedElementComponent>",
                "defaultValue": "(args: CustomizedElementComponent) => ({\n  component: CustomizedElementComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/onboarding-list/onboarding-list.component.stories.ts",
                "type": "Story<OnboardingListComponent>",
                "defaultValue": "(args: OnboardingListComponent) => ({\n  component: OnboardingListComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/scan-screens/scan-screens.component.stories.ts",
                "type": "Story<ScanScreensComponent>",
                "defaultValue": "(args: ScanScreensComponent) => ({\n  component: ScanScreensComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/roll-up/roll-up.component.stories.ts",
                "type": "Story<RollUpComponent>",
                "defaultValue": "(args: RollUpComponent) => ({\n  component: RollUpComponent,\n  props: args,\n  template: `\n  <app-roll-up [title]=\"title\" [number]=\"number\">\n    <app-transparent-table \n      [mainColumn]=\"mainColumn\"\n      [data]=\"data\"\n      [heads]=\"heads\"\n    >\n      </app-transparent-table>\n  </app-roll-up>\n  `,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/status-bar/status-bar.component.stories.ts",
                "type": "Story<StatusBarComponent>",
                "defaultValue": "(args: StatusBarComponent) => ({\n  component: StatusBarComponent,\n  props: args\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/card/card.stories.ts",
                "type": "Story<CardComponent>",
                "defaultValue": "(args: CardComponent) => ({\n  component: CardComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/iconContainer/iconContainer.stories.ts",
                "type": "Story<IconContainerComponent>",
                "defaultValue": "(args: IconContainerComponent) => ({\n  component: IconContainerComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/color-picker/color-picker.component.stories.ts",
                "type": "Story<ColorPickerComponent>",
                "defaultValue": "(args: ColorPickerComponent) => ({\n  component: ColorPickerComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/scan-animation/scan-animation.component.stories.ts",
                "type": "Story<ScanAnimationComponent>",
                "defaultValue": "(args: ScanAnimationComponent) => ({\n  component: ScanAnimationComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/searchItem/searchItem.stories.ts",
                "type": "Story<searchItemComponent>",
                "defaultValue": "(args: searchItemComponent) => ({\n  component: searchItemComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/semicircle-chart/semicircle-chart.component.stories.ts",
                "type": "Story<SemicircleChartComponent>",
                "defaultValue": "(args: SemicircleChartComponent) => ({\n  component: SemicircleChartComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/steps/steps.stories.ts",
                "type": "Story<StepsComponent>",
                "defaultValue": "(args: StepsComponent) => ({\n  component: StepsComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/status-steps-dynamic/status-steps-dynamic.component.stories.ts",
                "type": "Story<StatusStepsDynamicComponent>",
                "defaultValue": "(args: StatusStepsDynamicComponent) => ({\n  component: StatusStepsDynamicComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/organisms/dynamic-sections-list/dynamic-sections-list.component.stories.ts",
                "type": "Story<DynamicSectionsListComponent>",
                "defaultValue": "(args: DynamicSectionsListComponent) => ({\n  component: DynamicSectionsListComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/organisms/registration-form/registration-form.stories.ts",
                "type": "Story<RegistrationFormComponent>",
                "defaultValue": "(args: RegistrationFormComponent) => ({\n  component: RegistrationFormComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/organisms/scan-report/scan-report.component.stories.ts",
                "type": "Story<ScanReportComponent>",
                "defaultValue": "(args: ScanReportComponent) => ({\n  component: ScanReportComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/layouts/white-rounded-layout/white-rounded-layout.component.stories.ts",
                "type": "Story<WhiteRoundedLayoutComponent>",
                "defaultValue": "(args: WhiteRoundedLayoutComponent) => ({\n  component: WhiteRoundedLayoutComponent,\n  props: args,\n  template: `\n  <app-white-rounded-layout [titles]=\"titles\">\n    <app-text-with-after-gradient-line [title]=\"'scan report'\"></app-text-with-after-gradient-line>\n  </app-white-rounded-layout>\n  `,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/form-screens/form-screen-first/form-screen-first.stories.ts",
                "type": "Story<FormScreenFirstComponent>",
                "defaultValue": "(args: FormScreenFirstComponent) => ({\n  component: FormScreenFirstComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/form-screens/form-screen-fifth/form-screen-fifth.stories.ts",
                "type": "Story<FormScreenFifthComponent>",
                "defaultValue": "(args: FormScreenFifthComponent) => ({\n    component: FormScreenFifthComponent,\n    props: args,\n  })"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/form-screens/form-screen-fourth/form-screen-fourth.stories.ts",
                "type": "Story<FormScreenFourthComponent>",
                "defaultValue": "(args: FormScreenFourthComponent) => ({\n  component: FormScreenFourthComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/form-screens/form-screen-third/form-screen-third.stories.ts",
                "type": "Story<FormScreenThirdComponent>",
                "defaultValue": "(args: FormScreenThirdComponent) => ({\n  component: FormScreenThirdComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/menu/composite-menu/composite-menu.stories.ts",
                "type": "Story<CompositeMenuComponent>",
                "defaultValue": "(args: CompositeMenuComponent) => ({\n  component: CompositeMenuComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/form-screens/form-screen-second/form-screen-second.stories.ts",
                "type": "Story<FormScreenSecondComponent>",
                "defaultValue": "(args: FormScreenSecondComponent) => ({\n  component: FormScreenSecondComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/menu/side-menu/side-menu.stories.ts",
                "type": "Story<SideMenuComponent>",
                "defaultValue": "(args: SideMenuComponent) => ({\n  component: SideMenuComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/menu/date-menu/date-menu.stories.ts",
                "type": "Story<DateMenuComponent>",
                "defaultValue": "(args: DateMenuComponent) => ({\n  component: DateMenuComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/menu/main-navigation-menu/main-navigation-menu.component.stories.ts",
                "type": "Story<MainNavigationMenuComponent>",
                "defaultValue": "(args: MainNavigationMenuComponent) => ({\n  component: MainNavigationMenuComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/menu/tab-menu/tab-menu.component.stories.ts",
                "type": "Story<TabMenuComponent>",
                "defaultValue": "(args: TabMenuComponent) => ({\n  component: TabMenuComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/menu/mobile-main-navigation-menu/mobile-main-navigation-menu.component.stories.ts",
                "type": "Story<MobileMainNavigationMenuComponent>",
                "defaultValue": "(args: MobileMainNavigationMenuComponent) => ({\n  component: MobileMainNavigationMenuComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/gradientButton/gradientButton.stories.ts",
                "type": "Story<gradientButtonComponent>",
                "defaultValue": "(args: gradientButtonComponent) => ({\n  component: gradientButtonComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/infoButton/infoButton.stories.ts",
                "type": "Story<infoButtonComponent>",
                "defaultValue": "(args: infoButtonComponent) => ({\n  component: infoButtonComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/light-assimetric-button/light-assimetric-button.component.stories.ts",
                "type": "Story<LightAssimetricButtonComponent>",
                "defaultValue": "(args: LightAssimetricButtonComponent) => ({\n  component: LightAssimetricButtonComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/mobile-button/mobile-button.component.stories.ts",
                "type": "Story<MobileButtonComponent>",
                "defaultValue": "(args: MobileButtonComponent) => ({\n  component: MobileButtonComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/lightButton/lightButton.stories.ts",
                "type": "Story<lightButtonComponent>",
                "defaultValue": "(args: lightButtonComponent) => ({\n  component: lightButtonComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/largeButton/largeButton.stories.ts",
                "type": "Story<largeButtonComponent>",
                "defaultValue": "(args: largeButtonComponent) => ({\n  component: largeButtonComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/primaryButton/primaryButton.stories.ts",
                "type": "Story<primaryButtonComponent>",
                "defaultValue": "(args: primaryButtonComponent) => ({\n  component: primaryButtonComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/secondary-border-button/secondary-border-button.component.stories.ts",
                "type": "Story<SecondaryBorderButtonComponent>",
                "defaultValue": "(args: SecondaryBorderButtonComponent) => ({\n  component: SecondaryBorderButtonComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/simpleButton/simpleButton.stories.ts",
                "type": "Story<simpleButtonComponent>",
                "defaultValue": "(args: simpleButtonComponent) => ({\n  component: simpleButtonComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/card/card-report-status/card-report-status.component.stories.ts",
                "type": "Story<CardReportStatusComponent>",
                "defaultValue": "(args: CardReportStatusComponent) => ({\n  component: CardReportStatusComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/secondaryButton/secondaryButton.stories.ts",
                "type": "Story<secondaryButtonComponent>",
                "defaultValue": "(args: secondaryButtonComponent) => ({\n  component: secondaryButtonComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/card/card-reports/card-reports.component.stories.ts",
                "type": "Story<CardReportsComponent>",
                "defaultValue": "(args: CardReportsComponent) => ({\n  component: CardReportsComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/card/card-with-center-text/card-with-center-text.component.stories.ts",
                "type": "Story<CardWithCenterTextComponent>",
                "defaultValue": "(args: CardWithCenterTextComponent) => ({\n  component: CardWithCenterTextComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/card/card-with-columns-text/card-with-columns-text.component.stories.ts",
                "type": "Story<CardWithColumnsTextComponent>",
                "defaultValue": "(args: CardWithColumnsTextComponent) => ({\n  component: CardWithColumnsTextComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/card/card-with-donut-chart/card-with-donut-chart.component.stories.ts",
                "type": "Story<CardWithDonutChartComponent>",
                "defaultValue": "(args: CardWithDonutChartComponent) => ({\n  component: CardWithDonutChartComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/card/onboarding-card/onboarding-card.component.stories.ts",
                "type": "Story<OnboardingCardComponent>",
                "defaultValue": "(args: OnboardingCardComponent) => ({\n  component: OnboardingCardComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/card/semicircle-chart-card/semicircle-chart-card.component.stories.ts",
                "type": "Story<SemicircleChartCardComponent>",
                "defaultValue": "(args: SemicircleChartCardComponent) => ({\n  component: SemicircleChartCardComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/charts/linear-chart/linear-chart.component.stories.ts",
                "type": "Story<LinearChartComponent>",
                "defaultValue": "(args: LinearChartComponent) => ({\n  component: LinearChartComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/charts/column-chart/column-chart.component.stories.ts",
                "type": "Story<ColumnChartComponent>",
                "defaultValue": "(args: ColumnChartComponent) => ({\n  component: ColumnChartComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/charts/map-chart/map-chart.component.stories.ts",
                "type": "Story<MapChartComponent>",
                "defaultValue": "(args: MapChartComponent) => ({\n  component: MapChartComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/charts/round-chart/round-chart.component.stories.ts",
                "type": "Story<RoundChartComponent>",
                "defaultValue": "(args: RoundChartComponent) => ({\n  component: RoundChartComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/counters/simple-counter/simple-counter.component.stories.ts",
                "type": "Story<SimpleCounterComponent>",
                "defaultValue": "(args: SimpleCounterComponent) => ({\n  component: SimpleCounterComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/filter-components/selected-item/selected-item.component.stories.ts",
                "type": "Story<SelectedItemComponent>",
                "defaultValue": "(args: SelectedItemComponent) => ({\n  component: SelectedItemComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/icons/round-icon/round-icon.component.stories.ts",
                "type": "Story<RoundIconComponent>",
                "defaultValue": "(args: RoundIconComponent) => ({\n  component: RoundIconComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/inputs/formInput/formInput.stories.ts",
                "type": "Story<formInputComponent>",
                "defaultValue": "(args: formInputComponent) => ({\n  component: formInputComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/modals/approve-modal/approve-modal.component.stories.ts",
                "type": "Story<ApproveModalComponent>",
                "defaultValue": "(args: ApproveModalComponent) => ({\n  component: ApproveModalComponent,\n  props: args,\n  template: `\n  <app-approve-modal \n    [title]=\"title\" \n    [primaryButtonTitle]=\"primaryButtonTitle\"\n    [dangerButtonTitle]=\"dangerButtonTitle\"\n    (primaryButtonFunction)=\"primaryButtonFunction()\"\n    (dangerButtonFunction)=\"dangerButtonFunction()\"\n    (closeModal)=\"closeModal()\"\n  >\n    <p class=\"fs-16-sofia-300\">Do you really want to delete the <strong>Secure Privacy</strong></p>\n  </app-approve-modal>\n  `,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/navLink/icon-links/icon-links.component.stories.ts",
                "type": "Story<IconLinksComponent>",
                "defaultValue": "(args: IconLinksComponent) => ({\n  component: IconLinksComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/navLink/textLinks/navLink.stories.ts",
                "type": "Story<navLinkComponent>",
                "defaultValue": "(args: navLinkComponent) => ({\n  component: navLinkComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/tables/dynamic-list/dynamic-list.component.stories.ts",
                "type": "Story<DynamicListComponent>",
                "defaultValue": "(args: DynamicListComponent) => ({\n  component: DynamicListComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/tables/dynamic-table/dynamic-table.component.stories.ts",
                "type": "Story<DynamicTableComponent>",
                "defaultValue": "(args: DynamicTableComponent) => ({\n  component: DynamicTableComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/tables/transparent-table/transparent-table.component.stories.ts",
                "type": "Story<TransparentTableComponent>",
                "defaultValue": "(args: TransparentTableComponent) => ({\n  component: TransparentTableComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/text/dynamic-text/dynamic-text.component.stories.ts",
                "type": "Story<DynamicTextComponent>",
                "defaultValue": "(args: DynamicTextComponent) => ({\n  component: DynamicTextComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/text/gradient-text/gradient-text.component.stories.ts",
                "type": "Story<GradientTextComponent>",
                "defaultValue": "(args: GradientTextComponent) => ({\n  component: GradientTextComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/text/text-with-after-gradient-line/text-with-after-gradient-line.component.stories.ts",
                "type": "Story<TextWithAfterGradientLineComponent>",
                "defaultValue": "(args: TextWithAfterGradientLineComponent) => ({\n  component: TextWithAfterGradientLineComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/text/text-with-gradient-back/text-with-gradient-back.component.stories.ts",
                "type": "Story<TextWithGradientBackComponent>",
                "defaultValue": "(args: TextWithGradientBackComponent) => ({\n  component: TextWithGradientBackComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/add-buttons/dark-add-button/dark-add-button.component.stories.ts",
                "type": "Story<DarkAddButtonComponent>",
                "defaultValue": "(args: DarkAddButtonComponent) => ({\n  component: DarkAddButtonComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/add-buttons/small-light-add-button/small-light-add-button.component.stories.ts",
                "type": "Story<SmallLightAddButtonComponent>",
                "defaultValue": "(args: SmallLightAddButtonComponent) => ({\n  component: SmallLightAddButtonComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/domains-card-buttons/mutable-danger-button/mutable-danger-button.component.stories.ts",
                "type": "Story<MutableDangerButtonComponent>",
                "defaultValue": "(args: MutableDangerButtonComponent) => ({\n  component: MutableDangerButtonComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/domains-card-buttons/mutable-gradient-icon-button/mutable-gradient-icon-button.component.stories.ts",
                "type": "Story<MutableGradientIconButtonComponent>",
                "defaultValue": "(args: MutableGradientIconButtonComponent) => ({\n  component: MutableGradientIconButtonComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/domains-card-buttons/mutable-light-button/mutable-light-button.component.stories.ts",
                "type": "Story<MutableLightButtonComponent>",
                "defaultValue": "(args: MutableLightButtonComponent) => ({\n  component: MutableLightButtonComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/domains-card-buttons/mutable-primary-button/mutable-primary-button.component.stories.ts",
                "type": "Story<MutablePrimaryButtonComponent>",
                "defaultValue": "(args: MutablePrimaryButtonComponent) => ({\n  component: MutablePrimaryButtonComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/inputs/checkbox/checkbox-circle-input/checkbox-circle-input.component.stories.ts",
                "type": "Story<CheckboxCircleInputComponent>",
                "defaultValue": "(args: CheckboxCircleInputComponent) => ({\n  component: CheckboxCircleInputComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/inputs/checkbox/checkbox-input-dark/checkbox-input-dark.component.stories.ts",
                "type": "Story<CheckboxInputDarkComponent>",
                "defaultValue": "(args: CheckboxInputDarkComponent) => ({\n  component: CheckboxInputDarkComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/inputs/checkbox/checkbox-input-simple/checkbox-input-simple.stories.ts",
                "type": "Story<CheckboxInputSimpleComponent>",
                "defaultValue": "(args: CheckboxInputSimpleComponent) => ({\n  component: CheckboxInputSimpleComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/inputs/checkbox/checkbox-input-switch/checkbox-input-switch.stories.ts",
                "type": "Story<CheckboxInputSwitchComponent>",
                "defaultValue": "(args: CheckboxInputSwitchComponent) => ({\n  component: CheckboxInputSwitchComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/inputs/checkbox/checkbox-mutable-gradient/checkbox-mutable-gradient.component.stories.ts",
                "type": "Story<CheckboxMutableGradientComponent>",
                "defaultValue": "(args: CheckboxMutableGradientComponent) => ({\n  component: CheckboxMutableGradientComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/inputs/select-input/select-input-search/select-input-search.component.stories.ts",
                "type": "Story<SelectInputSearchComponent>",
                "defaultValue": "(args: SelectInputSearchComponent) => ({\n  component: SelectInputSearchComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/inputs/select-input/select-input-simple/select-input-simple.stories.ts",
                "type": "Story<SelectInputSimpleComponent>",
                "defaultValue": "(args: SelectInputSimpleComponent) => ({\n  component: SelectInputSimpleComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/inputs/textarea/simple-textarea/simple-textarea.component.stories.ts",
                "type": "Story<SimpleTextareaComponent>",
                "defaultValue": "(args: SimpleTextareaComponent) => ({\n  component: SimpleTextareaComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/inputs/select-input/select-input-with-initial-value/select-input-with-initial-value.component.stories.ts",
                "type": "Story<SelectInputWithInitialValueComponent>",
                "defaultValue": "(args: SelectInputWithInitialValueComponent) => ({\n  component: SelectInputWithInitialValueComponent,\n  props: args,\n})"
            },
            {
                "name": "text",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/organisms/dynamic-sections-list/dynamic-sections-list.component.stories.ts",
                "type": "",
                "defaultValue": "`For the purpose of this Privacy Policy, we are a Data Controller of your personal information. \nOur legal basis for collecting and using your personal information, as described in this Privacy Policy, \ndepends on the information we collect and the specific context in which we collect it. We may process your\npersonal information because:`"
            },
            {
                "name": "Text",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/inputs/formInput/formInput.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Textarea",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/inputs/textarea/simple-textarea/simple-textarea.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Third",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/form-screens/form-screen-third/form-screen-third.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "ThreePoints",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/status-steps-dynamic/status-steps-dynamic.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Transparent",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/simpleButton/simpleButton.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "WhiteRounded",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/layouts/white-rounded-layout/white-rounded-layout.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "withBoldText",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/icons/round-icon/round-icon.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "withBoldTextAndLink",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/icons/round-icon/round-icon.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "WithIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/searchItem/searchItem.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "WithInitialValue",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/inputs/select-input/select-input-with-initial-value/select-input-with-initial-value.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "WithTable",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/molecules/roll-up/roll-up.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "WithText",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/status-steps-dynamic/status-steps-dynamic.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "ZoomIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/secondary-border-button/secondary-border-button.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "ZoomOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/atoms/buttons/secondary-border-button/secondary-border-button.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            }
        ],
        "functions": [
            {
                "name": "detectClasses",
                "file": "src/app/atoms/steps/helpers.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "description": "",
                "args": [
                    {
                        "name": "num"
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "num",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "detectClasses",
                "file": "src/app/atoms/status-steps-dynamic/helpers.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "description": "",
                "args": [
                    {
                        "name": "total"
                    },
                    {
                        "name": "active"
                    },
                    {
                        "name": "list"
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "total",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "active",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "list",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "getRandomColor",
                "file": "src/app/atoms/charts/column-chart/helpers.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "description": "",
                "args": []
            },
            {
                "name": "getRandomColor",
                "file": "src/app/atoms/charts/round-chart/helpers.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "description": "",
                "args": []
            }
        ],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/app/atoms/charts/map-chart/countriesCodes.ts": [
                {
                    "name": "AfricaCodes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/charts/map-chart/countriesCodes.ts",
                    "type": "[]",
                    "defaultValue": "[\"AO\", \"BF\", \"BI\", \"BJ\", \"BW\", \"CD\", \"CF\", \"CG\", \"CI\", \"CM\", \"CV\", \"DJ\", \"DZ\", \"EG\", \"EH\", \n\"ER\", \"ET\", \"GA\", \"GH\", \"GM\", \"GN\", \"GQ\", \"GW\", \"KE\", \"KM\", \"LR\", \"LS\", \"LY\", \"MA\", \"MG\", \"ML\", \"MR\", \"MU\", \n\"MW\", \"MZ\", \"NA\", \"NE\", \"NG\", \"RE\", \"RW\", \"SC\", \"SD\", \"SH\", \"SL\", \"SN\", \"SO\", \"SS\", \"ST\", \"SZ\", \"TD\", \"TG\", \n\"TN\", \"TZ\", \"UG\", \"YT\", \"ZA\", \"ZM\", \"ZW\"]"
                },
                {
                    "name": "AsiaCodes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/charts/map-chart/countriesCodes.ts",
                    "type": "[]",
                    "defaultValue": "[\"AE\", \"AF\", \"BD\", \"BH\", \"BN\", \"BT\", \"CC\", \"CN\", \"CX\", \"HK\", \"ID\", \"IL\", \"IN\", \"IO\", \"IQ\", \n\"IR\", \"JO\", \"JP\", \"KG\", \"KH\", \"KP\", \"KR\", \"KT\", \"KW\", \"KZ\", \"LA\", \"LB\", \"LK\", \"MM\", \"MN\", \"MO\", \"MV\", \"MY\", \"NP\", \n\"OM\", \"PH\", \"PK\", \"PS\", \"RU\", \"QA\", \"SA\", \"SG\", \"SY\", \"TH\", \"TJ\", \"TL\", \"TM\", \"TW\", \"UZ\", \"VN\", \"YE\"]"
                },
                {
                    "name": "AustraliaCodes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/charts/map-chart/countriesCodes.ts",
                    "type": "[]",
                    "defaultValue": "[\"AS\", \"AU\", \"CK\", \"FJ\", \"FM\", \"GU\", \"KI\", \"MH\", \"MP\", \"NC\", \"NF\", \"NR\", \"NU\", \"NZ\", \n\"PF\", \"PG\", \"PN\", \"PW\", \"SB\", \"TK\", \"TO\", \"TV\", \"UM\", \"VU\", \"WF\", \"WS\"]"
                },
                {
                    "name": "EuropeCodes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/charts/map-chart/countriesCodes.ts",
                    "type": "[]",
                    "defaultValue": "[\"AD\", \"AL\", \"AM\", \"AT\", \"AX\", \"AZ\", \"BA\", \"BE\", \"BG\", \"BY\", \"CH\", \"CY\", \"CZ\", \"DE\", \n\"DK\", \"EE\", \"ES\", \"FI\", \"FO\", \"FR\", \"GB\", \"GB-CHA\", \"GE\", \"GG\", \"GI\", \"GR\", \"HR\", \"HU\", \"IE\", \"IM\", \"IS\", \n\"IT\", \"JE\", \"LI\", \"LT\", \"LU\", \"LV\", \"MC\", \"MD\", \"ME\", \"MK\", \"MT\", \"NL\", \"NO\", \"PL\", \"PT\", \"RO\", \"RS\",\n\"SE\", \"SI\", \"SJ\", \"SK\", \"SM\", \"TR\", \"UA\", \"VA\", \"XK\"]"
                },
                {
                    "name": "NorthAmericaCodes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/charts/map-chart/countriesCodes.ts",
                    "type": "[]",
                    "defaultValue": "[\"AG\", \"AI\", \"AW\", \"BB\", \"BL\", \"BM\", \"BQ\", \"BS\", \"BZ\", \"CA\", \"CR\", \"CU\", \"CW\", \n\"DM\", \"DO\", \"GD\", \"GL\", \"GP\", \"GT\", \"HN\", \"HT\", \"JM\", \"KN\", \"KY\", \"LC\", \"MF\", \"MQ\", \"MS\", \"MX\", \"NI\", \"PA\", \n\"PM\", \"PR\", \"SV\", \"SX\", \"TC\", \"TT\", \"US\", \"VC\", \"VG\", \"VI\"]"
                },
                {
                    "name": "SouthAmericaCodes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/charts/map-chart/countriesCodes.ts",
                    "type": "[]",
                    "defaultValue": "[\"AR\", \"BO\", \"BR\", \"CL\", \"CO\", \"EC\", \"FK\", \"GF\", \"GY\", \"PE\", \"PY\", \"SR\", \"UY\", \"VE\"]"
                }
            ],
            "src/app/atoms/buttons/light-assimetric-button/light-assimetric-button.component.stories.ts": [
                {
                    "name": "Back",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/light-assimetric-button/light-assimetric-button.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/light-assimetric-button/light-assimetric-button.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/light-assimetric-button/light-assimetric-button.component.stories.ts",
                    "type": "Story<LightAssimetricButtonComponent>",
                    "defaultValue": "(args: LightAssimetricButtonComponent) => ({\n  component: LightAssimetricButtonComponent,\n  props: args,\n})"
                }
            ],
            "src/app/atoms/buttons/lightButton/lightButton.stories.ts": [
                {
                    "name": "Back",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/lightButton/lightButton.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Plus",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/lightButton/lightButton.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/lightButton/lightButton.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  backgroundColor: { control: 'color' }\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/lightButton/lightButton.stories.ts",
                    "type": "Story<lightButtonComponent>",
                    "defaultValue": "(args: lightButtonComponent) => ({\n  component: lightButtonComponent,\n  props: args,\n})"
                }
            ],
            "src/app/atoms/buttons/add-buttons/small-light-add-button/small-light-add-button.component.stories.ts": [
                {
                    "name": "BigLight",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/add-buttons/small-light-add-button/small-light-add-button.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/add-buttons/small-light-add-button/small-light-add-button.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "SmallLight",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/add-buttons/small-light-add-button/small-light-add-button.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/add-buttons/small-light-add-button/small-light-add-button.component.stories.ts",
                    "type": "Story<SmallLightAddButtonComponent>",
                    "defaultValue": "(args: SmallLightAddButtonComponent) => ({\n  component: SmallLightAddButtonComponent,\n  props: args,\n})"
                }
            ],
            "src/app/atoms/card/card-reports/card-reports.component.stories.ts": [
                {
                    "name": "CardReports",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/card/card-reports/card-reports.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/card/card-reports/card-reports.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  title: { control: 'text' },\n  value: { control: 'text' },\n  text: { control: 'text' },\n  iconSrc: { control: 'text' }\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/card/card-reports/card-reports.component.stories.ts",
                    "type": "Story<CardReportsComponent>",
                    "defaultValue": "(args: CardReportsComponent) => ({\n  component: CardReportsComponent,\n  props: args,\n})"
                }
            ],
            "src/app/atoms/card/card-with-center-text/card-with-center-text.component.stories.ts": [
                {
                    "name": "CardWithCenterText",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/card/card-with-center-text/card-with-center-text.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/card/card-with-center-text/card-with-center-text.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  title: { control: 'text' },\n  value: { control: 'text' },\n  text: { control: 'text' },\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/card/card-with-center-text/card-with-center-text.component.stories.ts",
                    "type": "Story<CardWithCenterTextComponent>",
                    "defaultValue": "(args: CardWithCenterTextComponent) => ({\n  component: CardWithCenterTextComponent,\n  props: args,\n})"
                }
            ],
            "src/app/atoms/card/card-with-columns-text/card-with-columns-text.component.stories.ts": [
                {
                    "name": "CardWithColumns",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/card/card-with-columns-text/card-with-columns-text.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/card/card-with-columns-text/card-with-columns-text.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/card/card-with-columns-text/card-with-columns-text.component.stories.ts",
                    "type": "Story<CardWithColumnsTextComponent>",
                    "defaultValue": "(args: CardWithColumnsTextComponent) => ({\n  component: CardWithColumnsTextComponent,\n  props: args,\n})"
                }
            ],
            "src/app/atoms/inputs/checkbox/checkbox-circle-input/checkbox-circle-input.component.stories.ts": [
                {
                    "name": "Circle",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/inputs/checkbox/checkbox-circle-input/checkbox-circle-input.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/inputs/checkbox/checkbox-circle-input/checkbox-circle-input.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  isChecked: { control: 'boolean' },\n  title: { control: 'text' }\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/inputs/checkbox/checkbox-circle-input/checkbox-circle-input.component.stories.ts",
                    "type": "Story<CheckboxCircleInputComponent>",
                    "defaultValue": "(args: CheckboxCircleInputComponent) => ({\n  component: CheckboxCircleInputComponent,\n  props: args,\n})"
                }
            ],
            "src/app/atoms/color-picker/color-picker.component.stories.ts": [
                {
                    "name": "Circled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/color-picker/color-picker.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/color-picker/color-picker.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/color-picker/color-picker.component.stories.ts",
                    "type": "Story<ColorPickerComponent>",
                    "defaultValue": "(args: ColorPickerComponent) => ({\n  component: ColorPickerComponent,\n  props: args,\n})"
                }
            ],
            "src/app/atoms/charts/column-chart/column-chart.component.stories.ts": [
                {
                    "name": "Column",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/charts/column-chart/column-chart.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/charts/column-chart/column-chart.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/charts/column-chart/column-chart.component.stories.ts",
                    "type": "Story<ColumnChartComponent>",
                    "defaultValue": "(args: ColumnChartComponent) => ({\n  component: ColumnChartComponent,\n  props: args,\n})"
                }
            ],
            "src/app/app.component.stories.ts": [
                {
                    "name": "Components",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.component.stories.ts",
                    "type": "Story<AppComponent>",
                    "defaultValue": "(args: AppComponent) => ({\n  component: AppComponent,\n  props: args,\n})"
                }
            ],
            "src/app/molecules/menu/composite-menu/composite-menu.stories.ts": [
                {
                    "name": "CompositeMenu",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/menu/composite-menu/composite-menu.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/menu/composite-menu/composite-menu.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  items: { control: 'object' }\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/menu/composite-menu/composite-menu.stories.ts",
                    "type": "Story<CompositeMenuComponent>",
                    "defaultValue": "(args: CompositeMenuComponent) => ({\n  component: CompositeMenuComponent,\n  props: args,\n})"
                }
            ],
            "test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "test.ts",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "test.ts",
                    "type": "literal type"
                }
            ],
            "src/app/atoms/buttons/simpleButton/simpleButton.stories.ts": [
                {
                    "name": "Danger",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/simpleButton/simpleButton.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "DangerBig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/simpleButton/simpleButton.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Dark",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/simpleButton/simpleButton.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/simpleButton/simpleButton.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  backgroundColor: { control: 'color' },\n  color: { control: 'color' },\n  title: { control: 'text' },\n}"
                },
                {
                    "name": "Success",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/simpleButton/simpleButton.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "SuccessAsimetric",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/simpleButton/simpleButton.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "SuccessAsimetricWithIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/simpleButton/simpleButton.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "SuccessBig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/simpleButton/simpleButton.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/simpleButton/simpleButton.stories.ts",
                    "type": "Story<simpleButtonComponent>",
                    "defaultValue": "(args: simpleButtonComponent) => ({\n  component: simpleButtonComponent,\n  props: args,\n})"
                },
                {
                    "name": "Transparent",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/simpleButton/simpleButton.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/app/atoms/buttons/domains-card-buttons/mutable-danger-button/mutable-danger-button.component.stories.ts": [
                {
                    "name": "Danger",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/domains-card-buttons/mutable-danger-button/mutable-danger-button.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/domains-card-buttons/mutable-danger-button/mutable-danger-button.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/domains-card-buttons/mutable-danger-button/mutable-danger-button.component.stories.ts",
                    "type": "Story<MutableDangerButtonComponent>",
                    "defaultValue": "(args: MutableDangerButtonComponent) => ({\n  component: MutableDangerButtonComponent,\n  props: args,\n})"
                }
            ],
            "src/app/atoms/inputs/checkbox/checkbox-input-dark/checkbox-input-dark.component.stories.ts": [
                {
                    "name": "Dark",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/inputs/checkbox/checkbox-input-dark/checkbox-input-dark.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/inputs/checkbox/checkbox-input-dark/checkbox-input-dark.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  isChecked: { control: 'boolean' },\n  title: { control: 'text' }\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/inputs/checkbox/checkbox-input-dark/checkbox-input-dark.component.stories.ts",
                    "type": "Story<CheckboxInputDarkComponent>",
                    "defaultValue": "(args: CheckboxInputDarkComponent) => ({\n  component: CheckboxInputDarkComponent,\n  props: args,\n})"
                }
            ],
            "src/app/molecules/menu/date-menu/date-menu.stories.ts": [
                {
                    "name": "Date",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/menu/date-menu/date-menu.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/menu/date-menu/date-menu.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  backgroundColor: { control: 'color' },\n  items: { control: 'array' }\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/menu/date-menu/date-menu.stories.ts",
                    "type": "Story<DateMenuComponent>",
                    "defaultValue": "(args: DateMenuComponent) => ({\n  component: DateMenuComponent,\n  props: args,\n})"
                }
            ],
            "src/app/organisms/dynamic-sections-list/helpers.ts": [
                {
                    "name": "defineComponentType",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/organisms/dynamic-sections-list/helpers.ts",
                    "type": "",
                    "defaultValue": "(name: string) => {\n  switch(name) {\n    case 'DynamicTextComponent':\n      return 'text';\n    case 'DynamicTableComponent': \n      return 'table';\n    case 'DynamicListComponent':\n      return 'list'\n  }\n}"
                }
            ],
            "src/app/atoms/modals/approve-modal/approve-modal.component.stories.ts": [
                {
                    "name": "DeskApprove",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/modals/approve-modal/approve-modal.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/modals/approve-modal/approve-modal.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/modals/approve-modal/approve-modal.component.stories.ts",
                    "type": "Story<ApproveModalComponent>",
                    "defaultValue": "(args: ApproveModalComponent) => ({\n  component: ApproveModalComponent,\n  props: args,\n  template: `\n  <app-approve-modal \n    [title]=\"title\" \n    [primaryButtonTitle]=\"primaryButtonTitle\"\n    [dangerButtonTitle]=\"dangerButtonTitle\"\n    (primaryButtonFunction)=\"primaryButtonFunction()\"\n    (dangerButtonFunction)=\"dangerButtonFunction()\"\n    (closeModal)=\"closeModal()\"\n  >\n    <p class=\"fs-16-sofia-300\">Do you really want to delete the <strong>Secure Privacy</strong></p>\n  </app-approve-modal>\n  `,\n})"
                }
            ],
            "src/app/atoms/card/card-with-donut-chart/card-with-donut-chart.component.stories.ts": [
                {
                    "name": "DonutChartCard",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/card/card-with-donut-chart/card-with-donut-chart.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/card/card-with-donut-chart/card-with-donut-chart.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/card/card-with-donut-chart/card-with-donut-chart.component.stories.ts",
                    "type": "Story<CardWithDonutChartComponent>",
                    "defaultValue": "(args: CardWithDonutChartComponent) => ({\n  component: CardWithDonutChartComponent,\n  props: args,\n})"
                }
            ],
            "src/app/organisms/dynamic-sections-list/dynamic-sections-list.component.stories.ts": [
                {
                    "name": "Dynamic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/organisms/dynamic-sections-list/dynamic-sections-list.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/organisms/dynamic-sections-list/dynamic-sections-list.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/organisms/dynamic-sections-list/dynamic-sections-list.component.stories.ts",
                    "type": "Story<DynamicSectionsListComponent>",
                    "defaultValue": "(args: DynamicSectionsListComponent) => ({\n  component: DynamicSectionsListComponent,\n  props: args,\n})"
                },
                {
                    "name": "text",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/organisms/dynamic-sections-list/dynamic-sections-list.component.stories.ts",
                    "type": "",
                    "defaultValue": "`For the purpose of this Privacy Policy, we are a Data Controller of your personal information. \nOur legal basis for collecting and using your personal information, as described in this Privacy Policy, \ndepends on the information we collect and the specific context in which we collect it. We may process your\npersonal information because:`"
                }
            ],
            "src/app/atoms/tables/dynamic-table/dynamic-table.component.stories.ts": [
                {
                    "name": "Dynamic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/tables/dynamic-table/dynamic-table.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/tables/dynamic-table/dynamic-table.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/tables/dynamic-table/dynamic-table.component.stories.ts",
                    "type": "Story<DynamicTableComponent>",
                    "defaultValue": "(args: DynamicTableComponent) => ({\n  component: DynamicTableComponent,\n  props: args,\n})"
                }
            ],
            "src/app/atoms/text/dynamic-text/dynamic-text.component.stories.ts": [
                {
                    "name": "Dynamic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/text/dynamic-text/dynamic-text.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/text/dynamic-text/dynamic-text.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/text/dynamic-text/dynamic-text.component.stories.ts",
                    "type": "Story<DynamicTextComponent>",
                    "defaultValue": "(args: DynamicTextComponent) => ({\n  component: DynamicTextComponent,\n  props: args,\n})"
                }
            ],
            "src/app/atoms/tables/dynamic-list/dynamic-list.component.stories.ts": [
                {
                    "name": "DynamicList",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/tables/dynamic-list/dynamic-list.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/tables/dynamic-list/dynamic-list.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/tables/dynamic-list/dynamic-list.component.stories.ts",
                    "type": "Story<DynamicListComponent>",
                    "defaultValue": "(args: DynamicListComponent) => ({\n  component: DynamicListComponent,\n  props: args,\n})"
                }
            ],
            "src/app/atoms/buttons/domains-card-buttons/mutable-primary-button/mutable-primary-button.component.stories.ts": [
                {
                    "name": "EditOnActive",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/domains-card-buttons/mutable-primary-button/mutable-primary-button.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/domains-card-buttons/mutable-primary-button/mutable-primary-button.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  onActive: { control: 'boolean' }\n}"
                },
                {
                    "name": "Reports",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/domains-card-buttons/mutable-primary-button/mutable-primary-button.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/domains-card-buttons/mutable-primary-button/mutable-primary-button.component.stories.ts",
                    "type": "Story<MutablePrimaryButtonComponent>",
                    "defaultValue": "(args: MutablePrimaryButtonComponent) => ({\n  component: MutablePrimaryButtonComponent,\n  props: args,\n})"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "type": "object",
                    "defaultValue": "{\n  production: false\n}"
                }
            ],
            "src/app/molecules/form-screens/form-screen-fifth/form-screen-fifth.stories.ts": [
                {
                    "name": "Fifth",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/form-screens/form-screen-fifth/form-screen-fifth.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/form-screens/form-screen-fifth/form-screen-fifth.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/form-screens/form-screen-fifth/form-screen-fifth.stories.ts",
                    "type": "Story<FormScreenFifthComponent>",
                    "defaultValue": "(args: FormScreenFifthComponent) => ({\n    component: FormScreenFifthComponent,\n    props: args,\n  })"
                }
            ],
            "src/app/molecules/scan-screens/scan-screens.component.stories.ts": [
                {
                    "name": "First",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/scan-screens/scan-screens.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/scan-screens/scan-screens.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/scan-screens/scan-screens.component.stories.ts",
                    "type": "Story<ScanScreensComponent>",
                    "defaultValue": "(args: ScanScreensComponent) => ({\n  component: ScanScreensComponent,\n  props: args,\n})"
                }
            ],
            "src/app/molecules/form-screens/form-screen-first/form-screen-first.stories.ts": [
                {
                    "name": "First",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/form-screens/form-screen-first/form-screen-first.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/form-screens/form-screen-first/form-screen-first.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/form-screens/form-screen-first/form-screen-first.stories.ts",
                    "type": "Story<FormScreenFirstComponent>",
                    "defaultValue": "(args: FormScreenFirstComponent) => ({\n  component: FormScreenFirstComponent,\n  props: args,\n})"
                }
            ],
            "src/app/atoms/tables/transparent-table/transparent-table.component.stories.ts": [
                {
                    "name": "First",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/tables/transparent-table/transparent-table.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/tables/transparent-table/transparent-table.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Second",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/tables/transparent-table/transparent-table.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/tables/transparent-table/transparent-table.component.stories.ts",
                    "type": "Story<TransparentTableComponent>",
                    "defaultValue": "(args: TransparentTableComponent) => ({\n  component: TransparentTableComponent,\n  props: args,\n})"
                }
            ],
            "src/app/atoms/status-steps-dynamic/status-steps-dynamic.component.stories.ts": [
                {
                    "name": "FivePoints",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/status-steps-dynamic/status-steps-dynamic.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "FourPoints",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/status-steps-dynamic/status-steps-dynamic.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/status-steps-dynamic/status-steps-dynamic.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  activePoints: { control: 'number' },\n  background: { control: 'color' }\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/status-steps-dynamic/status-steps-dynamic.component.stories.ts",
                    "type": "Story<StatusStepsDynamicComponent>",
                    "defaultValue": "(args: StatusStepsDynamicComponent) => ({\n  component: StatusStepsDynamicComponent,\n  props: args,\n})"
                },
                {
                    "name": "ThreePoints",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/status-steps-dynamic/status-steps-dynamic.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "WithText",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/status-steps-dynamic/status-steps-dynamic.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/app/molecules/form-screens/form-screen-fourth/form-screen-fourth.stories.ts": [
                {
                    "name": "Fourth",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/form-screens/form-screen-fourth/form-screen-fourth.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/form-screens/form-screen-fourth/form-screen-fourth.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/form-screens/form-screen-fourth/form-screen-fourth.stories.ts",
                    "type": "Story<FormScreenFourthComponent>",
                    "defaultValue": "(args: FormScreenFourthComponent) => ({\n  component: FormScreenFourthComponent,\n  props: args,\n})"
                }
            ],
            "src/app/molecules/customized-element/helpers.ts": [
                {
                    "name": "getEditedDataByType",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/customized-element/helpers.ts",
                    "type": "",
                    "defaultValue": "(type: string, props: any) => {\n  let editedData;\n    if (type === 'table') {\n      editedData = { heads: props.heads, tableData: props.tableData }\n    } else if (type === 'list') {\n      editedData = { listTitle: props.listTitle, titles: props.titles }\n    } else if (type === 'text') {\n      editedData = { title: props.title }\n    }\n  return editedData\n}"
                },
                {
                    "name": "getInitialDataByType",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/customized-element/helpers.ts",
                    "type": "",
                    "defaultValue": "(type: string) => {\n  let initialData;\n    if (type === 'table') {\n      initialData = { heads: ['text 1'], tableData: [{ 'text 1' : '1.1. Text', }, { 'text 1' : '1.1. Text', }] }\n    } else if (type === 'list') {\n      initialData = { listTitle: 'Put list title', titles: ['Type text here'] }\n    } else if (type === 'text') {\n      initialData = { title: 'Your new paragraph' }\n    }\n  return initialData\n}"
                }
            ],
            "src/app/atoms/buttons/gradientButton/gradientButton.stories.ts": [
                {
                    "name": "Gradient",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/gradientButton/gradientButton.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/gradientButton/gradientButton.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  title: { control: 'text' },\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/gradientButton/gradientButton.stories.ts",
                    "type": "Story<gradientButtonComponent>",
                    "defaultValue": "(args: gradientButtonComponent) => ({\n  component: gradientButtonComponent,\n  props: args,\n})"
                }
            ],
            "src/app/atoms/buttons/domains-card-buttons/mutable-gradient-icon-button/mutable-gradient-icon-button.component.stories.ts": [
                {
                    "name": "Gradient",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/domains-card-buttons/mutable-gradient-icon-button/mutable-gradient-icon-button.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/domains-card-buttons/mutable-gradient-icon-button/mutable-gradient-icon-button.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/domains-card-buttons/mutable-gradient-icon-button/mutable-gradient-icon-button.component.stories.ts",
                    "type": "Story<MutableGradientIconButtonComponent>",
                    "defaultValue": "(args: MutableGradientIconButtonComponent) => ({\n  component: MutableGradientIconButtonComponent,\n  props: args,\n})"
                }
            ],
            "src/app/atoms/inputs/checkbox/checkbox-mutable-gradient/checkbox-mutable-gradient.component.stories.ts": [
                {
                    "name": "Gradient",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/inputs/checkbox/checkbox-mutable-gradient/checkbox-mutable-gradient.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/inputs/checkbox/checkbox-mutable-gradient/checkbox-mutable-gradient.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  isChecked: { control: 'boolean' },\n  onActive: { control: 'boolean' },\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/inputs/checkbox/checkbox-mutable-gradient/checkbox-mutable-gradient.component.stories.ts",
                    "type": "Story<CheckboxMutableGradientComponent>",
                    "defaultValue": "(args: CheckboxMutableGradientComponent) => ({\n  component: CheckboxMutableGradientComponent,\n  props: args,\n})"
                }
            ],
            "src/app/molecules/status-bar/status-bar.component.stories.ts": [
                {
                    "name": "Green",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/status-bar/status-bar.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/status-bar/status-bar.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/status-bar/status-bar.component.stories.ts",
                    "type": "Story<StatusBarComponent>",
                    "defaultValue": "(args: StatusBarComponent) => ({\n  component: StatusBarComponent,\n  props: args\n})"
                }
            ],
            "src/app/atoms/text/gradient-text/gradient-text.component.stories.ts": [
                {
                    "name": "Green",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/text/gradient-text/gradient-text.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/text/gradient-text/gradient-text.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  title: { control: 'text' },\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/text/gradient-text/gradient-text.component.stories.ts",
                    "type": "Story<GradientTextComponent>",
                    "defaultValue": "(args: GradientTextComponent) => ({\n  component: GradientTextComponent,\n  props: args,\n})"
                }
            ],
            "src/app/atoms/text/text-with-after-gradient-line/text-with-after-gradient-line.component.stories.ts": [
                {
                    "name": "Green",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/text/text-with-after-gradient-line/text-with-after-gradient-line.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/text/text-with-after-gradient-line/text-with-after-gradient-line.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  title: { control: 'text' },\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/text/text-with-after-gradient-line/text-with-after-gradient-line.component.stories.ts",
                    "type": "Story<TextWithAfterGradientLineComponent>",
                    "defaultValue": "(args: TextWithAfterGradientLineComponent) => ({\n  component: TextWithAfterGradientLineComponent,\n  props: args,\n})"
                }
            ],
            "src/app/atoms/text/text-with-gradient-back/text-with-gradient-back.component.stories.ts": [
                {
                    "name": "Green",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/text/text-with-gradient-back/text-with-gradient-back.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/text/text-with-gradient-back/text-with-gradient-back.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  titles: { control: 'array' },\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/text/text-with-gradient-back/text-with-gradient-back.component.stories.ts",
                    "type": "Story<TextWithGradientBackComponent>",
                    "defaultValue": "(args: TextWithGradientBackComponent) => ({\n  component: TextWithGradientBackComponent,\n  props: args,\n})"
                }
            ],
            "src/app/atoms/navLink/textLinks/navLink.stories.ts": [
                {
                    "name": "Highlited",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/navLink/textLinks/navLink.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Main",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/navLink/textLinks/navLink.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/navLink/textLinks/navLink.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  title: { control: 'text' },\n  isActive: { control: 'boolean' }\n}"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/navLink/textLinks/navLink.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/navLink/textLinks/navLink.stories.ts",
                    "type": "Story<navLinkComponent>",
                    "defaultValue": "(args: navLinkComponent) => ({\n  component: navLinkComponent,\n  props: args,\n})"
                }
            ],
            "src/app/atoms/navLink/icon-links/icon-links.component.stories.ts": [
                {
                    "name": "Icon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/navLink/icon-links/icon-links.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/navLink/icon-links/icon-links.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  title: { control: 'text' },\n  isActive: { control: 'boolean' }\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/navLink/icon-links/icon-links.component.stories.ts",
                    "type": "Story<IconLinksComponent>",
                    "defaultValue": "(args: IconLinksComponent) => ({\n  component: IconLinksComponent,\n  props: args,\n})"
                }
            ],
            "src/app/atoms/buttons/infoButton/infoButton.stories.ts": [
                {
                    "name": "Info",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/infoButton/infoButton.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/infoButton/infoButton.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  backgroundColor: { control: 'color' },\n  color: { control: 'color' },\n  title: { control: 'text' },\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/infoButton/infoButton.stories.ts",
                    "type": "Story<infoButtonComponent>",
                    "defaultValue": "(args: infoButtonComponent) => ({\n  component: infoButtonComponent,\n  props: args,\n})"
                }
            ],
            "src/app/atoms/buttons/largeButton/largeButton.stories.ts": [
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/largeButton/largeButton.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/largeButton/largeButton.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  backgroundColor: { control: 'color' },\n  color: { control: 'color' },\n  title: { control: 'text' },\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/largeButton/largeButton.stories.ts",
                    "type": "Story<largeButtonComponent>",
                    "defaultValue": "(args: largeButtonComponent) => ({\n  component: largeButtonComponent,\n  props: args,\n})"
                }
            ],
            "src/app/atoms/charts/linear-chart/linear-chart.component.stories.ts": [
                {
                    "name": "Linear",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/charts/linear-chart/linear-chart.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/charts/linear-chart/linear-chart.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/charts/linear-chart/linear-chart.component.stories.ts",
                    "type": "Story<LinearChartComponent>",
                    "defaultValue": "(args: LinearChartComponent) => ({\n  component: LinearChartComponent,\n  props: args,\n})"
                }
            ],
            "src/app/atoms/charts/map-chart/map-chart.component.stories.ts": [
                {
                    "name": "Map",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/charts/map-chart/map-chart.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/charts/map-chart/map-chart.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/charts/map-chart/map-chart.component.stories.ts",
                    "type": "Story<MapChartComponent>",
                    "defaultValue": "(args: MapChartComponent) => ({\n  component: MapChartComponent,\n  props: args,\n})"
                }
            ],
            "src/app/atoms/buttons/mobile-button/mobile-button.component.stories.ts": [
                {
                    "name": "Mobile",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/mobile-button/mobile-button.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/mobile-button/mobile-button.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  isOpen: { control: 'boolean' }\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/mobile-button/mobile-button.component.stories.ts",
                    "type": "Story<MobileButtonComponent>",
                    "defaultValue": "(args: MobileButtonComponent) => ({\n  component: MobileButtonComponent,\n  props: args,\n})"
                }
            ],
            "src/app/molecules/menu/mobile-main-navigation-menu/mobile-main-navigation-menu.component.stories.ts": [
                {
                    "name": "MobileNavigation",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/menu/mobile-main-navigation-menu/mobile-main-navigation-menu.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/menu/mobile-main-navigation-menu/mobile-main-navigation-menu.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  items: { control: 'object' }\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/menu/mobile-main-navigation-menu/mobile-main-navigation-menu.component.stories.ts",
                    "type": "Story<MobileMainNavigationMenuComponent>",
                    "defaultValue": "(args: MobileMainNavigationMenuComponent) => ({\n  component: MobileMainNavigationMenuComponent,\n  props: args,\n})"
                }
            ],
            "src/app/molecules/menu/main-navigation-menu/main-navigation-menu.component.stories.ts": [
                {
                    "name": "Navigation",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/menu/main-navigation-menu/main-navigation-menu.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/menu/main-navigation-menu/main-navigation-menu.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  backgroundColor: { control: 'color' },\n  items: { control: 'array' }\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/menu/main-navigation-menu/main-navigation-menu.component.stories.ts",
                    "type": "Story<MainNavigationMenuComponent>",
                    "defaultValue": "(args: MainNavigationMenuComponent) => ({\n  component: MainNavigationMenuComponent,\n  props: args,\n})"
                }
            ],
            "src/app/atoms/icons/round-icon/round-icon.component.stories.ts": [
                {
                    "name": "Negative",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/icons/round-icon/round-icon.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Positive",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/icons/round-icon/round-icon.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/icons/round-icon/round-icon.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/icons/round-icon/round-icon.component.stories.ts",
                    "type": "Story<RoundIconComponent>",
                    "defaultValue": "(args: RoundIconComponent) => ({\n  component: RoundIconComponent,\n  props: args,\n})"
                },
                {
                    "name": "withBoldText",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/icons/round-icon/round-icon.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "withBoldTextAndLink",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/icons/round-icon/round-icon.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/app/atoms/card/onboarding-card/onboarding-card.component.stories.ts": [
                {
                    "name": "OnBoarding",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/card/onboarding-card/onboarding-card.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/card/onboarding-card/onboarding-card.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/card/onboarding-card/onboarding-card.component.stories.ts",
                    "type": "Story<OnboardingCardComponent>",
                    "defaultValue": "(args: OnboardingCardComponent) => ({\n  component: OnboardingCardComponent,\n  props: args,\n})"
                }
            ],
            "src/app/molecules/onboarding-list/onboarding-list.component.stories.ts": [
                {
                    "name": "OnboardingList",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/onboarding-list/onboarding-list.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/onboarding-list/onboarding-list.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/onboarding-list/onboarding-list.component.stories.ts",
                    "type": "Story<OnboardingListComponent>",
                    "defaultValue": "(args: OnboardingListComponent) => ({\n  component: OnboardingListComponent,\n  props: args,\n})"
                }
            ],
            "src/app/atoms/buttons/domains-card-buttons/mutable-light-button/mutable-light-button.component.stories.ts": [
                {
                    "name": "Options",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/domains-card-buttons/mutable-light-button/mutable-light-button.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/domains-card-buttons/mutable-light-button/mutable-light-button.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/domains-card-buttons/mutable-light-button/mutable-light-button.component.stories.ts",
                    "type": "Story<MutableLightButtonComponent>",
                    "defaultValue": "(args: MutableLightButtonComponent) => ({\n  component: MutableLightButtonComponent,\n  props: args,\n})"
                }
            ],
            "src/app/atoms/buttons/primaryButton/primaryButton.stories.ts": [
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/primaryButton/primaryButton.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/primaryButton/primaryButton.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  backgroundColor: { control: 'color' },\n  title: { control: 'text' },\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/primaryButton/primaryButton.stories.ts",
                    "type": "Story<primaryButtonComponent>",
                    "defaultValue": "(args: primaryButtonComponent) => ({\n  component: primaryButtonComponent,\n  props: args,\n})"
                }
            ],
            "src/app/molecules/card-row/card-row.component.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/card-row/card-row.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Row",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/card-row/card-row.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/card-row/card-row.component.stories.ts",
                    "type": "Story<CardRowComponent>",
                    "defaultValue": "(args: CardRowComponent) => ({\n  component: CardRowComponent,\n  props: args,\n})"
                }
            ],
            "src/app/molecules/customized-element/customized-element.component.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/customized-element/customized-element.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/customized-element/customized-element.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/customized-element/customized-element.component.stories.ts",
                    "type": "Story<CustomizedElementComponent>",
                    "defaultValue": "(args: CustomizedElementComponent) => ({\n  component: CustomizedElementComponent,\n  props: args,\n})"
                }
            ],
            "src/app/molecules/roll-up/roll-up.component.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/roll-up/roll-up.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/roll-up/roll-up.component.stories.ts",
                    "type": "Story<RollUpComponent>",
                    "defaultValue": "(args: RollUpComponent) => ({\n  component: RollUpComponent,\n  props: args,\n  template: `\n  <app-roll-up [title]=\"title\" [number]=\"number\">\n    <app-transparent-table \n      [mainColumn]=\"mainColumn\"\n      [data]=\"data\"\n      [heads]=\"heads\"\n    >\n      </app-transparent-table>\n  </app-roll-up>\n  `,\n})"
                },
                {
                    "name": "WithTable",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/roll-up/roll-up.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/app/atoms/card/card.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/card/card.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  backgroundColor: { control: 'color' },\n  color: { control: 'color' },\n  src: { control: 'text' },\n  title: { control: 'text' },\n  text: { control: 'text' },\n  isActive: { control: 'boolean' }\n}"
                },
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/card/card.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/card/card.stories.ts",
                    "type": "Story<CardComponent>",
                    "defaultValue": "(args: CardComponent) => ({\n  component: CardComponent,\n  props: args,\n})"
                }
            ],
            "src/app/atoms/iconContainer/iconContainer.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/iconContainer/iconContainer.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  backgroundColor: { control: 'color' },\n}"
                },
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/iconContainer/iconContainer.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/iconContainer/iconContainer.stories.ts",
                    "type": "Story<IconContainerComponent>",
                    "defaultValue": "(args: IconContainerComponent) => ({\n  component: IconContainerComponent,\n  props: args,\n})"
                }
            ],
            "src/app/atoms/scan-animation/scan-animation.component.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/scan-animation/scan-animation.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Scan",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/scan-animation/scan-animation.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/scan-animation/scan-animation.component.stories.ts",
                    "type": "Story<ScanAnimationComponent>",
                    "defaultValue": "(args: ScanAnimationComponent) => ({\n  component: ScanAnimationComponent,\n  props: args,\n})"
                }
            ],
            "src/app/atoms/searchItem/searchItem.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/searchItem/searchItem.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  title: { control: 'text' },\n}"
                },
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/searchItem/searchItem.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/searchItem/searchItem.stories.ts",
                    "type": "Story<searchItemComponent>",
                    "defaultValue": "(args: searchItemComponent) => ({\n  component: searchItemComponent,\n  props: args,\n})"
                },
                {
                    "name": "WithIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/searchItem/searchItem.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/app/atoms/semicircle-chart/semicircle-chart.component.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/semicircle-chart/semicircle-chart.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  percent: { control: 'array' },\n}"
                },
                {
                    "name": "Semicirce",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/semicircle-chart/semicircle-chart.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/semicircle-chart/semicircle-chart.component.stories.ts",
                    "type": "Story<SemicircleChartComponent>",
                    "defaultValue": "(args: SemicircleChartComponent) => ({\n  component: SemicircleChartComponent,\n  props: args,\n})"
                }
            ],
            "src/app/atoms/steps/steps.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/steps/steps.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  activePoints: { control: 'number' }\n}"
                },
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/steps/steps.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/steps/steps.stories.ts",
                    "type": "Story<StepsComponent>",
                    "defaultValue": "(args: StepsComponent) => ({\n  component: StepsComponent,\n  props: args,\n})"
                }
            ],
            "src/app/organisms/registration-form/registration-form.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/organisms/registration-form/registration-form.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "RegistrationForm",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/organisms/registration-form/registration-form.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/organisms/registration-form/registration-form.stories.ts",
                    "type": "Story<RegistrationFormComponent>",
                    "defaultValue": "(args: RegistrationFormComponent) => ({\n  component: RegistrationFormComponent,\n  props: args,\n})"
                }
            ],
            "src/app/organisms/scan-report/scan-report.component.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/organisms/scan-report/scan-report.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "ScanReport",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/organisms/scan-report/scan-report.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/organisms/scan-report/scan-report.component.stories.ts",
                    "type": "Story<ScanReportComponent>",
                    "defaultValue": "(args: ScanReportComponent) => ({\n  component: ScanReportComponent,\n  props: args,\n})"
                }
            ],
            "src/app/molecules/layouts/white-rounded-layout/white-rounded-layout.component.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/layouts/white-rounded-layout/white-rounded-layout.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/layouts/white-rounded-layout/white-rounded-layout.component.stories.ts",
                    "type": "Story<WhiteRoundedLayoutComponent>",
                    "defaultValue": "(args: WhiteRoundedLayoutComponent) => ({\n  component: WhiteRoundedLayoutComponent,\n  props: args,\n  template: `\n  <app-white-rounded-layout [titles]=\"titles\">\n    <app-text-with-after-gradient-line [title]=\"'scan report'\"></app-text-with-after-gradient-line>\n  </app-white-rounded-layout>\n  `,\n})"
                },
                {
                    "name": "WhiteRounded",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/layouts/white-rounded-layout/white-rounded-layout.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/app/molecules/form-screens/form-screen-third/form-screen-third.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/form-screens/form-screen-third/form-screen-third.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/form-screens/form-screen-third/form-screen-third.stories.ts",
                    "type": "Story<FormScreenThirdComponent>",
                    "defaultValue": "(args: FormScreenThirdComponent) => ({\n  component: FormScreenThirdComponent,\n  props: args,\n})"
                },
                {
                    "name": "Third",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/form-screens/form-screen-third/form-screen-third.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/app/molecules/form-screens/form-screen-second/form-screen-second.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/form-screens/form-screen-second/form-screen-second.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Second",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/form-screens/form-screen-second/form-screen-second.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/form-screens/form-screen-second/form-screen-second.stories.ts",
                    "type": "Story<FormScreenSecondComponent>",
                    "defaultValue": "(args: FormScreenSecondComponent) => ({\n  component: FormScreenSecondComponent,\n  props: args,\n})"
                }
            ],
            "src/app/molecules/menu/side-menu/side-menu.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/menu/side-menu/side-menu.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  backgroundColor: { control: 'color' },\n  items: { control: 'array' }\n}"
                },
                {
                    "name": "Side",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/menu/side-menu/side-menu.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/menu/side-menu/side-menu.stories.ts",
                    "type": "Story<SideMenuComponent>",
                    "defaultValue": "(args: SideMenuComponent) => ({\n  component: SideMenuComponent,\n  props: args,\n})"
                }
            ],
            "src/app/molecules/menu/tab-menu/tab-menu.component.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/menu/tab-menu/tab-menu.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  items: { control: 'object' }\n}"
                },
                {
                    "name": "Tab",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/menu/tab-menu/tab-menu.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/molecules/menu/tab-menu/tab-menu.component.stories.ts",
                    "type": "Story<TabMenuComponent>",
                    "defaultValue": "(args: TabMenuComponent) => ({\n  component: TabMenuComponent,\n  props: args,\n})"
                }
            ],
            "src/app/atoms/buttons/secondary-border-button/secondary-border-button.component.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/secondary-border-button/secondary-border-button.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  backgroundColor: { control: 'color' },\n  color: { control: 'color' },\n  title: { control: 'text' },\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/secondary-border-button/secondary-border-button.component.stories.ts",
                    "type": "Story<SecondaryBorderButtonComponent>",
                    "defaultValue": "(args: SecondaryBorderButtonComponent) => ({\n  component: SecondaryBorderButtonComponent,\n  props: args,\n})"
                },
                {
                    "name": "ZoomIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/secondary-border-button/secondary-border-button.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "ZoomOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/secondary-border-button/secondary-border-button.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/app/atoms/card/card-report-status/card-report-status.component.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/card/card-report-status/card-report-status.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "ReportStatus",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/card/card-report-status/card-report-status.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/card/card-report-status/card-report-status.component.stories.ts",
                    "type": "Story<CardReportStatusComponent>",
                    "defaultValue": "(args: CardReportStatusComponent) => ({\n  component: CardReportStatusComponent,\n  props: args,\n})"
                }
            ],
            "src/app/atoms/buttons/secondaryButton/secondaryButton.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/secondaryButton/secondaryButton.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  backgroundColor: { control: 'color' },\n  color: { control: 'color' },\n  title: { control: 'text' },\n}"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/secondaryButton/secondaryButton.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/secondaryButton/secondaryButton.stories.ts",
                    "type": "Story<secondaryButtonComponent>",
                    "defaultValue": "(args: secondaryButtonComponent) => ({\n  component: secondaryButtonComponent,\n  props: args,\n})"
                }
            ],
            "src/app/atoms/card/semicircle-chart-card/semicircle-chart-card.component.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/card/semicircle-chart-card/semicircle-chart-card.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "SemicircleChart",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/card/semicircle-chart-card/semicircle-chart-card.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/card/semicircle-chart-card/semicircle-chart-card.component.stories.ts",
                    "type": "Story<SemicircleChartCardComponent>",
                    "defaultValue": "(args: SemicircleChartCardComponent) => ({\n  component: SemicircleChartCardComponent,\n  props: args,\n})"
                }
            ],
            "src/app/atoms/charts/round-chart/round-chart.component.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/charts/round-chart/round-chart.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Round",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/charts/round-chart/round-chart.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/charts/round-chart/round-chart.component.stories.ts",
                    "type": "Story<RoundChartComponent>",
                    "defaultValue": "(args: RoundChartComponent) => ({\n  component: RoundChartComponent,\n  props: args,\n})"
                }
            ],
            "src/app/atoms/counters/simple-counter/simple-counter.component.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/counters/simple-counter/simple-counter.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/counters/simple-counter/simple-counter.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/counters/simple-counter/simple-counter.component.stories.ts",
                    "type": "Story<SimpleCounterComponent>",
                    "defaultValue": "(args: SimpleCounterComponent) => ({\n  component: SimpleCounterComponent,\n  props: args,\n})"
                }
            ],
            "src/app/atoms/filter-components/selected-item/selected-item.component.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/filter-components/selected-item/selected-item.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/filter-components/selected-item/selected-item.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/filter-components/selected-item/selected-item.component.stories.ts",
                    "type": "Story<SelectedItemComponent>",
                    "defaultValue": "(args: SelectedItemComponent) => ({\n  component: SelectedItemComponent,\n  props: args,\n})"
                }
            ],
            "src/app/atoms/inputs/formInput/formInput.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/inputs/formInput/formInput.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  placeholder: { control: 'text' },\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/inputs/formInput/formInput.stories.ts",
                    "type": "Story<formInputComponent>",
                    "defaultValue": "(args: formInputComponent) => ({\n  component: formInputComponent,\n  props: args,\n})"
                },
                {
                    "name": "Text",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/inputs/formInput/formInput.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/app/atoms/buttons/add-buttons/dark-add-button/dark-add-button.component.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/add-buttons/dark-add-button/dark-add-button.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "SmallDark",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/add-buttons/dark-add-button/dark-add-button.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/buttons/add-buttons/dark-add-button/dark-add-button.component.stories.ts",
                    "type": "Story<DarkAddButtonComponent>",
                    "defaultValue": "(args: DarkAddButtonComponent) => ({\n  component: DarkAddButtonComponent,\n  props: args,\n})"
                }
            ],
            "src/app/atoms/inputs/checkbox/checkbox-input-simple/checkbox-input-simple.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/inputs/checkbox/checkbox-input-simple/checkbox-input-simple.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  isChecked: { control: 'boolean' },\n  title: { control: 'text' }\n}"
                },
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/inputs/checkbox/checkbox-input-simple/checkbox-input-simple.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/inputs/checkbox/checkbox-input-simple/checkbox-input-simple.stories.ts",
                    "type": "Story<CheckboxInputSimpleComponent>",
                    "defaultValue": "(args: CheckboxInputSimpleComponent) => ({\n  component: CheckboxInputSimpleComponent,\n  props: args,\n})"
                }
            ],
            "src/app/atoms/inputs/checkbox/checkbox-input-switch/checkbox-input-switch.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/inputs/checkbox/checkbox-input-switch/checkbox-input-switch.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  isChecked: { control: 'boolean' },\n}"
                },
                {
                    "name": "Switch",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/inputs/checkbox/checkbox-input-switch/checkbox-input-switch.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/inputs/checkbox/checkbox-input-switch/checkbox-input-switch.stories.ts",
                    "type": "Story<CheckboxInputSwitchComponent>",
                    "defaultValue": "(args: CheckboxInputSwitchComponent) => ({\n  component: CheckboxInputSwitchComponent,\n  props: args,\n})"
                }
            ],
            "src/app/atoms/inputs/select-input/select-input-search/select-input-search.component.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/inputs/select-input/select-input-search/select-input-search.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Search",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/inputs/select-input/select-input-search/select-input-search.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "SearchIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/inputs/select-input/select-input-search/select-input-search.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/inputs/select-input/select-input-search/select-input-search.component.stories.ts",
                    "type": "Story<SelectInputSearchComponent>",
                    "defaultValue": "(args: SelectInputSearchComponent) => ({\n  component: SelectInputSearchComponent,\n  props: args,\n})"
                }
            ],
            "src/app/atoms/inputs/select-input/select-input-simple/select-input-simple.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/inputs/select-input/select-input-simple/select-input-simple.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  initialValue: { control: 'text' },\n  items: { control: 'array' }\n}"
                },
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/inputs/select-input/select-input-simple/select-input-simple.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/inputs/select-input/select-input-simple/select-input-simple.stories.ts",
                    "type": "Story<SelectInputSimpleComponent>",
                    "defaultValue": "(args: SelectInputSimpleComponent) => ({\n  component: SelectInputSimpleComponent,\n  props: args,\n})"
                }
            ],
            "src/app/atoms/inputs/textarea/simple-textarea/simple-textarea.component.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/inputs/textarea/simple-textarea/simple-textarea.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/inputs/textarea/simple-textarea/simple-textarea.component.stories.ts",
                    "type": "Story<SimpleTextareaComponent>",
                    "defaultValue": "(args: SimpleTextareaComponent) => ({\n  component: SimpleTextareaComponent,\n  props: args,\n})"
                },
                {
                    "name": "Textarea",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/inputs/textarea/simple-textarea/simple-textarea.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/app/atoms/inputs/select-input/select-input-with-initial-value/select-input-with-initial-value.component.stories.ts": [
                {
                    "name": "props",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/inputs/select-input/select-input-with-initial-value/select-input-with-initial-value.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/inputs/select-input/select-input-with-initial-value/select-input-with-initial-value.component.stories.ts",
                    "type": "Story<SelectInputWithInitialValueComponent>",
                    "defaultValue": "(args: SelectInputWithInitialValueComponent) => ({\n  component: SelectInputWithInitialValueComponent,\n  props: args,\n})"
                },
                {
                    "name": "WithInitialValue",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/atoms/inputs/select-input/select-input-with-initial-value/select-input-with-initial-value.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ]
        },
        "groupedFunctions": {
            "src/app/atoms/steps/helpers.ts": [
                {
                    "name": "detectClasses",
                    "file": "src/app/atoms/steps/helpers.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "description": "",
                    "args": [
                        {
                            "name": "num"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "num",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/atoms/status-steps-dynamic/helpers.ts": [
                {
                    "name": "detectClasses",
                    "file": "src/app/atoms/status-steps-dynamic/helpers.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "description": "",
                    "args": [
                        {
                            "name": "total"
                        },
                        {
                            "name": "active"
                        },
                        {
                            "name": "list"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "total",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "active",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "list",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/atoms/charts/column-chart/helpers.ts": [
                {
                    "name": "getRandomColor",
                    "file": "src/app/atoms/charts/column-chart/helpers.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "description": "",
                    "args": []
                }
            ],
            "src/app/atoms/charts/round-chart/helpers.ts": [
                {
                    "name": "getRandomColor",
                    "file": "src/app/atoms/charts/round-chart/helpers.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "description": "",
                    "args": []
                }
            ]
        },
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "e2e/src/app.po.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AppPage",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Components",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/add-buttons/dark-add-button/dark-add-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/add-buttons/dark-add-button/dark-add-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SmallDark",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/add-buttons/dark-add-button/dark-add-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/add-buttons/dark-add-button/dark-add-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DarkAddButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/add-buttons/small-light-add-button/small-light-add-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BigLight",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/add-buttons/small-light-add-button/small-light-add-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/add-buttons/small-light-add-button/small-light-add-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SmallLight",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/add-buttons/small-light-add-button/small-light-add-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/add-buttons/small-light-add-button/small-light-add-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SmallLightAddButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/domains-card-buttons/mutable-danger-button/mutable-danger-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Danger",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/domains-card-buttons/mutable-danger-button/mutable-danger-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/domains-card-buttons/mutable-danger-button/mutable-danger-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/domains-card-buttons/mutable-danger-button/mutable-danger-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MutableDangerButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/domains-card-buttons/mutable-gradient-icon-button/mutable-gradient-icon-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Gradient",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/domains-card-buttons/mutable-gradient-icon-button/mutable-gradient-icon-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/domains-card-buttons/mutable-gradient-icon-button/mutable-gradient-icon-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/domains-card-buttons/mutable-gradient-icon-button/mutable-gradient-icon-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MutableGradientIconButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/domains-card-buttons/mutable-light-button/mutable-light-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Options",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/domains-card-buttons/mutable-light-button/mutable-light-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/domains-card-buttons/mutable-light-button/mutable-light-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/domains-card-buttons/mutable-light-button/mutable-light-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MutableLightButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/domains-card-buttons/mutable-primary-button/mutable-primary-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "EditOnActive",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/domains-card-buttons/mutable-primary-button/mutable-primary-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/domains-card-buttons/mutable-primary-button/mutable-primary-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Reports",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/domains-card-buttons/mutable-primary-button/mutable-primary-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/domains-card-buttons/mutable-primary-button/mutable-primary-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MutablePrimaryButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/gradientButton/gradientButton.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "gradientButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/gradientButton/gradientButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Gradient",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/gradientButton/gradientButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/gradientButton/gradientButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/infoButton/infoButton.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "infoButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/infoButton/infoButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Info",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/infoButton/infoButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/infoButton/infoButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/largeButton/largeButton.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "largeButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/largeButton/largeButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/largeButton/largeButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/largeButton/largeButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/light-assimetric-button/light-assimetric-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Back",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/light-assimetric-button/light-assimetric-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/light-assimetric-button/light-assimetric-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/light-assimetric-button/light-assimetric-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LightAssimetricButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/lightButton/lightButton.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "lightButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/lightButton/lightButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Back",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/lightButton/lightButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Plus",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/lightButton/lightButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/lightButton/lightButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/mobile-button/mobile-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Mobile",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/mobile-button/mobile-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/mobile-button/mobile-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/mobile-button/mobile-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MobileButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/primaryButton/primaryButton.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "primaryButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/primaryButton/primaryButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/primaryButton/primaryButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/primaryButton/primaryButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/secondary-border-button/secondary-border-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/secondary-border-button/secondary-border-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/secondary-border-button/secondary-border-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ZoomIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/secondary-border-button/secondary-border-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ZoomOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/secondary-border-button/secondary-border-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SecondaryBorderButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/secondaryButton/secondaryButton.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "secondaryButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/secondaryButton/secondaryButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/secondaryButton/secondaryButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/secondaryButton/secondaryButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/simpleButton/simpleButton.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "simpleButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/simpleButton/simpleButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Danger",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/simpleButton/simpleButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DangerBig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/simpleButton/simpleButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Dark",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/simpleButton/simpleButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/simpleButton/simpleButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Success",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/simpleButton/simpleButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SuccessAsimetric",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/simpleButton/simpleButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SuccessAsimetricWithIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/simpleButton/simpleButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SuccessBig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/simpleButton/simpleButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/buttons/simpleButton/simpleButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Transparent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/card/card-report-status/card-report-status.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/card/card-report-status/card-report-status.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ReportStatus",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/card/card-report-status/card-report-status.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/card/card-report-status/card-report-status.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardReportStatusComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/card/card-report-status/card-report-status.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Text",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/card/card-reports/card-reports.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CardReports",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/card/card-reports/card-reports.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/card/card-reports/card-reports.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/card/card-reports/card-reports.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardReportsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/card/card-with-center-text/card-with-center-text.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CardWithCenterText",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/card/card-with-center-text/card-with-center-text.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/card/card-with-center-text/card-with-center-text.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/card/card-with-center-text/card-with-center-text.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardWithCenterTextComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/card/card-with-columns-text/card-with-columns-text.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CardWithColumns",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/card/card-with-columns-text/card-with-columns-text.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/card/card-with-columns-text/card-with-columns-text.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/card/card-with-columns-text/card-with-columns-text.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardWithColumnsTextComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/card/card-with-donut-chart/card-with-donut-chart.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DonutChartCard",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/card/card-with-donut-chart/card-with-donut-chart.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/card/card-with-donut-chart/card-with-donut-chart.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/card/card-with-donut-chart/card-with-donut-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardWithDonutChartComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/card/card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/card/card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/card/card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/card/card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/card/onboarding-card/onboarding-card.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "OnBoarding",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/card/onboarding-card/onboarding-card.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/card/onboarding-card/onboarding-card.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/card/onboarding-card/onboarding-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OnboardingCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/28",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/card/semicircle-chart-card/semicircle-chart-card.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/card/semicircle-chart-card/semicircle-chart-card.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SemicircleChart",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/card/semicircle-chart-card/semicircle-chart-card.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/card/semicircle-chart-card/semicircle-chart-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SemicircleChartCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/charts/column-chart/column-chart.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Column",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/charts/column-chart/column-chart.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/charts/column-chart/column-chart.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/charts/column-chart/column-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ColumnChartComponent",
                "coveragePercent": 0,
                "coverageCount": "0/26",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/charts/column-chart/helpers.ts",
                "type": "function",
                "linksubtype": "function",
                "name": "getRandomColor",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/charts/linear-chart/linear-chart.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Linear",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/charts/linear-chart/linear-chart.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/charts/linear-chart/linear-chart.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/charts/linear-chart/linear-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LinearChartComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/charts/map-chart/countriesCodes.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AfricaCodes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/charts/map-chart/countriesCodes.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AsiaCodes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/charts/map-chart/countriesCodes.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AustraliaCodes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/charts/map-chart/countriesCodes.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "EuropeCodes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/charts/map-chart/countriesCodes.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NorthAmericaCodes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/charts/map-chart/countriesCodes.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SouthAmericaCodes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/charts/map-chart/map-chart.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Map",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/charts/map-chart/map-chart.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/charts/map-chart/map-chart.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/charts/map-chart/map-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MapChartComponent",
                "coveragePercent": 0,
                "coverageCount": "0/18",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/charts/map-chart/map-chart.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Countries",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/charts/map-chart/map-chart.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Country",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/charts/round-chart/helpers.ts",
                "type": "function",
                "linksubtype": "function",
                "name": "getRandomColor",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/charts/round-chart/round-chart.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/charts/round-chart/round-chart.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Round",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/charts/round-chart/round-chart.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/charts/round-chart/round-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RoundChartComponent",
                "coveragePercent": 0,
                "coverageCount": "0/20",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/charts/round-chart/round-chart.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Data",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/color-picker/color-picker.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Circled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/color-picker/color-picker.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/color-picker/color-picker.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/color-picker/color-picker.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ColorPickerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/counters/simple-counter/simple-counter.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/counters/simple-counter/simple-counter.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/counters/simple-counter/simple-counter.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/counters/simple-counter/simple-counter.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SimpleCounterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/filter-components/selected-item/selected-item.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/filter-components/selected-item/selected-item.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/filter-components/selected-item/selected-item.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/filter-components/selected-item/selected-item.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SelectedItemComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/iconContainer/iconContainer.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IconContainerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/iconContainer/iconContainer.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/iconContainer/iconContainer.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/iconContainer/iconContainer.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/icons/round-icon/round-icon.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Negative",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/icons/round-icon/round-icon.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Positive",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/icons/round-icon/round-icon.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/icons/round-icon/round-icon.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/icons/round-icon/round-icon.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "withBoldText",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/icons/round-icon/round-icon.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "withBoldTextAndLink",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/icons/round-icon/round-icon.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RoundIconComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/checkbox/checkbox-circle-input/checkbox-circle-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Circle",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/checkbox/checkbox-circle-input/checkbox-circle-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/checkbox/checkbox-circle-input/checkbox-circle-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/checkbox/checkbox-circle-input/checkbox-circle-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CheckboxCircleInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/checkbox/checkbox-input-dark/checkbox-input-dark.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Dark",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/checkbox/checkbox-input-dark/checkbox-input-dark.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/checkbox/checkbox-input-dark/checkbox-input-dark.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/checkbox/checkbox-input-dark/checkbox-input-dark.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CheckboxInputDarkComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/checkbox/checkbox-input-simple/checkbox-input-simple.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CheckboxInputSimpleComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/checkbox/checkbox-input-simple/checkbox-input-simple.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/checkbox/checkbox-input-simple/checkbox-input-simple.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/checkbox/checkbox-input-simple/checkbox-input-simple.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/checkbox/checkbox-input-switch/checkbox-input-switch.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CheckboxInputSwitchComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/checkbox/checkbox-input-switch/checkbox-input-switch.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/checkbox/checkbox-input-switch/checkbox-input-switch.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Switch",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/checkbox/checkbox-input-switch/checkbox-input-switch.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/checkbox/checkbox-mutable-gradient/checkbox-mutable-gradient.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Gradient",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/checkbox/checkbox-mutable-gradient/checkbox-mutable-gradient.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/checkbox/checkbox-mutable-gradient/checkbox-mutable-gradient.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/checkbox/checkbox-mutable-gradient/checkbox-mutable-gradient.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CheckboxMutableGradientComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/formInput/formInput.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "formInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/formInput/formInput.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/formInput/formInput.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/formInput/formInput.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Text",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/select-input/select-input-search/select-input-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/select-input/select-input-search/select-input-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Search",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/select-input/select-input-search/select-input-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SearchIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/select-input/select-input-search/select-input-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/select-input/select-input-search/select-input-search.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SelectInputSearchComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/select-input/select-input-simple/select-input-simple.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SelectInputSimpleComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/select-input/select-input-simple/select-input-simple.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/select-input/select-input-simple/select-input-simple.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/select-input/select-input-simple/select-input-simple.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/select-input/select-input-with-initial-value/select-input-with-initial-value.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/select-input/select-input-with-initial-value/select-input-with-initial-value.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/select-input/select-input-with-initial-value/select-input-with-initial-value.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithInitialValue",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/select-input/select-input-with-initial-value/select-input-with-initial-value.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SelectInputWithInitialValueComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/textarea/simple-textarea/simple-textarea.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/textarea/simple-textarea/simple-textarea.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/textarea/simple-textarea/simple-textarea.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Textarea",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/inputs/textarea/simple-textarea/simple-textarea.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SimpleTextareaComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/modals/approve-modal/approve-modal.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DeskApprove",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/modals/approve-modal/approve-modal.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/modals/approve-modal/approve-modal.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/modals/approve-modal/approve-modal.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ApproveModalComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/navLink/icon-links/icon-links.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Icon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/navLink/icon-links/icon-links.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/navLink/icon-links/icon-links.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/navLink/icon-links/icon-links.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IconLinksComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/navLink/textLinks/navLink.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "navLinkComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/navLink/textLinks/navLink.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Highlited",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/navLink/textLinks/navLink.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Main",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/navLink/textLinks/navLink.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/navLink/textLinks/navLink.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/navLink/textLinks/navLink.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/scan-animation/scan-animation.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/scan-animation/scan-animation.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Scan",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/scan-animation/scan-animation.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/scan-animation/scan-animation.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ScanAnimationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/searchItem/searchItem.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "searchItemComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/searchItem/searchItem.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/searchItem/searchItem.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/searchItem/searchItem.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/searchItem/searchItem.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/semicircle-chart/semicircle-chart.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/semicircle-chart/semicircle-chart.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Semicirce",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/semicircle-chart/semicircle-chart.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/semicircle-chart/semicircle-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SemicircleChartComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/status-steps-dynamic/helpers.ts",
                "type": "function",
                "linksubtype": "function",
                "name": "detectClasses",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/status-steps-dynamic/status-steps-dynamic.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FivePoints",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/status-steps-dynamic/status-steps-dynamic.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FourPoints",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/status-steps-dynamic/status-steps-dynamic.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/status-steps-dynamic/status-steps-dynamic.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/status-steps-dynamic/status-steps-dynamic.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ThreePoints",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/status-steps-dynamic/status-steps-dynamic.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithText",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/status-steps-dynamic/status-steps-dynamic.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StatusStepsDynamicComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/steps/helpers.ts",
                "type": "function",
                "linksubtype": "function",
                "name": "detectClasses",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/steps/steps.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StepsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/steps/steps.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/steps/steps.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/steps/steps.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/tables/dynamic-list/dynamic-list.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DynamicList",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/tables/dynamic-list/dynamic-list.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/tables/dynamic-list/dynamic-list.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/tables/dynamic-list/dynamic-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DynamicListComponent",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/tables/dynamic-table/dynamic-table.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Dynamic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/tables/dynamic-table/dynamic-table.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/tables/dynamic-table/dynamic-table.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/tables/dynamic-table/dynamic-table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DynamicTableComponent",
                "coveragePercent": 0,
                "coverageCount": "0/25",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/tables/transparent-table/transparent-table.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "First",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/tables/transparent-table/transparent-table.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/tables/transparent-table/transparent-table.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Second",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/tables/transparent-table/transparent-table.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/tables/transparent-table/transparent-table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TransparentTableComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/text-editor/text-editor.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TextEditorComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/text/dynamic-text/dynamic-text.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Dynamic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/text/dynamic-text/dynamic-text.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/text/dynamic-text/dynamic-text.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/text/dynamic-text/dynamic-text.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DynamicTextComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/text/gradient-text/gradient-text.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Green",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/text/gradient-text/gradient-text.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/text/gradient-text/gradient-text.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/text/gradient-text/gradient-text.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GradientTextComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/text/text-with-after-gradient-line/text-with-after-gradient-line.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Green",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/text/text-with-after-gradient-line/text-with-after-gradient-line.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/text/text-with-after-gradient-line/text-with-after-gradient-line.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/text/text-with-after-gradient-line/text-with-after-gradient-line.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TextWithAfterGradientLineComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/text/text-with-gradient-back/text-with-gradient-back.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Green",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/text/text-with-gradient-back/text-with-gradient-back.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/text/text-with-gradient-back/text-with-gradient-back.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/atoms/text/text-with-gradient-back/text-with-gradient-back.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TextWithGradientBackComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/card-row/card-row.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/card-row/card-row.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Row",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/card-row/card-row.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/card-row/card-row.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardRowComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/customized-element/add-dynamic-component/add-dynamic.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AddComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/customized-element/add-dynamic-component/add-dynamic.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AdComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/customized-element/add-dynamic-component/add-item.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AddItem",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/customized-element/add-dynamic-component/add.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "AddDirective",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/customized-element/add-dynamic-component/add.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AddService",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/customized-element/customized-element.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/customized-element/customized-element.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/customized-element/customized-element.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/customized-element/customized-element.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CustomizedElementComponent",
                "coveragePercent": 0,
                "coverageCount": "0/27",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/customized-element/helpers.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getEditedDataByType",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/customized-element/helpers.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getInitialDataByType",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/form-screens/form-screen-fifth/form-screen-fifth.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormScreenFifthComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/form-screens/form-screen-fifth/form-screen-fifth.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Module",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/form-screens/form-screen-fifth/form-screen-fifth.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Fifth",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/form-screens/form-screen-fifth/form-screen-fifth.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/form-screens/form-screen-fifth/form-screen-fifth.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/form-screens/form-screen-first/form-screen-first.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormScreenFirstComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/form-screens/form-screen-first/form-screen-first.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "First",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/form-screens/form-screen-first/form-screen-first.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/form-screens/form-screen-first/form-screen-first.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/form-screens/form-screen-fourth/form-screen-fourth.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormScreenFourthComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/form-screens/form-screen-fourth/form-screen-fourth.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Module",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/form-screens/form-screen-fourth/form-screen-fourth.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Fourth",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/form-screens/form-screen-fourth/form-screen-fourth.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/form-screens/form-screen-fourth/form-screen-fourth.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/form-screens/form-screen-second/form-screen-second.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormScreenSecondComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/form-screens/form-screen-second/form-screen-second.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/form-screens/form-screen-second/form-screen-second.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Second",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/form-screens/form-screen-second/form-screen-second.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/form-screens/form-screen-third/form-screen-third.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormScreenThirdComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/form-screens/form-screen-third/form-screen-third.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Module",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/form-screens/form-screen-third/form-screen-third.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/form-screens/form-screen-third/form-screen-third.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/form-screens/form-screen-third/form-screen-third.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Third",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/layouts/white-rounded-layout/white-rounded-layout.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/layouts/white-rounded-layout/white-rounded-layout.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/layouts/white-rounded-layout/white-rounded-layout.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WhiteRounded",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/layouts/white-rounded-layout/white-rounded-layout.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "WhiteRoundedLayoutComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/menu/composite-menu/composite-menu.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CompositeMenuComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/menu/composite-menu/composite-menu.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Item",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/menu/composite-menu/composite-menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CompositeMenu",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/menu/composite-menu/composite-menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/menu/composite-menu/composite-menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/menu/date-menu/date-menu.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DateMenuComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/menu/date-menu/date-menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Date",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/menu/date-menu/date-menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/menu/date-menu/date-menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/menu/main-navigation-menu/main-navigation-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Navigation",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/menu/main-navigation-menu/main-navigation-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/menu/main-navigation-menu/main-navigation-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/menu/main-navigation-menu/main-navigation-menu.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MainNavigationMenuComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/menu/mobile-main-navigation-menu/mobile-main-navigation-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MobileNavigation",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/menu/mobile-main-navigation-menu/mobile-main-navigation-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/menu/mobile-main-navigation-menu/mobile-main-navigation-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/menu/mobile-main-navigation-menu/mobile-main-navigation-menu.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MobileMainNavigationMenuComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/menu/side-menu/side-menu.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SideMenuComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/menu/side-menu/side-menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/menu/side-menu/side-menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Side",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/menu/side-menu/side-menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/menu/tab-menu/tab-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/menu/tab-menu/tab-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Tab",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/menu/tab-menu/tab-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/menu/tab-menu/tab-menu.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TabMenuComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/onboarding-list/onboarding-list.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "OnboardingList",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/onboarding-list/onboarding-list.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/onboarding-list/onboarding-list.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/onboarding-list/onboarding-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OnboardingListComponent",
                "coveragePercent": 0,
                "coverageCount": "0/23",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/onboarding-list/onboarding-list.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Domain",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/roll-up/roll-up.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/roll-up/roll-up.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/roll-up/roll-up.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithTable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/roll-up/roll-up.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RollUpComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/scan-screens/scan-screens.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "First",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/scan-screens/scan-screens.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/scan-screens/scan-screens.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/scan-screens/scan-screens.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ScanScreensComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/status-bar/status-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Green",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/status-bar/status-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/status-bar/status-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/molecules/status-bar/status-bar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StatusBarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/organisms/dynamic-sections-list/dynamic-sections-list.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Dynamic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/organisms/dynamic-sections-list/dynamic-sections-list.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/organisms/dynamic-sections-list/dynamic-sections-list.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/organisms/dynamic-sections-list/dynamic-sections-list.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "text",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/organisms/dynamic-sections-list/dynamic-sections-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DynamicSectionsListComponent",
                "coveragePercent": 0,
                "coverageCount": "0/17",
                "status": "low"
            },
            {
                "filePath": "src/app/organisms/dynamic-sections-list/helpers.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "defineComponentType",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/organisms/registration-form/registration-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RegistrationFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/organisms/registration-form/registration-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/organisms/registration-form/registration-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "RegistrationForm",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/organisms/registration-form/registration-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/organisms/scan-report/scan-report.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/organisms/scan-report/scan-report.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ScanReport",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/organisms/scan-report/scan-report.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/organisms/scan-report/scan-report.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ScanReportComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/organisms/scan-report/scan-report.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "MobileItems",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/organisms/scan-report/scan-report.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SideItems",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}